var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var Achievementreach_1 = require("./script/scene/Achievementreach");
var AchievementControl_1 = require("./script/scene/AchievementControl");
var closeTouchEffect_1 = require("./script/Tools/closeTouchEffect");
var CheckInControl_1 = require("./script/scene/CheckInControl");
var Exchange_1 = require("./script/scene/Exchange");
var LoadSceneControl_1 = require("./script/scene/LoadSceneControl");
var role_1 = require("./script/role/role");
var PlayingSceneControl_1 = require("./script/playing/PlayingSceneControl");
var ButtonTouchEffect_1 = require("./script/Effect/ButtonTouchEffect");
var AchievementButton_1 = require("./script/scene/AchievementButton");
var EquipUpdate_1 = require("./script/main/EquipUpdate");
var SettlementFailControl_1 = require("./script/scene/SettlementFailControl");
var RewardDialogControl_1 = require("./script/scene/RewardDialogControl");
var RewardTenControl_1 = require("./script/scene/RewardTenControl");
var PopDialogRunTime_1 = require("./script/scene/PopDialogRunTime");
var PopDialogControl_1 = require("./script/scene/PopDialogControl");
var RankingControl_1 = require("./script/scene/RankingControl");
var ReqLoadingControl_1 = require("./script/Effect/ReqLoadingControl");
var Setting_1 = require("./script/scene/Setting");
var SettlementControl_1 = require("./script/scene/SettlementControl");
var ShopControl_1 = require("./script/scene/ShopControl");
var EndlessChooseSkills_1 = require("./script/manage/EndlessChooseSkills");
var EndlessSuspend_explain_1 = require("./script/manage/EndlessSuspend_explain");
var ItemDetailControl_1 = require("./script/scene/ItemDetailControl");
var EndlessSuspend_1 = require("./script/manage/EndlessSuspend");
var BaoZha_1 = require("./script/role/BaoZha");
var Enemy_1 = require("./script/playing/Enemy");
var BossWarning_1 = require("./script/scene/BossWarning");
var BuffControl_1 = require("./script/playing/BuffControl");
var BuffProgressControl_1 = require("./script/role/BuffProgressControl");
var Bullet_face_1 = require("./script/playing/Bullet_face");
var Bullet_boss_1 = require("./script/playing/Bullet_boss");
var MuzzleControl_1 = require("./script/role/MuzzleControl");
var Bullet_second_1 = require("./script/role/Bullet_second");
var EnemySelfSkillControl_1 = require("./script/role/EnemySelfSkillControl");
var GoldDrop_1 = require("./script/role/GoldDrop");
var EndlessBuyItem_1 = require("./script/manage/EndlessBuyItem");
var movementLocus_1 = require("./script/role/movementLocus");
var HpaddEffectControl_1 = require("./script/Effect/HpaddEffectControl");
var toast_1 = require("./script/manage/toast");
var UpdateItemEffectControl_1 = require("./script/scene/UpdateItemEffectControl");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/scene/Achievementreach.ts", Achievementreach_1.default);
        reg("script/scene/AchievementControl.ts", AchievementControl_1.default);
        reg("script/Tools/closeTouchEffect.ts", closeTouchEffect_1.default);
        reg("script/scene/CheckInControl.ts", CheckInControl_1.default);
        reg("script/scene/Exchange.ts", Exchange_1.default);
        reg("script/scene/LoadSceneControl.ts", LoadSceneControl_1.default);
        reg("script/role/role.ts", role_1.default);
        reg("script/playing/PlayingSceneControl.ts", PlayingSceneControl_1.default);
        reg("script/Effect/ButtonTouchEffect.ts", ButtonTouchEffect_1.default);
        reg("script/scene/AchievementButton.ts", AchievementButton_1.default);
        reg("script/main/EquipUpdate.ts", EquipUpdate_1.default);
        reg("script/scene/SettlementFailControl.ts", SettlementFailControl_1.default);
        reg("script/scene/RewardDialogControl.ts", RewardDialogControl_1.default);
        reg("script/scene/RewardTenControl.ts", RewardTenControl_1.default);
        reg("script/scene/PopDialogRunTime.ts", PopDialogRunTime_1.default);
        reg("script/scene/PopDialogControl.ts", PopDialogControl_1.default);
        reg("script/scene/RankingControl.ts", RankingControl_1.default);
        reg("script/Effect/ReqLoadingControl.ts", ReqLoadingControl_1.default);
        reg("script/scene/Setting.ts", Setting_1.default);
        reg("script/scene/SettlementControl.ts", SettlementControl_1.default);
        reg("script/scene/ShopControl.ts", ShopControl_1.default);
        reg("script/manage/EndlessChooseSkills.ts", EndlessChooseSkills_1.default);
        reg("script/manage/EndlessSuspend_explain.ts", EndlessSuspend_explain_1.default);
        reg("script/scene/ItemDetailControl.ts", ItemDetailControl_1.default);
        reg("script/manage/EndlessSuspend.ts", EndlessSuspend_1.default);
        reg("script/role/BaoZha.ts", BaoZha_1.default);
        reg("script/playing/Enemy.ts", Enemy_1.default);
        reg("script/scene/BossWarning.ts", BossWarning_1.default);
        reg("script/playing/BuffControl.ts", BuffControl_1.default);
        reg("script/role/BuffProgressControl.ts", BuffProgressControl_1.default);
        reg("script/playing/Bullet_face.ts", Bullet_face_1.default);
        reg("script/playing/Bullet_boss.ts", Bullet_boss_1.default);
        reg("script/role/MuzzleControl.ts", MuzzleControl_1.default);
        reg("script/role/Bullet_second.ts", Bullet_second_1.default);
        reg("script/role/EnemySelfSkillControl.ts", EnemySelfSkillControl_1.default);
        reg("script/role/GoldDrop.ts", GoldDrop_1.default);
        reg("script/manage/EndlessBuyItem.ts", EndlessBuyItem_1.default);
        reg("script/role/movementLocus.ts", movementLocus_1.default);
        reg("script/Effect/HpaddEffectControl.ts", HpaddEffectControl_1.default);
        reg("script/manage/toast.ts", toast_1.default);
        reg("script/scene/UpdateItemEffectControl.ts", UpdateItemEffectControl_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "test/faceFighting_loadingScene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./script/Effect/ButtonTouchEffect":28,"./script/Effect/HpaddEffectControl":29,"./script/Effect/ReqLoadingControl":30,"./script/Tools/closeTouchEffect":38,"./script/main/EquipUpdate":39,"./script/manage/EndlessBuyItem":44,"./script/manage/EndlessChooseSkills":45,"./script/manage/EndlessSuspend":49,"./script/manage/EndlessSuspend_explain":50,"./script/manage/toast":59,"./script/playing/BuffControl":61,"./script/playing/Bullet_boss":62,"./script/playing/Bullet_face":63,"./script/playing/Enemy":64,"./script/playing/PlayingSceneControl":65,"./script/role/BaoZha":66,"./script/role/BuffProgressControl":69,"./script/role/Bullet_second":71,"./script/role/EnemySelfSkillControl":74,"./script/role/GoldDrop":76,"./script/role/MuzzleControl":77,"./script/role/movementLocus":78,"./script/role/role":79,"./script/scene/AchievementButton":80,"./script/scene/AchievementControl":81,"./script/scene/Achievementreach":82,"./script/scene/BossWarning":83,"./script/scene/CheckInControl":84,"./script/scene/Exchange":85,"./script/scene/ItemDetailControl":86,"./script/scene/LoadSceneControl":87,"./script/scene/PopDialogControl":88,"./script/scene/PopDialogRunTime":89,"./script/scene/RankingControl":90,"./script/scene/RewardDialogControl":91,"./script/scene/RewardTenControl":92,"./script/scene/Setting":93,"./script/scene/SettlementControl":94,"./script/scene/SettlementFailControl":95,"./script/scene/ShopControl":96,"./script/scene/UpdateItemEffectControl":97}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Playing_var_1 = require("./script/manage/Playing_var");
var AdaptScene_1 = require("./script/manage/AdaptScene");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        if (Laya.Browser.onPC) {
            var scaleMode = Laya.Stage.SCALE_SHOWALL;
            Laya.stage.scaleMode = scaleMode;
        }
        else {
            Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        }
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        UIConfig.closeDialogOnSide = true;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        // if (GameConfig.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //可能是引擎的一个bug修正~
        // Laya.Physics.I['box2d'].DEBUG = false;
        // console.log("Laya.Physics.I['box2d']",Laya.Physics.I["box2d"]);
        //box2d.DEBUG=false
        // Laya.stage.alignH = Laya.Stage.ALIGN_CENTER;
        // Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        //大图合集功能关闭
        // Config.atlasEnable = false;
        //加载界面
        Playing_var_1.default.getInstance().gameStatus = "loading";
        // Laya.URL.basePath = "https://special-star-wx-1258119497.cos.ap-shanghai.myqcloud.com/";
        // Laya.URL.basePath = "https://ssl.xdieg.com/StaticFiles/wxgame/";
        //stage width 或者 height 改变的 监听
        Laya.stage.on(Laya.Event.RESIZE, this, this.onResize);
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onResize = function (arg) {
        console.log("onResize----:", arg, "stage.height", Laya.stage.height);
        AdaptScene_1.default.getInstance().setSceneAdaptHeight();
    };
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        //Laya.loader.load([{ url: "test/explode.ani" }, { url: "test.png", type: Laya.Loader.IMAGE }, { url: "test.atlas", type: Laya.Loader.ATLAS }]);
        if (Laya.Browser.onMiniGame) {
            this.handleMiniGame();
        }
        else {
            console.error("仅支持微信客户端");
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, true);
        }
    };
    Main.prototype.handleMiniGame = function () {
        Laya.Browser.window.wx.login({
            success: function (res) {
                if (res.code) {
                    var code = res.code;
                    console.error("登陆成功,获取到code", code);
                    Playing_var_1.default.getInstance().wecode = code;
                    // const url: string = HttpModel2.URLSERVER + HttpModel2.httpUrls.uuid;
                    // let randonUserId: any;
                    // randonUserId = { code: PlayingVar.getInstance().wecode };
                    // const data: string = JSON.stringify(randonUserId);
                    // new HttpModel.HttpClass(Laya.Handler.create(this, this.requestUUID), url, data)
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, true);
                }
                // var button = Laya.Browser.window.wx.createUserInfoButton(
                // 	{
                // 		type: 'text',
                // 		text: '点击进入游戏',
                // 		style:
                // 			{
                // 				left: wx.getSystemInfoSync().windowWidth / 2 - 70,
                // 				top: wx.getSystemInfoSync().windowHeight / 2,
                // 				width: 140,
                // 				height: 40,
                // 				lineHeight: 40,
                // 				backgroundColor: '#ff0000',
                // 				color: '#ffffff',
                // 				textAlign: 'center',
                // 				fontSize: 16,
                // 				borderRadius: 4
                // 			}
                // 	})
                // button.onTap((res) => {
                // 	if (res.errMsg == "getUserInfo:ok") {
                // 		console.log("授权用户信息")
                // 		//获取到用户信息
                // 		// GameDataManager.PlayerImgUrl = res.userInfo.avatarUrl
                // 		// GameDataManager.PlayerName = res.userInfo.nickName
                // 		// GameDataManager.IsAuthSuccess = true
                // 		// console.log("player wechat imge "+GameDataManager.PlayerImgUrl)
                // 		console.error(res);
                // 		//清除微信授权按钮
                // 		button.destroy()
                // 	}
                // 	else {
                // 		console.log("授权失败")
                // 		// GameDataManager.IsAuthSuccess = false
                // 		console.error("授权失败");
                // 		//清除微信授权按钮
                // 		button.destroy()
                // 	}
                // })
                // button.show()
            }
        });
    };
    Main.prototype.requestUUID = function (data) {
        console.error("~~~~~~~~~~~~dadadada111~~~~~~~~~", data);
    };
    return Main;
}());
//激活启动类
new Main();
},{"./GameConfig":1,"./script/manage/AdaptScene":40,"./script/manage/Playing_var":55}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var bingqilinzuhe_bullet_1 = require("../Boss/bingqilinzuhe_bullet"); //石头巨人子弹
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        _this.attackCounter = 0; //攻击次数计数器；
        _this.attack_Delayed_01 = 0; //延时帧数
        //普攻2子弹生成类型1
        _this.attack_02_Delayed_01 = 0; //延时帧数
        //skill子弹类型1
        _this.skill_01_Delayed_01 = 0; //延时时间
        _this.skill_01_Angle_01 = 40; //角度记录
        //skill子弹类型2
        _this.skill_01_Delayed_02 = 0; //延时时间
        _this.skill_01_Angle_02 = 40;
        //普攻2子弹生成类型1
        _this.skill_01_Delayed_03 = 0; //延时帧数
        return _this;
        // boss_shitoujuren石头巨人
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        // 需要每次初始化属性
        this.initProperty();
        this.creatBossAni();
    };
    //初始化属性
    Boss_jinsenangua.prototype.initProperty = function () {
        this.self = this.owner;
        this.moveOnOff = false; //移动开关
        this.attack_Interval = 8000; //时间间隔
        this.firstAttack = true;
        this.firstAttack_Interval = 2000; //第一次的时间间隔
        this.attackCounter = 0; //攻击次数计数器；
        this.attack_NowTime = Date.now();
        this.attack_02_Delayed_01 = 0;
        //skill子弹类型1
        this.skill_01_Delayed_01 = 0; //延时时间
        this.skill_01_Angle_01 = 40; //角度记录
        //skill子弹类型2
        this.skill_01_Delayed_02 = 0; //延时时间
        this.skill_01_Angle_02 = 40;
        //skill子弹类型3
        this.skill_01_Delayed_03 = 0; //延时帧数
        this.self.name = 'bingqilinzuhe';
        this.self.markName = "bingqilinzuhe";
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        //骨骼动画赋值
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_bingqilinzuhe");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
        // this.bossTemplet = new Laya.Templet();
        // this.bossTemplet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        // this.bossTemplet.on(Laya.Event.ERROR, this, this.onError);
        // this.bossTemplet.loadAni("dragonbones/boss_bingqilinzuhe.sk");
    };
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(205, 165);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    //boss的移动行为
    Boss_jinsenangua.prototype.move = function () {
        // this.self.x = Laya.stage.width / 2 - 170;
        // return;
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 50) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4) {
                this.moveDirection = "left";
            }
        }
    };
    //普通攻击
    //两种普通攻击根据攻击次数交替进行
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // 延时用于匹配动作
        Laya.timer.frameOnce(10, this, function () {
            if (this.owner.scene === null) {
                return;
            }
            // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
            if (random === "random") {
                var number = Math.floor(Math.random() * 2);
                if (number === 1) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
            else {
                if (this.attackCounter % 2 !== 0) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
        });
    };
    /**实例化子弹
       * @param skin 子弹图片地址
       * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    //普攻1子弹类型1
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var randomAngleArr = [];
        for (var k = 0; k < 30; k++) {
            var randomAngle = 30 + Math.floor(Math.random() * 120);
            randomAngleArr.push(randomAngle);
        }
        var _loop_1 = function (r) {
            var _loop_2 = function (l) {
                // 随机一个角度
                var randomAngle = 50 + Math.floor(Math.random() * 80);
                this_1.attack_Delayed_01 += 12;
                Laya.timer.frameOnce(this_1.attack_Delayed_01, this_1, function () {
                    if (this.owner.scene == null) {
                        return;
                    }
                    var attack_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    attack_01_Bullet_01.name = 'attack_01_Bullet_01';
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 150;
                    attack_01_Bullet_01.pos(bulletX, bulletY);
                    //先判断是否有了这个脚本
                    var bingqilinzuhe_Bullet = attack_01_Bullet_01.getComponent(bingqilinzuhe_bullet_1.default);
                    if (!bingqilinzuhe_Bullet) {
                        attack_01_Bullet_01.addComponent(bingqilinzuhe_bullet_1.default);
                    }
                    bingqilinzuhe_Bullet = attack_01_Bullet_01.getComponent(bingqilinzuhe_bullet_1.default);
                    bingqilinzuhe_Bullet.row = r; //行
                    bingqilinzuhe_Bullet.line = l; //列
                    bingqilinzuhe_Bullet.moveOnOff = true; //运动开关
                    bingqilinzuhe_Bullet.bossName = this.owner.name; //boss名称
                    bingqilinzuhe_Bullet.randomAngle = randomAngleArr[l]; //随机角度
                });
            };
            for (var l = 0; l < 30; l++) {
                _loop_2(l);
            }
            this_1.attack_Delayed_01 = 0;
        };
        var this_1 = this;
        for (var r = 0; r < 6; r++) {
            _loop_1(r);
        }
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        var _loop_3 = function (r) {
            var _loop_4 = function (l) {
                this_2.attack_02_Delayed_01 += 2;
                Laya.timer.frameOnce(this_2.attack_02_Delayed_01, this_2, function () {
                    if (this.owner.scene == null) {
                        return;
                    }
                    var attack_02_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    attack_02_Bullet_01.name = 'attack_02_Bullet_01';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    attack_02_Bullet_01.pos(bulletX, bulletY);
                    //先判断是否有了这个脚本
                    var bingqilinzuhe_Bullet = attack_02_Bullet_01.getComponent(bingqilinzuhe_bullet_1.default);
                    if (!bingqilinzuhe_Bullet) {
                        attack_02_Bullet_01.addComponent(bingqilinzuhe_bullet_1.default);
                    }
                    bingqilinzuhe_Bullet = attack_02_Bullet_01.getComponent(bingqilinzuhe_bullet_1.default);
                    bingqilinzuhe_Bullet.group = l; //组
                    switch (r) {
                        case 0:
                            bingqilinzuhe_Bullet.firstAngle = l * 12;
                            break;
                        case 1:
                            bingqilinzuhe_Bullet.firstAngle = l * 12 + 45;
                            break;
                        default:
                            break;
                    }
                    bingqilinzuhe_Bullet.moveOnOff = true; //运动开关
                    bingqilinzuhe_Bullet.bossName = this.owner.name; //boss名称
                });
            };
            for (var l = 0; l < 180; l++) {
                _loop_4(l);
            }
            this_2.attack_02_Delayed_01 = 0; //每一列循环结束之后延时重置；
        };
        var this_2 = this;
        // 改变子弹父节点的层级，要大于boss
        // (this.owner.scene.getChildByName("bulletParent_enemy") as Laya.Sprite).zOrder = 1;
        // this.self.parent.zOrder = 2;
        for (var r = 0; r < 2; r++) {
            _loop_3(r);
        }
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        this.skill_01_Bullet_01();
        // Laya.timer.frameOnce(200, this, function () {
        //     if (this.owner.scene === null) {
        //         return;
        //     }
        //     console.log('第二种子弹发射');
        //     this.skill_01_Bullet_02();
        // })
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_5 = function (r) {
            var _loop_6 = function (l) {
                this_3.skill_01_Delayed_01 += 2;
                Laya.timer.frameOnce(this_3.skill_01_Delayed_01, this_3, function () {
                    if (this.owner.scene == null) {
                        return;
                    }
                    var skill_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    // 注意每次位置参考的层次属性都不尽相同
                    switch (r) {
                        case 0:
                            skill_01_Bullet_01.pos(bulletX + 200, bulletY);
                            break;
                        case 1:
                            skill_01_Bullet_01.pos(bulletX - 200, bulletY);
                            break;
                        default:
                            break;
                    }
                    skill_01_Bullet_01.name = 'skill_01_Bullet_01';
                    //先判断是否有了这个脚本
                    var bingqilinzuhe_Bullet = skill_01_Bullet_01.getComponent(bingqilinzuhe_bullet_1.default);
                    if (!bingqilinzuhe_Bullet) {
                        skill_01_Bullet_01.addComponent(bingqilinzuhe_bullet_1.default);
                    }
                    bingqilinzuhe_Bullet = skill_01_Bullet_01.getComponent(bingqilinzuhe_bullet_1.default);
                    bingqilinzuhe_Bullet.moveOnOff = true; //运动开关
                    bingqilinzuhe_Bullet.row = r;
                    bingqilinzuhe_Bullet.bossName = this.owner.name; //boss名称
                    bingqilinzuhe_Bullet.bossPosX = bulletX;
                    bingqilinzuhe_Bullet.bossPosY = bulletY;
                    if ((l >= 0 && l < 10) || (l >= 20 && l < 30) || (l >= 40 && l < 50) || (l >= 60 && l < 70) || (l >= 80 && l < 90)) {
                        if (bingqilinzuhe_Bullet.row === 0) {
                            this.skill_01_Angle_01 -= 6;
                        }
                        else if (bingqilinzuhe_Bullet.row === 1) {
                            this.skill_01_Angle_01 -= (6 + 40);
                        }
                        bingqilinzuhe_Bullet.skill_01_FirstAngle_01 = this.skill_01_Angle_01;
                    }
                    else if ((l >= 10 && l < 20) || (l >= 30 && l < 40) || (l >= 50 && l < 60) || (l >= 70 && l < 80) || (l >= 90 && l < 100)) {
                        if (bingqilinzuhe_Bullet.row === 0) {
                            this.skill_01_Angle_01 -= (6 + 40);
                        }
                        else if (bingqilinzuhe_Bullet.row === 1) {
                            this.skill_01_Angle_01 += 6;
                        }
                        bingqilinzuhe_Bullet.skill_01_FirstAngle_01 = this.skill_01_Angle_01;
                    }
                    if (r === 1 && l === 99) {
                        this.skill_01_Bullet_02(); //全部播放完毕之后接上第二种子弹
                    }
                });
            };
            for (var l = 0; l < 100; l++) {
                _loop_6(l);
            }
            this_3.skill_01_Angle_01 = 40;
            this_3.skill_01_Delayed_01 = 0; //每一列循环结束之后延时重置；
        };
        var this_3 = this;
        for (var r = 0; r < 2; r++) {
            _loop_5(r);
        }
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_02 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_7 = function (r) {
            var _loop_8 = function (l) {
                this_4.skill_01_Delayed_02 += 2;
                Laya.timer.frameOnce(this_4.skill_01_Delayed_02, this_4, function () {
                    if (this.owner.scene == null) {
                        return;
                    }
                    var skill_01_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    // 注意每次位置参考的层次属性都不尽相同
                    switch (r) {
                        case 0:
                            skill_01_Bullet_02.pos(bulletX, bulletY);
                            break;
                        case 1:
                            skill_01_Bullet_02.pos(bulletX, bulletY);
                            break;
                        default:
                            break;
                    }
                    skill_01_Bullet_02.name = 'skill_01_Bullet_02';
                    //先判断是否有了这个脚本
                    var bingqilinzuhe_Bullet = skill_01_Bullet_02.getComponent(bingqilinzuhe_bullet_1.default);
                    if (!bingqilinzuhe_Bullet) {
                        skill_01_Bullet_02.addComponent(bingqilinzuhe_bullet_1.default);
                    }
                    bingqilinzuhe_Bullet = skill_01_Bullet_02.getComponent(bingqilinzuhe_bullet_1.default);
                    bingqilinzuhe_Bullet.moveOnOff = true; //运动开关
                    bingqilinzuhe_Bullet.row = r;
                    bingqilinzuhe_Bullet.bossName = this.owner.name; //boss名称
                    bingqilinzuhe_Bullet.bossPosX = bulletX;
                    bingqilinzuhe_Bullet.bossPosY = bulletY;
                    if ((l >= 0 && l < 10) || (l >= 20 && l < 30) || (l >= 40 && l < 50) || (l >= 60 && l < 70) || (l >= 80 && l < 90)) {
                        this.skill_01_Angle_02 += 12;
                        bingqilinzuhe_Bullet.skill_01_FirstAngle_02 = this.skill_01_Angle_02;
                    }
                    else if ((l >= 10 && l < 20) || (l >= 30 && l < 40) || (l >= 50 && l < 60) || (l >= 70 && l < 80) || (l >= 90 && l < 100)) {
                        this.skill_01_Angle_02 -= 12;
                        bingqilinzuhe_Bullet.skill_01_FirstAngle_02 = this.skill_01_Angle_02;
                    }
                    if (r === 0 && l === 99) {
                        this.skill_01_Bullet_03(); //全部播放完毕之后接上第三种子弹
                    }
                });
            };
            for (var l = 0; l < 100; l++) {
                _loop_8(l);
            }
            this_4.skill_01_Angle_02 = 40;
            this_4.skill_01_Delayed_02 = 0; //每一列循环结束之后延时重置；
        };
        var this_4 = this;
        for (var r = 0; r < 1; r++) {
            _loop_7(r);
        }
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_03 = function () {
        var _loop_9 = function (r) {
            var _loop_10 = function (l) {
                this_5.skill_01_Delayed_03 += 2;
                Laya.timer.frameOnce(this_5.skill_01_Delayed_03, this_5, function () {
                    if (this.owner.scene == null) {
                        return;
                    }
                    var skill_01_Bullet_03 = this.initBullet('enemyBullet/common_bullet.png');
                    skill_01_Bullet_03.name = 'skill_01_Bullet_03';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    skill_01_Bullet_03.pos(bulletX, bulletY);
                    //先判断是否有了这个脚本
                    var bingqilinzuhe_Bullet = skill_01_Bullet_03.getComponent(bingqilinzuhe_bullet_1.default);
                    if (!bingqilinzuhe_Bullet) {
                        skill_01_Bullet_03.addComponent(bingqilinzuhe_bullet_1.default);
                    }
                    bingqilinzuhe_Bullet = skill_01_Bullet_03.getComponent(bingqilinzuhe_bullet_1.default);
                    bingqilinzuhe_Bullet.group = l; //组
                    switch (r) {
                        case 0:
                            bingqilinzuhe_Bullet.skill_01_FirstAngle_03 = l * 12 - 12;
                            break;
                        case 1:
                            bingqilinzuhe_Bullet.skill_01_FirstAngle_03 = l * 12;
                            break;
                        case 2:
                            bingqilinzuhe_Bullet.skill_01_FirstAngle_03 = l * 12 + 108;
                            break;
                        case 3:
                            bingqilinzuhe_Bullet.skill_01_FirstAngle_03 = l * 12 + 120;
                            break;
                        case 4:
                            bingqilinzuhe_Bullet.skill_01_FirstAngle_03 = l * 12 + 228;
                            break;
                        case 5:
                            bingqilinzuhe_Bullet.skill_01_FirstAngle_03 = l * 12 + 240;
                            break;
                        default:
                            break;
                    }
                    bingqilinzuhe_Bullet.moveOnOff = true; //运动开关
                    bingqilinzuhe_Bullet.bossName = this.owner.name; //boss名称
                });
            };
            for (var l = 0; l < 150; l++) {
                _loop_10(l);
            }
            this_5.skill_01_Delayed_03 = 0; //每一列循环结束之后延时重置；
        };
        var this_5 = this;
        // 改变子弹父节点的层级，要大于boss
        // (this.owner.scene.getChildByName("bulletParent_enemy") as Laya.Sprite).zOrder = 1;
        // this.self.parent.zOrder = 2;
        for (var r = 0; r < 6; r++) {
            _loop_9(r);
        }
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            if (this.firstAttack && nowTime - this.attack_NowTime > this.firstAttack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                this.firstAttack = false;
                this.attack('null');
            }
            else if (nowTime - this.attack_NowTime > this.attack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.attack_Interval = 15000;
                            this.skill(); //大招1
                            // 延长下次技能释放时间间隔
                        }
                        else {
                            // 做预防，防止时间错乱
                            if (this.attack_Interval !== 8000) {
                                this.attack_Interval = 8000;
                            }
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Boss/bingqilinzuhe_bullet":4,"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关判断
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.accelerated_01_01 = 0.06; //加速度
        _this.accelerated_02_01 = 0.05; //加速度1
        // boss大招子弹类型1
        _this.skill_accelerated_01_01 = 0.1; //加速度
        _this.skill_accelerated_01_02 = 0.1; //加速度
        _this.skill_accelerated_01_03 = 0.1; //加速度
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.selfFirstPoint = new Laya.Point(this.self.x, this.self.y);
        this.self['bingqilinzuhe_bullet'] = this;
        this.initProperty(); //初始化,每次进入重新初始化
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1
        this.accelerated_01_01 = 0.06; //加速度
        //普通攻击2
        this.accelerated_02_01 = 0.05; //加速度1
        // 技能1_01
        // boss大招子弹类型1
        this.skill_accelerated_01_01 = 0.1; //加速度
        // 技能1_02
        this.skill_accelerated_01_02 = 0.1; //加速度
        // 技能1_03
        this.skill_accelerated_01_03 = 0.1; //加速度
    };
    //合集方法
    bullet.prototype.bingQiLinZuHe_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            // 运动轨迹
            switch (this.self.name) {
                case 'attack_01_Bullet_01':
                    this.attack_01_01();
                    break;
                case 'attack_02_Bullet_01':
                    this.attack_02_01();
                    break;
                //skill
                case 'skill_01_Bullet_01':
                    this.skill_01_01();
                    break;
                case 'skill_01_Bullet_02':
                    this.skill_01_02();
                    break;
                case 'skill_01_Bullet_03':
                    this.skill_01_03();
                    break;
                default:
                    break;
            }
        }
    };
    bullet.prototype.attack_01_01 = function () {
        var basedSpeed = 6;
        switch (this.row) {
            case 0:
                this.attack_01_01_move1(this.randomAngle + 45, basedSpeed);
                break;
            case 1:
                this.attack_01_01_move1(this.randomAngle + 30, basedSpeed);
                break;
            case 2:
                this.attack_01_01_move1(this.randomAngle + 15, basedSpeed);
                break;
            case 3:
                this.attack_01_01_move1(this.randomAngle, basedSpeed);
                break;
            case 4:
                this.attack_01_01_move1(this.randomAngle - 15, basedSpeed);
                break;
            case 5:
                this.attack_01_01_move1(this.randomAngle - 30, basedSpeed);
                break;
            case 6:
                this.attack_01_01_move1(this.randomAngle - 45, basedSpeed);
                break;
            default:
                break;
        }
        this.accelerated_01_01 += 0.05;
    };
    // 普通1移动
    bullet.prototype.attack_01_01_move1 = function (angle1, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle1, basedSpeed + this.accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle1, basedSpeed + this.accelerated_01_01).y;
    };
    bullet.prototype.attack_02_01 = function () {
        var basedSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(this.firstAngle, basedSpeed + this.accelerated_02_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.firstAngle, basedSpeed + this.accelerated_02_01).y;
        this.accelerated_02_01 += 0.05;
    };
    // 第一阶段组移动
    bullet.prototype.attack_02_01_move1 = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
    };
    // 直线发射子弹
    bullet.prototype.skill_01_01 = function () {
        // // boss位置点初始化
        // let bossParent = (this.owner.scene as Laya.Sprite).getChildByName('EnemySpite');
        // this.boss = bossParent.getChildByName(this.bossName);
        // let bulletX = this.boss.x + this.boss.width * 1 / 3;
        // let bulletY = this.boss.y + this.boss.height * 1 / 3 + 50;
        // // this.bossPoint = new Laya.Point(bulletX, bulletY);
        // let bossLiftPoint = new Laya.Point(bulletX + 200, bulletY);
        // let bossRightPoint = new Laya.Point(bulletX - 200, bulletY);
        var basedSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(this.skill_01_FirstAngle_01, 6 + this.skill_accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.skill_01_FirstAngle_01, 6 + this.skill_accelerated_01_01).y;
        this.skill_accelerated_01_01 += 0.05;
    };
    bullet.prototype.skill_01_02 = function () {
        var basedSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(this.skill_01_FirstAngle_02, basedSpeed + this.skill_accelerated_01_02).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.skill_01_FirstAngle_02, basedSpeed + this.skill_accelerated_01_02).y;
        this.skill_accelerated_01_02 += 0.05;
    };
    bullet.prototype.skill_01_03 = function () {
        var basedSpeed;
        basedSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(this.skill_01_FirstAngle_03, basedSpeed + this.skill_accelerated_01_03).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.skill_01_FirstAngle_03, basedSpeed + this.skill_accelerated_01_03).y;
        this.skill_accelerated_01_03 += 0.05;
    };
    bullet.prototype.onDisable = function () {
        // Laya.Pool.recover("bulltePrefab", this.owner);
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var bingtouxiang_bullet_1 = require("../Boss/bingtouxiang_bullet"); //石头巨人子弹
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        /**
         * 普攻1子弹类型1
         */
        _this.attack_01_Delayed_01 = 0; //延时帧数
        _this.attack_01_Launches_01 = 1; //组名复合字符串，使每次创建出来的都是唯一名称
        //普攻2子弹生成类型1
        _this.attack_02_Delayed_01 = 0; //延时帧数
        /**
         * skill子弹类型1
         * */
        _this.S_01_Delayed_01 = 0; //延时时间
        /**延时时间*/
        _this.S_01_Delayed_02 = 0;
        //普攻2子弹生成类型1
        _this.S_01_Delayed_03 = 0; //延时帧数
        //普攻2子弹生成类型1
        _this.S_01_Delayed_04 = 0; //延时帧数
        return _this;
        // boss_bingtouxiang石头巨人
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        // 需要每次初始化属性
        this.initProperty();
        this.creatBossAni();
    };
    //初始化属性
    Boss_jinsenangua.prototype.initProperty = function () {
        this.attack_NowTime = Date.now();
        this.self = this.owner;
        this.moveOnOff = false; //移动开关
        this.attack_Interval = 8000; //时间间隔
        this.firstAttack = true;
        this.firstAttack_Interval = 2000; //第一次的时间间隔
        this.attackCounter = 0; //攻击次数计数器；
        this.self.name = 'bingtouxiang';
        this.self.markName = 'bingtouxiang';
        //普攻1子弹类型1
        this.attack_01_Delayed_01 = 0; //延时帧数
        // 普通攻击2子弹类型1
        this.attack_02_Delayed_01 = 0; //延时帧数
        //大招1—01
        this.S_01_Delayed_01 = 0; //延时帧数
        //大招1—02
        this.S_01_Delayed_02 = 0; //延时帧数
        //大招1—03
        this.S_01_Delayed_03 = 0; //延时帧数
        //大招1—03
        this.S_01_Delayed_04 = 0; //延时帧数
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        //骨骼动画赋值
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_bingtouxiang");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
    };
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(205, 165);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    /**
     * boss的移动行为
     */
    Boss_jinsenangua.prototype.move = function () {
        // this.self.x = Laya.stage.width / 2 - 170;
        // return;
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 50) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4) {
                this.moveDirection = "left";
            }
        }
    };
    /**
     * 两种普通攻击根据攻击次数交替进行
     */
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // // 延时用于匹配动作
        Laya.timer.frameOnce(30, this, function () {
            if (this.owner.scene === null) {
                return;
            }
            // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
            if (random === "random") {
                var number = Math.floor(Math.random() * 2);
                if (number === 1) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
            else {
                if (this.attackCounter % 2 !== 0) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
        });
    };
    /**实例化子弹
       * @param skin 子弹图片地址
       * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //角度合集
        var randomAngleArr = [60, 70, 90, 100, 110, 120];
        var _loop_1 = function (g) {
            this_1.attack_01_Launches_01 += 35;
            this_1.attack_01_Delayed_01 += 20;
            Laya.timer.frameOnce(this_1.attack_01_Delayed_01, this_1, function () {
                if (this.owner.scene == null) {
                    return;
                }
                var attack_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                // 修正位置
                var bulletX = this.self.x + this.self.width * 1 / 3;
                var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                attack_01_Bullet_01.pos(bulletX, bulletY);
                // 名称+释放次数，让名称每轮都唯一
                attack_01_Bullet_01.name = "attack_01_Group_0" + g.toString() + this.attack_01_Launches_01.toString();
                //判断是否有了这个脚本
                var bingtouxiang_Bullet = attack_01_Bullet_01.getComponent(bingtouxiang_bullet_1.default);
                if (!bingtouxiang_Bullet) {
                    attack_01_Bullet_01.addComponent(bingtouxiang_bullet_1.default);
                }
                bingtouxiang_Bullet = attack_01_Bullet_01.getComponent(bingtouxiang_bullet_1.default);
                bingtouxiang_Bullet.group = g; //组
                bingtouxiang_Bullet.moveOnOff = true; //运动开关
                bingtouxiang_Bullet.bossName = this.owner.name; //boss名称
                bingtouxiang_Bullet.randomAngle = randomAngleArr[Math.floor(Math.random() * randomAngleArr.length)];
                bingtouxiang_Bullet.specialName = 'attack_01_01_Special';
                //附属子弹attack_01_Bullet_02生成，他们组相同
                this.attack_01_Bullet_02(g.toString() + this.attack_01_Launches_01.toString());
            });
        };
        var this_1 = this;
        for (var g = 0; g < 18; g++) {
            _loop_1(g);
        }
        this.attack_01_Delayed_01 = 0;
    };
    //普攻1子弹类型2
    Boss_jinsenangua.prototype.attack_01_Bullet_02 = function (g) {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        for (var r = 0; r < 3; r++) {
            for (var l = 0; l < 6; l++) {
                // 初始化
                var attack_01_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                attack_01_Bullet_02.name = 'attack_01_Bullet_02';
                // 修正位置
                var bulletX = this.self.x + this.self.width * 1 / 3;
                var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                attack_01_Bullet_02.pos(bulletX, bulletY);
                //判断是否有了这个脚本
                var bingtouxiang_Bullet = attack_01_Bullet_02.getComponent(bingtouxiang_bullet_1.default);
                if (!bingtouxiang_Bullet) {
                    attack_01_Bullet_02.addComponent(bingtouxiang_bullet_1.default);
                }
                bingtouxiang_Bullet = attack_01_Bullet_02.getComponent(bingtouxiang_bullet_1.default);
                bingtouxiang_Bullet.group = g; //组
                bingtouxiang_Bullet.row = r; //组
                bingtouxiang_Bullet.line = l; //列
                bingtouxiang_Bullet.moveOnOff = true; //运动开关
                bingtouxiang_Bullet.bossName = this.owner.name; //boss名称
                bingtouxiang_Bullet.attack_01_02_firstAngle = l * 60;
                //如果boss有特殊子弹，那么其他子弹必须为空
                bingtouxiang_Bullet.specialName = null;
            }
        }
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_2 = function (g) {
            this_2.attack_02_Delayed_01 += 20;
            Laya.timer.frameOnce(this_2.attack_02_Delayed_01, this_2, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 6; r++) {
                    for (var l = 0; l < 5; l++) {
                        var attack_02_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                        attack_02_Bullet_01.name = 'attack_02_Bullet_01';
                        // 位置需要修正
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        attack_02_Bullet_01.pos(bulletX, bulletY);
                        //判断是否有了这个脚本
                        var bingtouxiang_Bullet = attack_02_Bullet_01.getComponent(bingtouxiang_bullet_1.default);
                        if (!bingtouxiang_Bullet) {
                            attack_02_Bullet_01.addComponent(bingtouxiang_bullet_1.default);
                        }
                        bingtouxiang_Bullet = attack_02_Bullet_01.getComponent(bingtouxiang_bullet_1.default);
                        bingtouxiang_Bullet.group = g; //组
                        bingtouxiang_Bullet.row = r; //行
                        bingtouxiang_Bullet.line = l; //行
                        bingtouxiang_Bullet.A_02_01_firstAngle = r * 60 + 45 + g * 24; //初始角度
                        bingtouxiang_Bullet.moveOnOff = true; //运动开关
                        bingtouxiang_Bullet.bossName = this.owner.name; //boss名称
                        //如果boss有特殊子弹，那么其他子弹必须为空
                        bingtouxiang_Bullet.specialName = null;
                    }
                }
            });
        };
        var this_2 = this;
        for (var g = 0; g < 15; g++) {
            _loop_2(g);
        }
        this.attack_02_Delayed_01 = 0; //环结束之后延时重置；
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        this.skill_01_Bullet_03();
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_3 = function (r) {
            this_3.S_01_Delayed_01 += 30;
            Laya.timer.frameOnce(this_3.S_01_Delayed_01, this_3, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 8; l++) {
                    var skill_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    skill_01_Bullet_01.pos(bulletX, bulletY);
                    // 注意每次位置参考的层次属性都不尽相同
                    skill_01_Bullet_01.name = 'skill_01_Bullet_01';
                    //判断是否有了这个脚本
                    var bingtouxiang_Bullet = skill_01_Bullet_01.getComponent(bingtouxiang_bullet_1.default);
                    if (!bingtouxiang_Bullet) {
                        skill_01_Bullet_01.addComponent(bingtouxiang_bullet_1.default);
                    }
                    bingtouxiang_Bullet = skill_01_Bullet_01.getComponent(bingtouxiang_bullet_1.default);
                    bingtouxiang_Bullet.moveOnOff = true; //运动开关
                    bingtouxiang_Bullet.row = r;
                    bingtouxiang_Bullet.line = l;
                    bingtouxiang_Bullet.bossName = this.owner.name; //boss名称
                    bingtouxiang_Bullet.bossPosX = bulletX;
                    bingtouxiang_Bullet.bossPosY = bulletY;
                    bingtouxiang_Bullet.S_01_FirstAngle_01 = 90;
                    //如果boss有特殊子弹，那么其他子弹必须为空
                    bingtouxiang_Bullet.specialName = null;
                }
            });
        };
        var this_3 = this;
        for (var r = 0; r < 10; r++) {
            _loop_3(r);
        }
        this.S_01_Delayed_01 = 0; //每一列循环结束之后延时重置；
    };
    /**skill子弹类型2*/
    Boss_jinsenangua.prototype.skill_01_Bullet_02 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_4 = function (g) {
            this_4.S_01_Delayed_02 += 25;
            Laya.timer.frameOnce(this_4.S_01_Delayed_02, this_4, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 4; r++) {
                    for (var l = 0; l < 5; l++) {
                        var skill_01_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                        // 位置需要修正
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        skill_01_Bullet_02.pos(bulletX, bulletY);
                        // 注意每次位置参考的层次属性都不尽相同
                        skill_01_Bullet_02.name = 'skill_01_Bullet_02';
                        //判断是否有了这个脚本
                        var bingtouxiang_Bullet = skill_01_Bullet_02.getComponent(bingtouxiang_bullet_1.default);
                        if (!bingtouxiang_Bullet) {
                            skill_01_Bullet_02.addComponent(bingtouxiang_bullet_1.default);
                        }
                        bingtouxiang_Bullet = skill_01_Bullet_02.getComponent(bingtouxiang_bullet_1.default);
                        bingtouxiang_Bullet.moveOnOff = true; //运动开关
                        bingtouxiang_Bullet.row = r;
                        bingtouxiang_Bullet.line = l;
                        bingtouxiang_Bullet.bossName = this.owner.name; //boss名称
                        bingtouxiang_Bullet.bossPosX = bulletX;
                        bingtouxiang_Bullet.bossPosY = bulletY;
                        bingtouxiang_Bullet.S_01_FirstAngle_02 = r * 90 + g * 45;
                        //如果boss有特殊子弹，那么其他子弹必须为空
                        bingtouxiang_Bullet.specialName = null;
                    }
                }
            });
        };
        var this_4 = this;
        for (var g = 0; g < 14; g++) {
            _loop_4(g);
        }
        this.S_01_Delayed_02 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_03 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_5 = function (r) {
            if (r > 60) {
                this_5.S_01_Delayed_03 += 5;
            }
            else {
                this_5.S_01_Delayed_03 += 15;
            }
            Laya.timer.frameOnce(this_5.S_01_Delayed_03, this_5, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 8; l++) {
                    var skill_01_Bullet_03 = this.initBullet('enemyBullet/common_bullet.png');
                    skill_01_Bullet_03.name = 'skill_01_Bullet_03';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    skill_01_Bullet_03.pos(bulletX, bulletY);
                    //判断是否有了这个脚本
                    var bingtouxiang_Bullet = skill_01_Bullet_03.getComponent(bingtouxiang_bullet_1.default);
                    if (!bingtouxiang_Bullet) {
                        skill_01_Bullet_03.addComponent(bingtouxiang_bullet_1.default);
                    }
                    bingtouxiang_Bullet = skill_01_Bullet_03.getComponent(bingtouxiang_bullet_1.default);
                    bingtouxiang_Bullet.row = r; //行
                    bingtouxiang_Bullet.line = l; //列
                    bingtouxiang_Bullet.S_01_FirstAngle_03 = l * 45 + 45;
                    // 角度偏差值
                    switch (l) {
                        case 0:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 45;
                            break;
                        case 1:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 45 - 15;
                            break;
                        case 2:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 135;
                            break;
                        case 3:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 135 - 15;
                            break;
                        case 4:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 225;
                            break;
                        case 5:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 225 - 15;
                            break;
                        case 6:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 315;
                            break;
                        case 7:
                            bingtouxiang_Bullet.S_01_FirstAngle_03 = 315 - 15;
                            break;
                        default:
                            break;
                    }
                    bingtouxiang_Bullet.S_01_FirstAngle_03 += 30;
                    bingtouxiang_Bullet.S_01_FirstAngle_03 += r * 45;
                    bingtouxiang_Bullet.moveOnOff = true; //运动开关
                    bingtouxiang_Bullet.bossName = this.owner.name; //boss名称
                    //如果boss有特殊子弹，那么其他子弹必须为空
                    bingtouxiang_Bullet.specialName = null;
                    //03作为时间线，分别释放其他子弹
                    if (bingtouxiang_Bullet.row === 0 && bingtouxiang_Bullet.line === 7) {
                        this.skill_01_Bullet_01(); //接上第一种子弹
                    }
                    else if (bingtouxiang_Bullet.row === 22 && bingtouxiang_Bullet.line === 7) {
                        this.skill_01_Bullet_02(); //接上第二种子弹
                    }
                    else if (bingtouxiang_Bullet.row === 50 && bingtouxiang_Bullet.line === 7) {
                        this.skill_01_Bullet_04(); //接上第四种子弹
                    }
                }
            });
        };
        var this_5 = this;
        for (var r = 0; r < 80; r++) {
            _loop_5(r);
        }
        this.S_01_Delayed_03 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_04 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_6 = function (r) {
            if (r <= 10) {
                this_6.S_01_Delayed_04 += 20;
            }
            else {
                this_6.S_01_Delayed_04 += 10;
            }
            Laya.timer.frameOnce(this_6.S_01_Delayed_04, this_6, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 20; l++) {
                    var skill_01_Bullet_04 = this.initBullet('enemyBullet/common_bullet.png');
                    skill_01_Bullet_04.name = 'skill_01_Bullet_04';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    skill_01_Bullet_04.pos(bulletX, bulletY);
                    //判断是否有了这个脚本
                    var bingtouxiang_Bullet = skill_01_Bullet_04.getComponent(bingtouxiang_bullet_1.default);
                    if (!bingtouxiang_Bullet) {
                        skill_01_Bullet_04.addComponent(bingtouxiang_bullet_1.default);
                    }
                    bingtouxiang_Bullet = skill_01_Bullet_04.getComponent(bingtouxiang_bullet_1.default);
                    bingtouxiang_Bullet.row = r; //行
                    bingtouxiang_Bullet.group = l; //列
                    bingtouxiang_Bullet.S_01_FirstAngle_04 = l * 18;
                    bingtouxiang_Bullet.moveOnOff = true; //运动开关
                    bingtouxiang_Bullet.bossName = this.owner.name; //boss名称
                    //如果boss有特殊子弹，那么其他子弹必须为空
                    bingtouxiang_Bullet.specialName = null;
                }
            });
        };
        var this_6 = this;
        for (var r = 0; r < 15; r++) {
            _loop_6(r);
        }
        this.S_01_Delayed_04 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            if (this.firstAttack && nowTime - this.attack_NowTime > this.firstAttack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                this.firstAttack = false;
                this.attack('null');
            }
            else if (nowTime - this.attack_NowTime > this.attack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.attack_Interval = 20000;
                            this.skill(); //大招1
                            // 延长下次技能释放时间间隔
                        }
                        else {
                            // 做预防，防止时间错乱
                            if (this.attack_Interval !== 7000) {
                                this.attack_Interval = 7000;
                            }
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Boss/bingtouxiang_bullet":6,"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        /**移动开关判断*/
        _this.moveOnOff = false;
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.A_accelerated_01_01 = 0.06; //加速度
        _this.attack_01_02_radius_00 = 0; //半径
        _this.attack_01_02_radius_01 = 0; //半径
        _this.attack_01_02_radius_02 = 0; //半径
        _this.A_accelerated_01_02 = 0.05;
        _this.accelerated_02_01 = 0.05; //加速度1
        // boss大招子弹类型1
        _this.radius_01 = 0; //旋转半径
        _this.radius_01Variable = 0; //递增变量
        _this.S_accelerated_01_01 = 0.1; //加速度
        // boss大招子弹类型2
        _this.S_accelerated_01_02 = 0.1; //加速度
        // boss大招子弹类型3
        _this.S_accelerated_01_03 = 0.1; //加速度
        _this.S_01_FirstAngle_03 = 0.1; //初始角度3
        // boss大招子弹类型2
        _this.S_accelerated_01_04 = 0.1; //加速度
        _this.S_01_FirstAngle_04 = 0.1; //初始角度3
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['bingtouxiang_bullet'] = this;
        this.initProperty(); //初始化,每次进入重新初始化
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1-1
        this.A_accelerated_01_01 = 0.06; //加速度
        //普通攻击1-2
        this.attack_01_02_radius_00 = 0; //半径1
        this.attack_01_02_radius_01 = 0; //半径2
        this.attack_01_02_radius_02 = 0; //半径
        this.A_accelerated_01_02 = 0.05;
        //普通攻击2
        this.accelerated_02_01 = 0.05; //加速度1
        // 技能1_01
        // boss大招子弹类型1
        this.radius_01 = 0; //半径拉长速度
        this.radius_01Variable = 0;
        this.S_accelerated_01_01 = 0.1; //加速度
        // 技能1_02
        this.S_accelerated_01_02 = 0.1; //加速度
        // 技能1_03
        this.S_accelerated_01_03 = 0.1; //加速度
        // 技能1_04
        this.S_accelerated_01_04 = 0.1; //加速度
    };
    //合集方法
    bullet.prototype.bingTouXiang_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            if (this.specialName === 'attack_01_01_Special') {
                //普通攻击1-1
                this.attack_01_01_Special();
            }
            // 运动轨迹
            switch (this.self.name) {
                //普通攻击1-2
                case 'attack_01_Bullet_02':
                    this.attack_01_02();
                    break;
                //普通攻击2
                case 'attack_02_Bullet_01':
                    this.attack_02_01();
                    break;
                //大招1
                case 'skill_01_Bullet_01':
                    this.skill_01_01();
                    break;
                case 'skill_01_Bullet_02':
                    this.skill_01_02();
                    break;
                case 'skill_01_Bullet_03':
                    this.skill_01_03();
                    break;
                case 'skill_01_Bullet_04':
                    this.skill_01_04();
                    break;
                default:
                    break;
            }
        }
    };
    bullet.prototype.attack_01_01_Special = function () {
        var basedSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(this.randomAngle, basedSpeed + this.A_accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.randomAngle, basedSpeed + this.A_accelerated_01_01).y;
        this.A_accelerated_01_01 += 0.05;
    };
    bullet.prototype.attack_01_02 = function () {
        //父节点
        var bullteParent = this.self.parent;
        // 特殊组节点
        var rowNdoe = bullteParent.getChildByName('attack_01_Group_0' + this.group.toString());
        // 当组节点消失则进行第二种路径
        if (this.self.name === "attack_01_Bullet_02" && rowNdoe === null) {
            this.A_accelerated_01_02 += 0.05;
            this.self.x += Tool_1.default.speedXYByAngle(90, 10 + this.A_accelerated_01_02).x;
            this.self.y += Tool_1.default.speedXYByAngle(90, 10 + this.A_accelerated_01_02).y;
        }
        else {
            var x = rowNdoe.x;
            var y = rowNdoe.y;
            // 给予出生位置
            var rowPoint = new Laya.Point(x, y);
            //实时更新位置
            if (this.row === 0) {
                this.attack_01_02_move(this.attack_01_02_firstAngle, this.attack_01_02_radius_00, rowPoint);
            }
            else if (this.row === 1) {
                this.attack_01_02_move(this.attack_01_02_firstAngle, this.attack_01_02_radius_01, rowPoint);
            }
            else if (this.row === 2) {
                this.attack_01_02_move(this.attack_01_02_firstAngle, this.attack_01_02_radius_02, rowPoint);
            }
            this.attack_01_02_firstAngle += 1;
            this.attack_01_02_radius_00 += 0.62;
            this.attack_01_02_radius_01 += 0.65;
            this.attack_01_02_radius_01 += 0.68;
        }
    };
    //attack_01_02运动
    bullet.prototype.attack_01_02_move = function (firstAngle, radius, rowPoint) {
        this.self.x = Tool_1.default.getRoundPos(firstAngle, radius, rowPoint).x;
        this.self.y = Tool_1.default.getRoundPos(firstAngle, radius, rowPoint).y;
    };
    bullet.prototype.attack_02_01 = function () {
        var basedSpeed = 8;
        switch (this.line) {
            case 0:
                this.attack_02_01_move1(this.A_02_01_firstAngle - 6, basedSpeed - 2);
                break;
            case 1:
                this.attack_02_01_move1(this.A_02_01_firstAngle - 3, basedSpeed - 1);
                break;
            case 2:
                this.attack_02_01_move1(this.A_02_01_firstAngle, basedSpeed);
                break;
            case 3:
                this.attack_02_01_move1(this.A_02_01_firstAngle + 3, basedSpeed - 1);
                break;
            case 4:
                this.attack_02_01_move1(this.A_02_01_firstAngle + 6, basedSpeed - 2);
                break;
            case 5:
                this.attack_02_01_move1(this.A_02_01_firstAngle + 10, basedSpeed - 2);
                break;
            case 6:
                this.attack_02_01_move1(this.A_02_01_firstAngle + 15, basedSpeed - 3);
                break;
            default:
                break;
        }
        this.accelerated_02_01 += 0.05;
    };
    // 第一阶段组移动
    bullet.prototype.attack_02_01_move1 = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).y;
    };
    // 直线发射子弹
    bullet.prototype.skill_01_01 = function () {
        // // boss位置点初始化
        // let bossParent = (this.owner.scene as Laya.Sprite).getChildByName('EnemySpite');
        // this.boss = bossParent.getChildByName(this.bossName);
        // let bulletX = this.boss.x + this.boss.width * 1 / 3;
        // let bulletY = this.boss.y + this.boss.height * 1 / 3 + 50;
        // // this.bossPoint = new Laya.Point(bulletX, bulletY);
        // let bossLiftPoint = new Laya.Point(bulletX + 200, bulletY);
        // let bossRightPoint = new Laya.Point(bulletX - 200, bulletY);
        var basedSpeed = 10;
        switch (this.line) {
            case 0:
                this.S_01_01_move(this.S_01_FirstAngle_01 - 3, basedSpeed - 3);
                break;
            case 1:
                this.S_01_01_move(this.S_01_FirstAngle_01 - 6, basedSpeed - 2);
                break;
            case 2:
                this.S_01_01_move(this.S_01_FirstAngle_01 - 3, basedSpeed - 1);
                break;
            case 3:
                this.S_01_01_move(this.S_01_FirstAngle_01, basedSpeed);
                break;
            case 4:
                this.S_01_01_move(this.S_01_FirstAngle_01, basedSpeed - 4);
                break;
            case 5:
                this.S_01_01_move(this.S_01_FirstAngle_01 + 3, basedSpeed - 1);
                break;
            case 6:
                this.S_01_01_move(this.S_01_FirstAngle_01 + 6, basedSpeed - 2);
                break;
            case 7:
                this.S_01_01_move(this.S_01_FirstAngle_01 + 3, basedSpeed - 3);
                break;
            default:
                break;
        }
        this.S_accelerated_01_01 += 0.05;
    };
    // S_01_01基本移动
    bullet.prototype.S_01_01_move = function (FirstAngle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_01).y;
    };
    bullet.prototype.skill_01_02 = function () {
        var basedSpeed = 5;
        switch (this.line) {
            case 0:
                this.S_01_02_move(this.S_01_FirstAngle_02 - 22, basedSpeed - 0.6);
                break;
            case 1:
                this.S_01_02_move(this.S_01_FirstAngle_02 - 11, basedSpeed - 0.3);
                break;
            case 2:
                this.S_01_02_move(this.S_01_FirstAngle_02, basedSpeed);
                break;
            case 3:
                this.S_01_02_move(this.S_01_FirstAngle_02 + 11, basedSpeed - 0.3);
                break;
            case 4:
                this.S_01_02_move(this.S_01_FirstAngle_02 + 22, basedSpeed - 0.6);
                break;
            default:
                break;
        }
        this.S_accelerated_01_02 += 0.05;
    };
    // S_01_02基本移动
    bullet.prototype.S_01_02_move = function (FirstAngle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_02).x;
        this.self.y += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_02).y;
    };
    bullet.prototype.skill_01_03 = function () {
        var basedSpeed = 8;
        this.S_01_03_move(this.S_01_FirstAngle_03, basedSpeed);
        this.S_accelerated_01_03 += 0.05;
    };
    // S_01_03基本移动
    bullet.prototype.S_01_03_move = function (FirstAngle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_03).x;
        this.self.y += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_03).y;
    };
    bullet.prototype.skill_01_04 = function () {
        if (this.line === 5 || this.line === 10 || this.line === 15 || this.line === 20) {
            this.S_01_04_move(this.S_01_FirstAngle_04, 9);
        }
        else if (this.line === 4 || this.line === 6 || this.line === 9 || this.line === 11 || this.line === 14 || this.line === 16 || this.line === 19 || this.line === 1) {
            this.S_01_04_move(this.S_01_FirstAngle_04, 8);
        }
        else {
            this.S_01_04_move(this.S_01_FirstAngle_04, 7);
        }
        this.S_accelerated_01_04 += 0.05;
    };
    // S_01_02基本移动
    bullet.prototype.S_01_04_move = function (FirstAngle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_04).x;
        this.self.y += Tool_1.default.speedXYByAngle(FirstAngle, basedSpeed + this.S_accelerated_01_04).y;
    };
    bullet.prototype.onDisable = function () {
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var daShuRen_bullet_1 = require("./daShuRen_bullet");
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关
        _this.attack_01Interval = 5000; //时间间隔
        _this.firstAttack = true;
        _this.firstAttack_Interval = 500; //第一次的时间间隔
        _this.attackCounter = 0; //攻击次数计数器；
        _this.attack_01_01_Delayed = 0;
        //普攻2子弹生成类型1
        _this.attack_Delayed = 10; //延时帧数
        //skill子弹类型1
        _this.skill_Delayed = 0; //延时时间
        return _this;
        // boss_maoWangHou猫王后
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        this.attack_01Time = Date.now();
        this.self = this.owner;
        this.self.name = 'dashuren';
        this.self.markName = 'dashuren';
        this.creatBossAni();
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_dashuren");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
    };
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(205, 165);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    /**boss的移动行为*/
    Boss_jinsenangua.prototype.move = function () {
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 50) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4) {
                this.moveDirection = "left";
            }
        }
    };
    /**普通攻击
    *两种普通攻击根据攻击次数交替进行*/
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
        if (random === "random") {
            var number = Math.floor(Math.random() * 2);
            if (number === 1) {
                this.attack_02_Bullet_01(); //普通攻击2
            }
            else {
                this.attack_01_Bullet_01(); //普通攻击1
            }
        }
        else {
            if (this.attackCounter % 2 !== 0) {
                this.attack_01_Bullet_01(); //普通攻击1
            }
            else {
                this.attack_02_Bullet_01(); //普通攻击2
            }
        }
    };
    /**实例化子弹
      * @param skin 子弹图片地址
      * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    /**普攻1子弹类型1*/
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var key = 8;
        var _loop_1 = function (r) {
            // 延时创建
            Laya.timer.frameOnce(this_1.attack_01_01_Delayed, this_1, function () {
                //如果场景被清掉，就不会在执行
                if (this.owner.scene === null) {
                    return;
                }
                for (var l = 0; l < 8; l++) {
                    var bullet_attack01 = this.initBullet('enemyBullet/common_bullet.png');
                    bullet_attack01.name = 'attack_01_Bullet_01';
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 100;
                    // 注意每次位置参考的层次属性都不尽相同
                    bullet_attack01.pos(bulletX, bulletY);
                    // 判断是否有了这个脚本
                    var daShuRen_Bullet = bullet_attack01.getComponent(daShuRen_bullet_1.default);
                    if (!daShuRen_Bullet) {
                        bullet_attack01.addComponent(daShuRen_bullet_1.default);
                    }
                    daShuRen_Bullet = bullet_attack01.getComponent(daShuRen_bullet_1.default);
                    ;
                    daShuRen_Bullet.row = r; //组
                    daShuRen_Bullet.line = l; //列
                    daShuRen_Bullet.moveOnOff = true; //运动开关
                    var number = 10;
                    var baseAngle = 80;
                    daShuRen_Bullet.firstAngle = (l * 35 - baseAngle) + r * number;
                }
            });
            this_1.attack_01_01_Delayed += 10;
        };
        var this_1 = this;
        for (var r = 0; r < 10; r++) {
            _loop_1(r);
        }
        this.attack_01_01_Delayed = 0;
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_2 = function (g) {
            Laya.timer.frameOnce(this_2.attack_Delayed, this_2, function () {
                //如果场景被清掉，就不会在执行
                if (this.owner.scene === null) {
                    return;
                }
                for (var r = 0; r < 4; r++) {
                    for (var l = 0; l < 5; l++) {
                        var bullet_attack01 = this.initBullet('enemyBullet/common_bullet.png');
                        bullet_attack01.name = 'attack_02_Bullet_01';
                        // 每列位置要和zOrder对应查找；
                        // 位置需要修正
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 100;
                        // 注意每次位置参考的层次属性都不尽相同
                        switch (r) {
                            case 0:
                                bullet_attack01.pos(bulletX - 100, bulletY);
                                break;
                            case 1:
                                bullet_attack01.pos(bulletX - 50, bulletY);
                                break;
                            case 2:
                                bullet_attack01.pos(bulletX + 50, bulletY);
                                break;
                            case 3:
                                bullet_attack01.pos(bulletX + 100, bulletY);
                                break;
                            default:
                                break;
                        }
                        // 判断是否有了这个脚本
                        var daShuRen_Bullet = bullet_attack01.getComponent(daShuRen_bullet_1.default);
                        if (!daShuRen_Bullet) {
                            bullet_attack01.addComponent(daShuRen_bullet_1.default);
                        }
                        daShuRen_Bullet = bullet_attack01.getComponent(daShuRen_bullet_1.default);
                        daShuRen_Bullet.group = g; //组
                        daShuRen_Bullet.row = r; //行
                        daShuRen_Bullet.line = l; //列
                        daShuRen_Bullet.moveOnOff = true; //运动开关
                        daShuRen_Bullet.velocityRandom = Math.random() * 15 + 5; //运动速度随机
                    }
                }
            });
            this_2.attack_Delayed += 15;
        };
        var this_2 = this;
        for (var g = 0; g < 5; g++) {
            _loop_2(g);
        }
        this.attack_Delayed = 0; //每一列循环结束之后延时重置；
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        this.skill_01_Bullet_01();
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_3 = function (g) {
            Laya.timer.frameOnce(this_3.skill_Delayed, this_3, function () {
                //如果场景被清掉，就不会在执行
                if (this.owner.scene === null) {
                    return;
                }
                for (var r = 0; r < 10; r++) {
                    for (var l = 0; l < 8; l++) {
                        var bullet_attack01 = this.initBullet('enemyBullet/common_bullet.png');
                        if (bullet_attack01["testvar"]) {
                            console.error("创建标记zidan");
                        }
                        bullet_attack01.name = 'skill_01_Bullet_01';
                        // 每列位置要和zOrder对应查找；
                        // 位置需要修正
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3;
                        // 注意每次位置参考的层次属性都不尽相同
                        bullet_attack01.pos(bulletX, bulletY);
                        // 判断是否有了这个脚本
                        var daShuRen_Bullet = bullet_attack01.getComponent(daShuRen_bullet_1.default);
                        if (!daShuRen_Bullet) {
                            bullet_attack01.addComponent(daShuRen_bullet_1.default);
                        }
                        daShuRen_Bullet = bullet_attack01.getComponent(daShuRen_bullet_1.default);
                        ;
                        daShuRen_Bullet.group = g; //组
                        daShuRen_Bullet.row = r; //组
                        daShuRen_Bullet.line = l; //列
                        daShuRen_Bullet.moveOnOff = true; //运动开关
                        daShuRen_Bullet.velocityRandom = Math.random() * 15 + 5;
                    }
                }
            });
            this_3.skill_Delayed += 10;
        };
        var this_3 = this;
        for (var g = 0; g < 5; g++) {
            _loop_3(g);
        }
        this.skill_Delayed = 0; //延时时间在结束之后重置为0
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            // 首次攻击很快
            if (this.firstAttack && nowTime - this.attack_01Time > this.firstAttack_Interval) {
                this.attack('null');
                this.firstAttack = false;
                this.attack_01Time = nowTime; //重置时间
            }
            if (nowTime - this.attack_01Time > this.attack_01Interval) {
                this.attack_01Time = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.skill(); //大招1
                        }
                        else {
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70,"./daShuRen_bullet":8}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关判断
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.accelerated_01_01 = 0.06; //加速度
        // attack_02_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.accelerated_02_01 = 0.05; //加速度
        _this.stepSwitch = true; //阶段开关
        // boss大招子弹类型1
        // 混乱Z型
        _this.skill_accelerated_01_01 = 0.1; //加速度
        _this.timer_01 = 0; //第一阶段计时器,可随机
        _this.skill_stepSwitch_01 = true;
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.bossName = "dashuren";
        this.self['daShuRen_bullet'] = this;
        this.initProperty(); //初始化,每次进入重新初始化
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1
        this.accelerated_01_01 = 0.06; //加速度
        //普通攻击2
        this.accelerated_02_01 = 0.05;
        this.stepSwitch = true; //阶段开关
        // 技能1
        this.timer_01 = 0;
        this.skill_accelerated_01_01 = 0.1;
        this.skill_stepSwitch_01 = true;
    };
    /**合集方法*/
    bullet.prototype.daShuRen_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            // 运动轨迹
            switch (this.self.name) {
                case 'attack_01_Bullet_01':
                    this.attack_01_01();
                    break;
                case 'attack_02_Bullet_01':
                    this.attack_02_01();
                    break;
                case 'skill_01_Bullet_01':
                    this.skill_01_01();
                    break;
            }
        }
    };
    bullet.prototype.attack_01_01 = function () {
        var basedSpeed = 6;
        var angle = this.firstAngle;
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_01_01).y;
        this.accelerated_01_01 += 0.01;
    };
    bullet.prototype.attack_02_01 = function () {
        if (this.self.y < Laya.stage.height * 1 / 4 && this.stepSwitch) {
            // 第一阶段
            switch (this.row) {
                case 0:
                    this.self.x += Tool_1.default.speedXYByAngle(130, 3 + this.accelerated_02_01).x;
                    this.self.y += Tool_1.default.speedXYByAngle(130, 3 + this.accelerated_02_01).y;
                    break;
                case 1:
                    this.self.x += Tool_1.default.speedXYByAngle(95, 2 + this.accelerated_02_01).x;
                    this.self.y += Tool_1.default.speedXYByAngle(95, 2 + this.accelerated_02_01).y;
                    break;
                case 2:
                    this.self.x += Tool_1.default.speedXYByAngle(85, 2 + this.accelerated_02_01).x;
                    this.self.y += Tool_1.default.speedXYByAngle(85, 2 + this.accelerated_02_01).y;
                    break;
                case 3:
                    this.self.x += Tool_1.default.speedXYByAngle(130, 3 + this.accelerated_02_01).x;
                    this.self.y += Tool_1.default.speedXYByAngle(130, 3 + this.accelerated_02_01).y;
                    break;
                default:
                    break;
            }
        }
        else {
            // 第二阶段
            var basedSpeed = 10;
            this.stepSwitch = false;
            var angle = 32.5 + this.line * 25;
            this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).y;
        }
        this.accelerated_02_01 += 0.01;
    };
    ; // 第一阶段开关
    bullet.prototype.skill_01_01 = function () {
        var basedSpeed = 4;
        if (this.timer_01 < 8 && this.skill_stepSwitch_01) {
            var angle = this.row * 36;
            this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed - 4 + this.skill_accelerated_01_01).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed - 4 + this.skill_accelerated_01_01).y;
        }
        else {
            this.skill_stepSwitch_01 = false;
            var angle = 45 + this.line * 45;
            this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.skill_accelerated_01_01).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.skill_accelerated_01_01).y;
        }
        this.timer_01 += 0.1;
        this.skill_accelerated_01_01 += 0.05;
    };
    bullet.prototype.onDisable = function () {
        // Laya.Pool.recover("bulltePrefab", this.owner);
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var jibaobao_bullet_1 = require("../Boss/jibaobao_bullet"); //石头巨人子弹
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关
        _this.attack_Interval = 10000; //时间间隔
        _this.firstAttack = true;
        _this.attackCounter = 0; //攻击次数计数器；
        //普攻1子弹类型1
        _this.attack_01_Delayed_01 = 0; //延时帧数
        _this.attack_01_Launches_01 = 1;
        //普攻2子弹生成类型1
        _this.attack_02_Delayed_01 = 0; //延时帧数
        //skill子弹类型1
        _this.S_01_Delayed_01 = 0;
        //skill子弹类型2
        _this.S_01_Delayed_02 = 0; //延时时间
        //普攻2子弹生成类型1
        _this.S_01_Delayed_03 = 0; //延时帧数
        //普攻2子弹生成类型1
        _this.S_01_Delayed_04 = 0; //延时帧数
        return _this;
        // boss_jibaobao鸡宝宝
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        // 需要每次初始化属性
        this.initProperty();
        this.creatBossAni();
        this.self.name = 'jibaobao';
        this.self.markName = "jibaobao";
    };
    //初始化属性
    Boss_jinsenangua.prototype.initProperty = function () {
        this.self = this.owner;
        this.moveOnOff = false; //移动开关
        this.attack_Interval = 8000; //时间间隔
        this.firstAttack = true;
        this.firstAttack_Interval = 4000; //第一次的时间间隔
        this.attackCounter = 0; //攻击次数计数器；
        this.attack_NowTime = Date.now();
        //普攻1子弹类型1
        this.attack_01_Delayed_01 = 0; //延时帧数
        // 普通攻击2子弹类型1
        this.attack_02_Delayed_01 = 0; //延时帧数
        //大招1—01
        //大招1—02
        this.S_01_Delayed_02 = 0; //延时帧数
        //大招1—03
        this.S_01_Delayed_03 = 0; //延时帧数
        //大招1—03
        this.S_01_Delayed_04 = 0; //延时帧数
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        //骨骼动画赋值
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_jibaobao");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
        // this.bossTemplet = new Laya.Templet();
        // this.bossTemplet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        // this.bossTemplet.on(Laya.Event.ERROR, this, this.onError);
        // this.bossTemplet.loadAni("dragonbones/boss_jibaobao.sk");
    };
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(205, 165);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    //boss的移动行为
    Boss_jinsenangua.prototype.move = function () {
        // this.self.x = Laya.stage.width / 2 - 170;
        // return;
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 50) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4) {
                this.moveDirection = "left";
            }
        }
    };
    //普通攻击
    //两种普通攻击根据攻击次数交替进行
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // // 延时用于匹配动作
        Laya.timer.frameOnce(30, this, function () {
            if (this.owner.scene === null) {
                return;
            }
            // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
            if (random === "random") {
                var number = Math.floor(Math.random() * 2);
                if (number === 1) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
            else {
                if (this.attackCounter % 2 !== 0) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
        });
    };
    /**实例化子弹
       * @param skin 子弹图片地址
       * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_1 = function (r) {
            Laya.timer.frameOnce(this_1.attack_01_Delayed_01, this_1, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 18; l++) {
                    var attack_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    // 名称+释放次数，让名称每轮都唯一
                    attack_01_Bullet_01.name = "attack_01_Bullet_01";
                    // 判断是否有了这个脚本
                    var jibaobao_Bullet = attack_01_Bullet_01.getComponent(jibaobao_bullet_1.default);
                    if (!jibaobao_Bullet) {
                        attack_01_Bullet_01.addComponent(jibaobao_bullet_1.default);
                    }
                    //延时添加运动脚本，并且给予一些属性
                    jibaobao_Bullet = attack_01_Bullet_01.getComponent(jibaobao_bullet_1.default);
                    jibaobao_Bullet.row = r;
                    jibaobao_Bullet.line = l;
                    jibaobao_Bullet.moveOnOff = true; //运动开关
                    jibaobao_Bullet.bossName = this.owner.name; //boss名称
                    jibaobao_Bullet.A_01_01_FirstAngle = r * 60 + 45;
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3;
                    var basePoint = new Laya.Point(bulletX, bulletY);
                    var newPoint = Tool_1.tools.getRoundPos(r * 60 + 45, 150, basePoint);
                    attack_01_Bullet_01.pos(newPoint.x, newPoint.y);
                }
            });
            this_1.attack_01_Delayed_01 += 15;
        };
        var this_1 = this;
        //角度合集
        for (var r = 0; r < 20; r++) {
            _loop_1(r);
        }
        this.attack_01_Delayed_01 = 0;
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_2 = function (r) {
            Laya.timer.frameOnce(this_2.attack_02_Delayed_01, this_2, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 20; l++) {
                    var attack_02_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    attack_02_Bullet_01.name = 'attack_02_Bullet_01';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 150;
                    attack_02_Bullet_01.pos(bulletX, bulletY);
                    // 判断是否有了这个脚本
                    var jibaobao_Bullet = attack_02_Bullet_01.getComponent(jibaobao_bullet_1.default);
                    if (!jibaobao_Bullet) {
                        attack_02_Bullet_01.addComponent(jibaobao_bullet_1.default);
                    }
                    //延时添加运动脚本，并且给予一些属性
                    jibaobao_Bullet = attack_02_Bullet_01.getComponent(jibaobao_bullet_1.default);
                    jibaobao_Bullet.row = r; //行
                    jibaobao_Bullet.line = l; //行
                    jibaobao_Bullet.A_02_01_firstAngle = r * 30; //初始角度
                    jibaobao_Bullet.moveOnOff = true; //运动开关
                    jibaobao_Bullet.bossName = this.owner.name; //boss名称
                    jibaobao_Bullet.bossPosX = bulletX;
                    jibaobao_Bullet.bossPosX = bulletY;
                }
            });
            this_2.attack_02_Delayed_01 += 30;
        };
        var this_2 = this;
        for (var r = 0; r < 10; r++) {
            _loop_2(r);
        }
        this.attack_02_Delayed_01 = 0; //环结束之后延时重置；
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        this.skill_01_Bullet_03();
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        for (var g = 0; g < 5; g++) {
            this.S_01_Delayed_01 += 45;
            Laya.timer.frameOnce(this.S_01_Delayed_01, this, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 4; r++) {
                    for (var l = 0; l < 20; l++) {
                        var skill_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                        // 位置需要修正,这次是在boss的四周
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        var basePoint = new Laya.Point(bulletX, bulletY);
                        var newPoint = Tool_1.tools.getRoundPos(r * 90 + 45, 150, basePoint);
                        skill_01_Bullet_01.pos(newPoint.x, newPoint.y);
                        skill_01_Bullet_01.name = 'skill_01_Bullet_01';
                        // 判断是否有了这个脚本
                        var jibaobao_Bullet = skill_01_Bullet_01.getComponent(jibaobao_bullet_1.default);
                        if (!jibaobao_Bullet) {
                            skill_01_Bullet_01.addComponent(jibaobao_bullet_1.default);
                        }
                        //延时添加运动脚本，并且给予一些属性
                        jibaobao_Bullet = skill_01_Bullet_01.getComponent(jibaobao_bullet_1.default);
                        jibaobao_Bullet.moveOnOff = true; //运动开关
                        jibaobao_Bullet.row = r;
                        jibaobao_Bullet.line = l;
                        jibaobao_Bullet.bossName = this.owner.name; //boss名称
                        jibaobao_Bullet.bossPosX = bulletX;
                        jibaobao_Bullet.bossPosY = bulletY;
                    }
                }
            });
        }
        this.S_01_Delayed_01 = 0;
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_02 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_3 = function (g) {
            this_3.S_01_Delayed_02 += 60;
            Laya.timer.frameOnce(this_3.S_01_Delayed_02, this_3, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 8; r++) {
                    for (var l = 0; l < 4; l++) {
                        var skill_01_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                        // 位置需要修正
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 100;
                        skill_01_Bullet_02.pos(bulletX, bulletY);
                        // 注意每次位置参考的层次属性都不尽相同
                        skill_01_Bullet_02.name = 'skill_01_Bullet_02';
                        // 判断是否有了这个脚本
                        var jibaobao_Bullet = skill_01_Bullet_02.getComponent(jibaobao_bullet_1.default);
                        if (!jibaobao_Bullet) {
                            skill_01_Bullet_02.addComponent(jibaobao_bullet_1.default);
                        }
                        //延时添加运动脚本，并且给予一些属性
                        jibaobao_Bullet = skill_01_Bullet_02.getComponent(jibaobao_bullet_1.default);
                        jibaobao_Bullet.group = g;
                        jibaobao_Bullet.row = r;
                        jibaobao_Bullet.line = l;
                        jibaobao_Bullet.bossName = this.owner.name; //boss名称
                        jibaobao_Bullet.bossPosX = bulletX;
                        jibaobao_Bullet.bossPosY = bulletY;
                        jibaobao_Bullet.S_01_02_firstAngle = r * 45;
                    }
                }
            });
        };
        var this_3 = this;
        for (var g = 0; g < 8; g++) {
            _loop_3(g);
        }
        this.S_01_Delayed_02 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_03 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_4 = function (g) {
            this_4.S_01_Delayed_03 += 40;
            Laya.timer.frameOnce(this_4.S_01_Delayed_03, this_4, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 2; r++) {
                    for (var l = 0; l < 4; l++) {
                        var skill_01_Bullet_03 = this.initBullet('enemyBullet/common_bullet.png');
                        skill_01_Bullet_03.name = 'skill_01_Bullet_03';
                        // 位置需要修正
                        var bulletX = void 0;
                        var bulletY = void 0;
                        if (r === 0) {
                            bulletX = this.self.x + this.self.width * 1 / 3 + 130;
                            bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        }
                        else {
                            bulletX = this.self.x + this.self.width * 1 / 3 - 130;
                            bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        }
                        switch (l) {
                            case 0:
                                skill_01_Bullet_03.pos(bulletX, bulletY);
                                break;
                            case 1:
                                skill_01_Bullet_03.pos(bulletX + 40, bulletY);
                                break;
                            case 2:
                                skill_01_Bullet_03.pos(bulletX, bulletY + 40);
                                break;
                            case 3:
                                skill_01_Bullet_03.pos(bulletX + 40, bulletY + 40);
                                break;
                            default:
                                break;
                        }
                        // 判断是否有了这个脚本
                        var jibaobao_Bullet = skill_01_Bullet_03.getComponent(jibaobao_bullet_1.default);
                        if (!jibaobao_Bullet) {
                            skill_01_Bullet_03.addComponent(jibaobao_bullet_1.default);
                        }
                        //延时添加运动脚本，并且给予一些属性
                        jibaobao_Bullet = skill_01_Bullet_03.getComponent(jibaobao_bullet_1.default);
                        jibaobao_Bullet.group = g; //行
                        jibaobao_Bullet.row = r; //行
                        jibaobao_Bullet.line = l; //列
                        jibaobao_Bullet.moveOnOff = true; //运动开关
                        jibaobao_Bullet.bossName = this.owner.name; //boss名称
                        // 时间线
                        if (jibaobao_Bullet.group === 0 && jibaobao_Bullet.row === 1 && jibaobao_Bullet.line === 3) {
                            this.skill_01_Bullet_02();
                        }
                        else if (jibaobao_Bullet.group === 14 && jibaobao_Bullet.row === 1 && jibaobao_Bullet.line === 3) {
                            this.skill_01_Bullet_01();
                        }
                        else if (jibaobao_Bullet.group === 22 && jibaobao_Bullet.row === 1 && jibaobao_Bullet.line === 3) {
                            this.skill_01_Bullet_04();
                        }
                    }
                }
            });
        };
        var this_4 = this;
        for (var g = 0; g < 25; g++) {
            _loop_4(g);
        }
        this.S_01_Delayed_03 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_04 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_5 = function (r) {
            this_5.S_01_Delayed_04 += 5;
            Laya.timer.frameOnce(this_5.S_01_Delayed_04, this_5, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 10; l++) {
                    var skill_01_Bullet_04 = this.initBullet('enemyBullet/common_bullet.png');
                    skill_01_Bullet_04.name = 'skill_01_Bullet_04';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    skill_01_Bullet_04.pos(bulletX, bulletY);
                    // 判断是否有了这个脚本
                    var jibaobao_Bullet = skill_01_Bullet_04.getComponent(jibaobao_bullet_1.default);
                    if (!jibaobao_Bullet) {
                        skill_01_Bullet_04.addComponent(jibaobao_bullet_1.default);
                    }
                    //延时添加运动脚本，并且给予一些属性
                    jibaobao_Bullet = skill_01_Bullet_04.getComponent(jibaobao_bullet_1.default);
                    jibaobao_Bullet.row = r; //行
                    jibaobao_Bullet.line = l; //列
                    jibaobao_Bullet.moveOnOff = true; //运动开关
                    jibaobao_Bullet.bossName = this.owner.name; //boss名称
                    jibaobao_Bullet.S_01_firstAngle_04 = r * 30;
                }
            });
        };
        var this_5 = this;
        for (var r = 0; r < 30; r++) {
            _loop_5(r);
        }
        this.S_01_Delayed_04 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            if (this.firstAttack && nowTime - this.attack_NowTime > this.firstAttack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                this.firstAttack = false;
                this.attack('null');
            }
            else if (nowTime - this.attack_NowTime > this.attack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.attack_Interval = 22000;
                            this.skill(); //大招1
                            // 延长下次技能释放时间间隔
                        }
                        else {
                            // 做预防，防止时间错乱
                            if (this.attack_Interval !== 8000) {
                                this.attack_Interval = 8000;
                            }
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Boss/jibaobao_bullet":10,"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关判断
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.A_accelerated_01_01 = 0.06; //加速度
        // 普通攻击2-1
        _this.accelerated_02_01 = 0.05; //加速度1
        _this.A_02_01_changeAngle = 0.1; //半径变化值
        _this.A_02_01_longRadius = 0; //椭圆长半径
        _this.A_02_01_timer = 0.1; //时间线
        // boss大招子弹类型1
        _this.S_01_01_accelerated = 0.1; //加速度
        // boss大招子弹类型2
        _this.S_01_02_accelerated = 0.1; //加速度
        _this.S_01_02_timer = 0; //时间线
        // boss大招子弹类型3
        _this.S_accelerated_01_03 = 0.1; //加速度
        // boss大招子弹类型2
        _this.S_accelerated_01_04 = 0.1; //加速度
        _this.S_01_firstAngle_04 = 0.1; //初始角度3
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['jibaobao_bullet'] = this;
        this.initProperty(); //初始化,每次进入重新初始化
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1-1
        this.A_accelerated_01_01 = 0.06; //加速度
        //普通攻击2
        this.accelerated_02_01 = 0.05; //加速度1
        this.A_02_01_changeAngle = 0.1; //半径变化值
        this.A_02_01_longRadius = 0; //椭圆长半径
        this.A_02_01_timer = 0.1; //时间线
        // 技能1_01
        // boss大招子弹类型1
        this.S_01_01_accelerated = 0.1; //加速度
        // 技能1_02
        this.S_01_02_accelerated = 0.1; //加速度
        this.S_01_02_timer = 0; //时间线
        // 技能1_03
        this.S_accelerated_01_03 = 0.1; //加速度
        // 技能1_04
        this.S_accelerated_01_04 = 0.1; //加速度
    };
    //合集方法
    bullet.prototype.jibaobao_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            // 运动轨迹
            switch (this.self.name) {
                //普通攻击1-01
                case 'attack_01_Bullet_01':
                    this.attack_01_01();
                    break;
                //普通攻击2_01
                case 'attack_02_Bullet_01':
                    this.attack_02_01();
                    break;
                //大招1-01
                case 'skill_01_Bullet_01':
                    this.skill_01_01();
                    break;
                //大招1-02
                case 'skill_01_Bullet_02':
                    this.skill_01_02();
                    break;
                //大招1-03
                case 'skill_01_Bullet_03':
                    this.skill_01_03();
                    break;
                //大招1-04
                case 'skill_01_Bullet_04':
                    this.skill_01_04();
                    break;
                default:
                    break;
            }
        }
    };
    bullet.prototype.attack_01_01 = function () {
        var Angle = this.line * 20;
        var basedSpeed = 5;
        this.attack_01_01_move(Angle, basedSpeed);
        this.A_accelerated_01_01 += 0.03;
    };
    bullet.prototype.attack_01_01_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.A_accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.A_accelerated_01_01).y;
    };
    bullet.prototype.attack_01_02_move = function (angle, radius) {
        // boss位置点初始化
        var bossParent = this.owner.scene.getChildByName('EnemySpite');
        this.boss = bossParent.getChildByName(this.bossName);
        if (this.boss === null) {
            return;
        }
        var bulletX = this.boss.x + this.boss.width * 1 / 3;
        var bulletY = this.boss.y + this.boss.height * 1 / 3 + 50;
        this.bossPoint = new Laya.Point(bulletX, bulletY);
        this.self.x = Tool_1.default.getRoundPos(angle, radius, this.bossPoint).x;
        this.self.y = Tool_1.default.getRoundPos(angle, radius, this.bossPoint).y;
    };
    bullet.prototype.attack_02_01 = function () {
        // boss位置点初始化
        var bossParent = this.owner.scene.getChildByName('EnemySpite');
        this.boss = bossParent.getChildByName(this.bossName);
        if (this.boss === null) {
            return;
        }
        var bulletX = this.boss.x + this.boss.width * 1 / 3;
        var bulletY = this.boss.y + this.boss.height * 1 / 3 + 100;
        this.bossPoint = new Laya.Point(bulletX, bulletY);
        this.A_02_01_timer += 0.1;
        var angle = this.A_02_01_firstAngle + this.line * 18 + this.A_02_01_changeAngle;
        var radius;
        if (this.A_02_01_timer > 0 && this.A_02_01_timer < 3) {
            if (this.line % 2 !== 0) {
                this.A_02_01_longRadius += 1.3;
            }
            else {
                this.A_02_01_longRadius += 2;
            }
            radius = this.A_02_01_longRadius;
            this.attack_02_01_move2(angle, radius, this.bossPoint);
        }
        else if (this.A_02_01_timer >= 3 && this.A_02_01_timer < 7) {
            //下落时间 
            this.self.x += Tool_1.default.speedXYByAngle(90, 5).x;
            this.self.y += Tool_1.default.speedXYByAngle(90, 5).y;
        }
        else if (this.A_02_01_timer >= 7 && this.A_02_01_timer < 10) {
            // 等待时间
        }
        else {
            this.accelerated_02_01 += 0.1;
            var basedSpeed = void 0;
            if (this.line % 2 !== 0) {
                basedSpeed = 2;
                this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).x;
                this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).y;
            }
            else {
                basedSpeed = 4;
                this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).x;
                this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).y;
            }
        }
    };
    bullet.prototype.attack_02_01_move1 = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated_02_01).y;
    };
    bullet.prototype.attack_02_01_move2 = function (angle, radius, point) {
        this.self.x = Tool_1.default.getRoundPos(angle, radius, point).x;
        this.self.y = Tool_1.default.getRoundPos(angle, radius, point).y;
    };
    // 直线发射子弹
    bullet.prototype.skill_01_01 = function () {
        var basedSpeed = 5;
        var angle = this.line * 18;
        this.S_01_01_move(angle, basedSpeed);
        this.S_01_01_accelerated += 0.03;
    };
    // S_01_01基本移动
    bullet.prototype.S_01_01_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_01_01_accelerated).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_01_01_accelerated).y;
    };
    bullet.prototype.skill_01_02 = function () {
        var basedSpeed;
        this.S_01_02_timer += 0.1;
        if (this.S_01_02_timer >= 0 && this.S_01_02_timer < 2) {
            basedSpeed = 1;
            this.S_01_02_move_01(this.S_01_02_firstAngle, basedSpeed - this.line * 0.4);
        }
        else if (this.S_01_02_timer >= 2 && this.S_01_02_timer < 4) {
            basedSpeed = 1;
            this.S_01_02_move_01(this.S_01_02_firstAngle, basedSpeed + this.line * 0.4);
        }
        else if (this.S_01_02_timer >= 4 && this.S_01_02_timer < 5) {
        }
        else if (this.S_01_02_timer >= 5) {
            basedSpeed = 4;
            this.S_01_02_move_01(this.S_01_02_firstAngle, basedSpeed - this.line * 0.6 + this.S_01_02_accelerated);
        }
        this.S_01_02_accelerated += 0.03;
    };
    bullet.prototype.S_01_02_move_01 = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_01_02_accelerated).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_01_02_accelerated).y;
    };
    bullet.prototype.skill_01_03 = function () {
        var basedSpeed = 6;
        this.S_01_03_move(90, basedSpeed);
        this.S_accelerated_01_03 += 0.03;
    };
    // S_01_03基本移动
    bullet.prototype.S_01_03_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_accelerated_01_03).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_accelerated_01_03).y;
    };
    bullet.prototype.skill_01_04 = function () {
        var angle = this.line * 15 + this.S_01_firstAngle_04;
        var basedSpeed = 10;
        this.S_01_04_move(angle, basedSpeed);
        this.S_accelerated_01_04 += 0.03;
    };
    // S_01_02基本移动
    bullet.prototype.S_01_04_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_accelerated_01_04).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_accelerated_01_04).y;
    };
    bullet.prototype.onDisable = function () {
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var maoWangHou_bullet_1 = require("./maoWangHou_bullet");
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关
        _this.firstAttack = true;
        _this.firstAttack_Interval = 500; //第一次的时间间隔
        _this.attack_01Interval = 5000; //时间间隔
        _this.attackCounter = 0; //攻击次数计数器；
        //普攻1子弹类型1
        _this.attack_01_01_Delayed = 0;
        //普攻2子弹生成类型1
        _this.attack_02_01_Delayed = 0; //延时帧数
        //skill1子弹类型1
        _this.skill_01_01_Delayed = 0; //延时时间
        //skill1子弹类型2
        _this.skill_01_02_Delayed = 40;
        return _this;
        // boss_maoWangHou猫王后
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        this.attack_01Time = Date.now();
        this.self = this.owner;
        this.self.name = "maoWangHou";
        this.self.markName = "maoWangHou";
        this.creatBossAni();
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_maowanghou");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
    };
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(205, 165);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    //boss的移动行为
    Boss_jinsenangua.prototype.move = function () {
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 120) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4 - 30) {
                this.moveDirection = "left";
            }
        }
    };
    //普通攻击
    //两种普通攻击根据攻击次数交替进行
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
        if (random === "random") {
            var number = Math.floor(Math.random() * 2);
            if (number === 1) {
                this.attack_01_Bullet_01(); //普通攻击1
            }
            else {
                this.attack_02_Bullet_01(); //普通攻击2
            }
        }
        else {
            if (this.attackCounter % 2 !== 0) {
                this.attack_01_Bullet_01(); //普通攻击1
            }
            else {
                this.attack_02_Bullet_01(); //普通攻击2
            }
        }
    };
    /**实例化子弹
     * @param skin 子弹图片地址
     * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.line = 1;
        var _loop_1 = function (r) {
            var _loop_2 = function (l) {
                this_1.attack_01_01_Delayed += 3;
                // 延时创建
                Laya.timer.frameOnce(this_1.attack_01_01_Delayed, this_1, function () {
                    //如果场景被清掉，就不会在执行
                    if (this.owner.scene === null) {
                        return;
                    }
                    var attack_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    attack_01_Bullet_01.name = 'attack_01_Bullet_01';
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 80;
                    switch (l) {
                        case 0:
                            attack_01_Bullet_01.pos(bulletX - 200 - 50, bulletY);
                            break;
                        case 1:
                            attack_01_Bullet_01.pos(bulletX - 200, bulletY + 50);
                            break;
                        case 2:
                            attack_01_Bullet_01.pos(bulletX - 200, bulletY);
                            break;
                        case 3:
                            attack_01_Bullet_01.pos(bulletX - 200, bulletY - 50);
                            break;
                        case 4:
                            attack_01_Bullet_01.pos(bulletX - 200 + 50, bulletY);
                            break;
                        case 5:
                            attack_01_Bullet_01.pos(bulletX + 200 - 50, bulletY);
                            break;
                        case 6:
                            attack_01_Bullet_01.pos(bulletX + 200, bulletY + 50);
                            break;
                        case 7:
                            attack_01_Bullet_01.pos(bulletX + 200, bulletY);
                            break;
                        case 8:
                            attack_01_Bullet_01.pos(bulletX + 200, bulletY - 50);
                            break;
                        case 9:
                            attack_01_Bullet_01.pos(bulletX + 200 + 50, bulletY);
                            break;
                        default:
                            break;
                    }
                    // 是否有了这个脚本，现在是destroy()，如果性能不行可能会修改
                    var maoWangHou_Bullet = attack_01_Bullet_01.getComponent(maoWangHou_bullet_1.default);
                    if (!maoWangHou_Bullet) {
                        attack_01_Bullet_01.addComponent(maoWangHou_bullet_1.default);
                    }
                    maoWangHou_Bullet = attack_01_Bullet_01.getComponent(maoWangHou_bullet_1.default);
                    maoWangHou_Bullet.row = r; //行
                    maoWangHou_Bullet.line = l; //列
                    maoWangHou_Bullet.moveOnOff = true; //运动开关
                });
            };
            for (var l = 0; l < 10; l++) {
                _loop_2(l);
            }
        };
        var this_1 = this;
        for (var r = 0; r < 5; r++) {
            _loop_1(r);
        }
        this.attack_01_01_Delayed = 0;
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.line = 1;
        var _loop_3 = function (r) {
            Laya.timer.frameOnce(this_2.attack_02_01_Delayed, this_2, function () {
                //如果场景被清掉，就不会在执行
                if (this.owner.scene === null) {
                    return;
                }
                for (var l = 0; l < 17; l++) {
                    var attack_02_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    attack_02_Bullet_01.name = 'attack_02_Bullet_01';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 30;
                    switch (r) {
                        case 0:
                            attack_02_Bullet_01.pos(bulletX - 180, bulletY);
                            break;
                        case 1:
                            attack_02_Bullet_01.pos(bulletX + 180, bulletY);
                            break;
                        case 2:
                            attack_02_Bullet_01.pos(bulletX - 180, bulletY);
                            break;
                        case 3:
                            attack_02_Bullet_01.pos(bulletX + 180, bulletY);
                            break;
                        case 4:
                            attack_02_Bullet_01.pos(bulletX - 180, bulletY);
                            break;
                        case 5:
                            attack_02_Bullet_01.pos(bulletX + 180, bulletY);
                            break;
                        case 6:
                            attack_02_Bullet_01.pos(bulletX - 180, bulletY);
                            break;
                        case 7:
                            attack_02_Bullet_01.pos(bulletX + 180, bulletY);
                            break;
                        default:
                            break;
                    }
                    // 是否有了这个脚本，现在是destroy()，如果性能不行可能会修改
                    var maoWangHou_Bullet = attack_02_Bullet_01.getComponent(maoWangHou_bullet_1.default);
                    if (!maoWangHou_Bullet) {
                        attack_02_Bullet_01.addComponent(maoWangHou_bullet_1.default);
                    }
                    maoWangHou_Bullet = attack_02_Bullet_01.getComponent(maoWangHou_bullet_1.default);
                    maoWangHou_Bullet.row = r; //行
                    maoWangHou_Bullet.line = l; //列
                    maoWangHou_Bullet.moveOnOff = true; //运动开关
                    maoWangHou_Bullet.velocityRandom = Math.random() * 6 + 4; //运动速度随机
                }
            });
            this_2.attack_02_01_Delayed += 20;
        };
        var this_2 = this;
        for (var r = 0; r < 8; r++) {
            _loop_3(r);
        }
        this.attack_02_01_Delayed = 0; //每一列循环结束之后延时重置；
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        this.skill_01_Bullet_01();
        this.skill_01_Bullet_02();
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.line = 1;
        var _loop_4 = function (r) {
            this_3.skill_01_01_Delayed += 15;
            Laya.timer.frameOnce(this_3.skill_01_01_Delayed, this_3, function () {
                //如果场景被清掉，就不会在执行
                if (this.owner.scene === null) {
                    return;
                }
                for (var l = 0; l < 6; l++) {
                    var skill_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    skill_01_Bullet_01.name = 'skill_01_Bullet_01';
                    // 位置需要修正
                    var bulletX = Laya.stage.width / 2 - 20;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 70;
                    switch (l) {
                        case 0:
                            skill_01_Bullet_01.pos(bulletX - 200, bulletY);
                            break;
                        case 1:
                            skill_01_Bullet_01.pos(bulletX - 150, bulletY);
                            break;
                        case 2:
                            skill_01_Bullet_01.pos(bulletX - 25, bulletY);
                            break;
                        case 3:
                            skill_01_Bullet_01.pos(bulletX + 25, bulletY);
                            break;
                        case 4:
                            skill_01_Bullet_01.pos(bulletX + 150, bulletY);
                            break;
                        case 5:
                            skill_01_Bullet_01.pos(bulletX + 200, bulletY);
                            break;
                        default:
                            break;
                    }
                    // 是否有了这个脚本，现在是destroy()，如果性能不行可能会修改
                    var maoWangHou_Bullet = skill_01_Bullet_01.getComponent(maoWangHou_bullet_1.default);
                    if (!maoWangHou_Bullet) {
                        skill_01_Bullet_01.addComponent(maoWangHou_bullet_1.default);
                    }
                    maoWangHou_Bullet = skill_01_Bullet_01.getComponent(maoWangHou_bullet_1.default);
                    maoWangHou_Bullet.row = r; //行
                    maoWangHou_Bullet.line = l; //列
                    maoWangHou_Bullet.moveOnOff = true; //运动开关
                }
            });
        };
        var this_3 = this;
        for (var r = 0; r < 20; r++) {
            _loop_4(r);
        }
        this.skill_01_01_Delayed = 0; //延时时间在结束之后重置为0
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_02 = function () {
        var _loop_5 = function (r) {
            this_4.skill_01_02_Delayed += 25;
            Laya.timer.frameOnce(this_4.skill_01_02_Delayed, this_4, function () {
                //如果场景被清掉，就不会在执行
                if (this.owner.scene === null) {
                    return;
                }
                for (var l = 0; l < 18; l++) {
                    var skill_01_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                    skill_01_Bullet_02.name = 'skill_01_Bullet_02';
                    // 位置需要修正
                    // let bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 100;
                    var bulletX = Laya.stage.width / 2 - 20;
                    skill_01_Bullet_02.pos(bulletX, bulletY);
                    // 是否有了这个脚本，现在是destroy()，如果性能不行可能会修改
                    var maoWangHou_Bullet = skill_01_Bullet_02.getComponent(maoWangHou_bullet_1.default);
                    if (!maoWangHou_Bullet) {
                        skill_01_Bullet_02.addComponent(maoWangHou_bullet_1.default);
                    }
                    maoWangHou_Bullet = skill_01_Bullet_02.getComponent(maoWangHou_bullet_1.default);
                    maoWangHou_Bullet.row = r; //行
                    maoWangHou_Bullet.line = l; //列
                    maoWangHou_Bullet.moveOnOff = true; //运动开关
                }
            });
        };
        var this_4 = this;
        for (var r = 0; r < 10; r++) {
            _loop_5(r);
        }
        this.skill_01_02_Delayed = 0;
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            // 首次攻击很快
            if (this.firstAttack && nowTime - this.attack_01Time > this.firstAttack_Interval) {
                this.attack('null');
                this.firstAttack = false;
                this.attack_01Time = nowTime; //重置时间
            }
            if (nowTime - this.attack_01Time > this.attack_01Interval) {
                this.attack_01Time = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.attack_01Interval = 8000;
                            this.skill(); //大招1
                        }
                        else {
                            if (this.attack_01Interval !== 5000) {
                                this.attack_01Interval = 5000;
                            }
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70,"./maoWangHou_bullet":12}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关判断
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.attack_01_01_Accelerated = 0.06; //加速度
        // attack_02_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.attack_02_01_Accelerated = 0.06; //加速度
        _this.stepSwitch = true; //阶段开关
        // boss大招1子弹类型1
        // 复合型子弹
        _this.skill_01_01_accelerated = 0.1; //加速度
        // boss大招1子弹类型2
        // 复合型子弹
        _this.skill_01_02_accelerated = 0.1; //加速度
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.bossName = "maoWangHou";
        this.initProperty(); //初始化,每次进入重新初始化
        this.self["maoWangHou_bullet"] = this;
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1
        this.attack_01_01_Accelerated = 0.06; //加速度
        //普通攻击2
        this.attack_02_01_Accelerated = 0.06; //加速度
        this.stepSwitch = true; //阶段开关
        this.velocityRandom; //速度随机数
        // 技能1_01
        this.skill_01_01_accelerated = 0.1;
        // 技能1_02
        this.skill_01_02_accelerated = 0.1;
    };
    //合集方法
    bullet.prototype.maoWangHou_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            // 运动轨迹
            switch (this.self.name) {
                case 'attack_01_Bullet_01':
                    this.attack_01_01();
                    break;
                case 'attack_02_Bullet_01':
                    this.attack_02_01();
                    break;
                case 'skill_01_Bullet_01':
                    this.skill_01_01();
                    break;
                case 'skill_01_Bullet_02':
                    this.skill_01_02();
                    break;
            }
        }
    };
    bullet.prototype.attack_01_01 = function () {
        if (this.line === 0 || this.line === 5) {
            this.self.x += Tool_1.default.speedXYByAngle(130, 6 + this.attack_01_01_Accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(130, 6 + this.attack_01_01_Accelerated).y;
        }
        else if (this.line === 1 || this.line === 6) {
            this.self.x += Tool_1.default.speedXYByAngle(110, 6 + this.attack_01_01_Accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(110, 6 + this.attack_01_01_Accelerated).y;
        }
        else if (this.line === 2 || this.line === 7) {
            this.self.x += Tool_1.default.speedXYByAngle(90, 6 + this.attack_01_01_Accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(90, 6 + this.attack_01_01_Accelerated).y;
        }
        else if (this.line === 3 || this.line === 8) {
            this.self.x += Tool_1.default.speedXYByAngle(70, 6 + this.attack_01_01_Accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(70, 6 + this.attack_01_01_Accelerated).y;
        }
        else if (this.line === 4 || this.line === 9) {
            this.self.x += Tool_1.default.speedXYByAngle(50, 6 + this.attack_01_01_Accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(50, 6 + this.attack_01_01_Accelerated).y;
        }
        this.attack_01_01_Accelerated += 0.01;
    };
    bullet.prototype.attack_02_01 = function () {
        if (this.self.y < Laya.stage.height * 1 / 2 - 150 && this.stepSwitch) {
            // 第一阶段
            this.self.y += 3 + this.attack_02_01_Accelerated;
        }
        else {
            // 第一阶段
            this.stepSwitch = false;
            var angle = this.line * 20;
            this.self.x += Tool_1.default.speedXYByAngle(angle, this.velocityRandom + this.attack_02_01_Accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, this.velocityRandom + this.attack_02_01_Accelerated).y;
        }
        this.attack_02_01_Accelerated += 0.01;
    };
    bullet.prototype.skill_01_01 = function () {
        var baseSpeed = 10;
        if (this.line === 0 || this.line === 1) {
            this.self.x += Tool_1.default.speedXYByAngle(120, baseSpeed + this.skill_01_01_accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(120, baseSpeed + this.skill_01_01_accelerated).y;
        }
        else if (this.line === 2 || this.line === 3) {
            this.self.x += Tool_1.default.speedXYByAngle(90, baseSpeed + this.skill_01_01_accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(90, baseSpeed + this.skill_01_01_accelerated).y;
        }
        else if (this.line === 4 || this.line === 5) {
            this.self.x += Tool_1.default.speedXYByAngle(60, baseSpeed + this.skill_01_01_accelerated).x;
            this.self.y += Tool_1.default.speedXYByAngle(60, baseSpeed + this.skill_01_01_accelerated).y;
        }
    };
    bullet.prototype.skill_01_02 = function () {
        var baseSpeed = 6;
        var Angle = this.line * 14 - 30;
        this.self.x += Tool_1.default.speedXYByAngle(Angle, baseSpeed + this.skill_01_02_accelerated).x;
        this.self.y += Tool_1.default.speedXYByAngle(Angle, baseSpeed + this.skill_01_02_accelerated).y;
        this.skill_01_02_accelerated += 0.05;
    };
    bullet.prototype.onDisable = function () {
        Laya.Pool.recover("bulltePrefab", this.owner);
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nanGuaWangZi_bullet_1 = require("./nanGuaWangZi_bullet");
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关
        _this.attack_01Interval = 3000; //时间间隔
        _this.firstAttack = true;
        _this.firstAttack_Interval = 500; //第一次的时间间隔
        _this.attackCounter = 0; //攻击次数计数器；
        //普攻1子弹生成类型2
        _this.attack_Delayed = 0; //延时帧数
        //skill子弹类型1
        _this.skill_Delayed = 0; //延时时间
        return _this;
        // boss_nanguawangzi南瓜王子
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        this.initProperty();
        this.creatBossAni();
    };
    Boss_jinsenangua.prototype.initProperty = function () {
        this.attack_01Time = Date.now();
        this.self = this.owner;
        this.moveOnOff = false; //移动开关
        this.attack_01Interval = 3000; //时间间隔
        this.firstAttack = true;
        this.firstAttack_Interval = 500; //第一次的时间间隔
        this.attackCounter = 0; //攻击次数计数器；
        this.self.name = "nanguawangzi";
        this.self.markName = "nanguawangzi";
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_nanguawangzi");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
    };
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(200, 150);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    //boss的移动行为
    Boss_jinsenangua.prototype.move = function () {
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 80) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4) {
                this.moveDirection = "left";
            }
        }
    };
    //普通攻击
    //两种普通攻击根据攻击次数交替进行
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
        if (random === "random") {
            var number = Math.floor(Math.random() * 2);
            if (number === 1) {
                this.attack_01_Bullet_01(); //普通攻击1
            }
            else {
                this.attack_02_Bullet_01(); //普通攻击2
            }
        }
        else {
            if (this.attackCounter % 2 !== 0) {
                this.attack_01_Bullet_01(); //普通攻击1
            }
            else {
                this.attack_02_Bullet_01(); //普通攻击2
            }
        }
    };
    /**实例化子弹
     * @param skin 子弹图片地址
     * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    /**子弹脚本属性赋值
    * @param bullet 子弹本身
 * @param syncRotation 子弹本身的角度是和移动方向相同
    * @param row 子弹属于那一排
    * @param line 子弹属于那一列
    * @param dirRotation 初始移动方向
    * @param firstAngle 初始速度
   */
    Boss_jinsenangua.prototype.bulletProperties = function (bullet, syncRotation, row, line, dirRotation, firstAngle) {
        //添加运动脚本，并且给予一些属性
        if (!bullet['nanGuaWangZi_bullet']) {
            bullet.addComponent(nanGuaWangZi_bullet_1.default);
        }
        var MediumEnemy_Bullet = bullet['nanGuaWangZi_bullet'];
        MediumEnemy_Bullet.row = row;
        MediumEnemy_Bullet.line = line;
        MediumEnemy_Bullet.dirRotation = dirRotation;
        MediumEnemy_Bullet.firstAngle = firstAngle;
        MediumEnemy_Bullet.bossName = this.owner.name;
        if (syncRotation === 'sync') {
            bullet.rotation = firstAngle - 90;
        }
        else {
            bullet.rotation = 0;
        }
    };
    //普攻1子弹类型1
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        for (var l = 0; l < 15; l++) {
            var bullet_attack01 = this.initBullet('enemyBullet/boss_nanguawangzi_b_01.png');
            bullet_attack01.name = 'attack_01_Bullet_01';
            bullet_attack01.pos(this.self.x + this.self.width * 1 / 3, this.self.y + this.self.height * 1 / 3);
            //添加运动脚本，并且给予一些属性
            var dirRotation = Math.floor(Math.random() * 2) === 1 ? 'left' : 'right';
            this.bulletProperties(bullet_attack01, 'no', null, l, dirRotation, null);
        }
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        var _loop_1 = function (r) {
            var _loop_2 = function (l) {
                Laya.timer.frameOnce(this_1.attack_Delayed, this_1, function () {
                    //如果场景被清掉，就不会在执行
                    if (this.owner.scene === null) {
                        return;
                    }
                    var bullet_attack01 = this.initBullet('enemyBullet/boss_nanguawangzi_b_02.png');
                    bullet_attack01.name = 'attack_02_Bullet_01';
                    // 位置需要修正
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3;
                    switch (r) {
                        case 0:
                            bullet_attack01.pos(bulletX - 200, bulletY);
                            break;
                        case 1:
                            bullet_attack01.pos(bulletX - 175, bulletY);
                            break;
                        case 2:
                            bullet_attack01.pos(bulletX - 0, bulletY);
                            break;
                        case 3:
                            bullet_attack01.pos(bulletX - 0, bulletY);
                            break;
                        case 4:
                            bullet_attack01.pos(bulletX + 175, bulletY);
                            break;
                        case 5:
                            bullet_attack01.pos(bulletX + 200, bulletY);
                            break;
                        default:
                            break;
                    }
                    //添加运动脚本，并且给予一些属性
                    this.bulletProperties(bullet_attack01, 'no', r, l, null, null);
                });
                this_1.attack_Delayed += 10;
            };
            for (var l = 0; l < 5; l++) {
                _loop_2(l);
            }
            this_1.attack_Delayed = 0; //每一列循环结束之后延时重置；
        };
        var this_1 = this;
        for (var r = 0; r < 6; r++) {
            _loop_1(r);
        }
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        this.skill_01_Bullet_01();
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        var _loop_3 = function (r) {
            Laya.timer.frameOnce(this_2.skill_Delayed, this_2, function () {
                //如果场景被清掉，就不会在执行
                if (this.owner.scene === null) {
                    return;
                }
                for (var l = 0; l < 20; l++) {
                    var bullet_attack01 = this.initBullet('enemyBullet/boss_nanguawangzi_b_03.png');
                    bullet_attack01.name = 'skill_01_Bullet_01';
                    // 位置需要修正；
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3;
                    bullet_attack01.pos(bulletX, bulletY);
                    //添加运动脚本，并且给予一些属性
                    var firstAngle = void 0;
                    if (r % 2 !== 0) {
                        firstAngle = l * 18;
                    }
                    else {
                        firstAngle = l * 18 + 9;
                    }
                    this.bulletProperties(bullet_attack01, 'sync', r, l, null, firstAngle);
                }
            });
            this_2.skill_Delayed += 20;
        };
        var this_2 = this;
        for (var r = 0; r < 10; r++) {
            _loop_3(r);
        }
        this.skill_Delayed = 0; //延时时间在结束之后重置为0
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            // 首次攻击很快
            if (this.firstAttack && nowTime - this.attack_01Time > this.firstAttack_Interval) {
                this.attack('null');
                this.firstAttack = false;
                this.attack_01Time = nowTime; //重置时间
            }
            if (nowTime - this.attack_01Time > this.attack_01Interval) {
                this.attack_01Time = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.attack_01Interval = 5000;
                            this.skill(); //大招1
                        }
                        else {
                            if (this.attack_01Interval !== 3000) {
                                this.attack_01Interval = 3000;
                            }
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70,"./nanGuaWangZi_bullet":14}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.accelerated_01_01 = 0.06; //加速度
        // attack_02_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.accelerated_02_01 = 0.06; //加速度
        // boss大招子弹类型1
        _this.skill_accelerated_01_01 = 0.06; //加速度
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.self["nanGuaWangZi_bullet"] = this;
        this.initProperty(); //初始化,每次进入重新初始化
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1
        this.accelerated_01_01 = 0.06; //加速度
        //普通攻击2
        this.accelerated_02_01 = 0.06; //加速度
        // 技能1_01
        this.skill_accelerated_01_01 = 0.06;
    };
    //合集方法
    bullet.prototype.nanGuaWangZi_Move = function () {
        if (PlayingSceneControl_1.default.instance.isGamePause) {
            return;
        }
        // 运动轨迹
        switch (this.self.name) {
            case 'attack_01_Bullet_01':
                this.attack_01_01();
                break;
            case 'attack_02_Bullet_01':
                this.attack_02_01();
                break;
            case 'skill_01_Bullet_01':
                this.skill_01_01();
                break;
        }
    };
    bullet.prototype.attack_01_01 = function () {
        var angle = 22.5 + this.line * 9;
        if (this.dirRotation === 'left') {
            this.self.rotation += 5;
        }
        else {
            this.self.rotation -= 5;
        }
        if (this.line % 3 === 0) {
            this.self.x += Tool_1.default.speedXYByAngle(angle, 4 + this.accelerated_01_01).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, 4 + this.accelerated_01_01).y;
        }
        else if (this.line % 2 === 0) {
            this.self.x += Tool_1.default.speedXYByAngle(angle, 6 + this.accelerated_01_01).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, 6 + this.accelerated_01_01).y;
        }
        else {
            this.self.x += Tool_1.default.speedXYByAngle(angle, 8 + this.accelerated_01_01).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, 8 + this.accelerated_01_01).y;
        }
        this.accelerated_01_01 += 0.01;
    };
    bullet.prototype.attack_02_01 = function () {
        var baseSpeed = 6;
        if (this.row === 0 || this.row === 2 || this.row === 4) {
            var angle = 60;
            this.self.x += Tool_1.default.speedXYByAngle(angle, baseSpeed + this.accelerated_02_01).x / 3;
            this.self.y += Tool_1.default.speedXYByAngle(angle, baseSpeed + this.accelerated_02_01).y;
        }
        else {
            var angle = 120;
            this.self.x += Tool_1.default.speedXYByAngle(angle, baseSpeed + this.accelerated_02_01).x / 3;
            this.self.y += Tool_1.default.speedXYByAngle(angle, baseSpeed + this.accelerated_02_01).y;
        }
        this.accelerated_02_01 += 0.01;
    };
    bullet.prototype.skill_01_01 = function () {
        var baseSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(this.firstAngle, baseSpeed + this.skill_accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.firstAngle, baseSpeed + this.skill_accelerated_01_01).y;
        this.skill_accelerated_01_01 += 0.05;
    };
    bullet.prototype.onDisable = function () {
        Laya.Pool.recover("bulltePrefab", this.owner);
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var shitoujuren_bullet_1 = require("../Boss/shitoujuren_bullet"); //石头巨人子弹
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关
        _this.attack_Interval = 6000; //时间间隔
        _this.firstAttack = true;
        _this.firstAttack_Interval = 500; //第一次的时间间隔
        _this.attackCounter = 0; //攻击次数计数器；
        //普攻2子弹生成类型1
        _this.attack_Delayed = 130; //延时帧数
        //skill子弹类型1
        _this.skill_01_Delayed_01 = 0; //延时时间
        _this.tag = 0; //标签，放在名称的前面
        //skill子弹类型2
        _this.skill_01_Delayed_02 = 0; //延时时间
        _this.launches = 0; //发射次数计数器
        return _this;
        // boss_shitoujuren石头巨人
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        // 需要每次初始化属性
        this.initProperty();
        this.creatBossAni();
    };
    //初始化属性
    Boss_jinsenangua.prototype.initProperty = function () {
        this.self = this.owner;
        this.moveOnOff = false; //移动开关
        this.attack_Interval = 6000; //时间间隔
        this.firstAttack = true;
        this.firstAttack_Interval = 500; //第一次的时间间隔
        this.attackCounter = 0; //攻击次数计数器；
        this.attack_NowTime = Date.now();
        this.self.name = 'shitoujuren';
        this.self.markName = 'shitoujuren';
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_shitoujuren");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
    };
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(205, 165);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    //boss的移动行为
    Boss_jinsenangua.prototype.move = function () {
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 50) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4) {
                this.moveDirection = "left";
            }
        }
    };
    //普通攻击
    //两种普通攻击根据攻击次数交替进行
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // 延时用于匹配动作
        Laya.timer.frameOnce(30, this, function () {
            if (this.owner.scene === null) {
                return;
            }
            // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
            if (random === "random") {
                var number = Math.floor(Math.random() * 2);
                if (number === 1) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
            else {
                if (this.attackCounter % 2 !== 0) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
        });
    };
    /**实例化子弹
     * @param skin 子弹图片地址
     * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    //普攻1子弹类型1
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        for (var g = 0; g < 6; g++) {
            for (var r = 0; r < 6; r++) {
                for (var l = 0; l < 6; l++) {
                    var attack_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    attack_01_Bullet_01.name = 'attack_01_Bullet_01';
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 150;
                    attack_01_Bullet_01.pos(bulletX, bulletY);
                    //先是否有了这个脚本
                    var shitoujuren_Bullet = attack_01_Bullet_01.getComponent(shitoujuren_bullet_1.default);
                    if (!shitoujuren_Bullet) {
                        attack_01_Bullet_01.addComponent(shitoujuren_bullet_1.default);
                    }
                    shitoujuren_Bullet = attack_01_Bullet_01.getComponent(shitoujuren_bullet_1.default);
                    shitoujuren_Bullet.group = g; //组
                    shitoujuren_Bullet.row = r; //行
                    shitoujuren_Bullet.line = l; //列
                    shitoujuren_Bullet.moveOnOff = true; //运动开关
                    shitoujuren_Bullet.bossName = this.owner.name; //boss名称
                    // 分配组
                    // 最后改变层级关系
                    if (r === 5 && l === 10) {
                        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 0;
                        this.self.parent.zOrder = 1;
                    }
                }
            }
        }
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        // 位置需要修正
        var bulletX = this.self.x + this.self.width * 1 / 3;
        var bulletY = this.self.y + this.self.height * 1 / 3 + 150;
        for (var g = 0; g < 11; g++) {
            //随机一个向上高度
            var distance_up = bulletY - (Math.floor(Math.random() * 50) + 50);
            // 随机一个向下高度
            var distance_drop = Math.floor(Math.random() * 300) + 300 + bulletY;
            var velocity_up = Math.random() * 5 + 10; //随机一个向上速度值
            var velocity_drop = Math.random() * 5 + 5; //随机一个向下速度值
            var basedTime = Math.random() * 1 + 0.5; //随机一个基础时间
            for (var r = 0; r < 4; r++) {
                for (var l = 0; l < 6; l++) {
                    var attack_02_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                    attack_02_Bullet_01.name = 'attack_02_Bullet_01';
                    attack_02_Bullet_01.pos(bulletX, bulletY);
                    //先是否有了这个脚本
                    var shitoujuren_Bullet = attack_02_Bullet_01.getComponent(shitoujuren_bullet_1.default);
                    if (!shitoujuren_Bullet) {
                        attack_02_Bullet_01.addComponent(shitoujuren_bullet_1.default);
                    }
                    shitoujuren_Bullet = attack_02_Bullet_01.getComponent(shitoujuren_bullet_1.default);
                    shitoujuren_Bullet.group = g; //组
                    shitoujuren_Bullet.row = r; //行
                    shitoujuren_Bullet.line = l; //列
                    shitoujuren_Bullet.moveOnOff = true; //运动开关
                    shitoujuren_Bullet.bossName = this.owner.name; //boss名称
                    //随机一个向上高度
                    shitoujuren_Bullet.distance_up = distance_up;
                    // 随机一个向下高度
                    shitoujuren_Bullet.distance_drop = distance_drop;
                    shitoujuren_Bullet.velocity_up = velocity_up; //随机一个向上速度值
                    shitoujuren_Bullet.velocity_drop = velocity_drop; //随机一个向下速度值
                    shitoujuren_Bullet.basedTime = basedTime;
                }
            }
        }
        this.attack_Delayed = 0; //每一列循环结束之后延时重置；
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // 延时用于匹配动作
        this.skill_01_Bullet_01();
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        for (var r = 0; r < 4; r++) {
            if (this.owner.scene === null) {
                return;
            }
            var skill_01_Row = this.initBullet('enemyBullet/common_bullet.png');
            switch (r) {
                case 0:
                    skill_01_Row.name = 'skill_01_Row_B_00';
                    break;
                case 1:
                    skill_01_Row.name = 'skill_01_Row_B_01';
                    break;
                case 2:
                    skill_01_Row.name = 'skill_01_Row_B_02';
                    break;
                case 3:
                    skill_01_Row.name = 'skill_01_Row_B_03';
                    break;
                default:
                    break;
            }
            // 每列位置要和zOrder对应查找；
            // 位置需要修正
            var bulletX = this.self.x + this.self.width * 1 / 3;
            var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
            skill_01_Row.pos(bulletX, bulletY);
            //先是否有了这个脚本
            var shitoujuren_Bullet = skill_01_Row.getComponent(shitoujuren_bullet_1.default);
            if (!shitoujuren_Bullet) {
                skill_01_Row.addComponent(shitoujuren_bullet_1.default);
            }
            shitoujuren_Bullet = skill_01_Row.getComponent(shitoujuren_bullet_1.default);
            shitoujuren_Bullet.row = r; //列
            shitoujuren_Bullet.rowName = 'skill_01_Row_B';
            shitoujuren_Bullet.moveOnOff = true; //运动开关
            shitoujuren_Bullet.bossName = this.owner.name; //boss名称
            shitoujuren_Bullet.bossPosX = bulletX;
            shitoujuren_Bullet.bossPosY = bulletY;
        }
        Laya.timer.frameOnce(140, this, function () {
            this.skill_01_Bullet_02(); //类型一结束之后发射类型2
        });
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_02 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        this.launches = 0;
        var _loop_1 = function (g) {
            Laya.timer.frameOnce(this_1.skill_01_Delayed_02, this_1, function () {
                if (this.owner.scene === null) {
                    return;
                }
                for (var r = 0; r < 4; r++) {
                    for (var l = 0; l < 8; l++) {
                        var skill_01_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                        skill_01_Bullet_02.name = 'skill_01_Bullet_02';
                        //预防父节点不存在
                        var bullteParent = skill_01_Bullet_02.parent;
                        if (bullteParent === null) {
                            return;
                        }
                        // 根据特殊子弹定位组顺序
                        switch (r) {
                            case 0:
                                if (bullteParent.getChildByName('skill_01_Row_B_00') === null) {
                                    return;
                                }
                                var x0 = bullteParent.getChildByName('skill_01_Row_B_00').x;
                                var y0 = bullteParent.getChildByName('skill_01_Row_B_00').y;
                                skill_01_Bullet_02.pos(x0, y0);
                                break;
                            case 1:
                                if (bullteParent.getChildByName('skill_01_Row_B_01') === null) {
                                    return;
                                }
                                var x1 = bullteParent.getChildByName('skill_01_Row_B_01').x;
                                var y1 = bullteParent.getChildByName('skill_01_Row_B_01').y;
                                skill_01_Bullet_02.pos(x1, y1);
                                break;
                            case 2:
                                if (bullteParent.getChildByName('skill_01_Row_B_02') === null) {
                                    return;
                                }
                                var x2 = bullteParent.getChildByName('skill_01_Row_B_02').x;
                                var y2 = bullteParent.getChildByName('skill_01_Row_B_02').y;
                                skill_01_Bullet_02.pos(x2, y2);
                                break;
                            case 3:
                                if (bullteParent.getChildByName('skill_01_Row_B_03') === null) {
                                    return;
                                }
                                var x3 = bullteParent.getChildByName('skill_01_Row_B_03').x;
                                var y3 = bullteParent.getChildByName('skill_01_Row_B_03').y;
                                skill_01_Bullet_02.pos(x3, y3);
                                break;
                            default:
                                break;
                        }
                        //先是否有了这个脚本
                        var shitoujuren_Bullet = skill_01_Bullet_02.getComponent(shitoujuren_bullet_1.default);
                        if (!shitoujuren_Bullet) {
                            skill_01_Bullet_02.addComponent(shitoujuren_bullet_1.default);
                        }
                        shitoujuren_Bullet = skill_01_Bullet_02.getComponent(shitoujuren_bullet_1.default);
                        shitoujuren_Bullet.group = g; //组
                        shitoujuren_Bullet.row = r; //行
                        shitoujuren_Bullet.line = l; //列
                        shitoujuren_Bullet.moveOnOff = true; //运动开关
                        shitoujuren_Bullet.bossName = this.owner.name; //boss名称
                    }
                }
            });
            // 发射频率根据发射次数改变
            // 这个值不够精确，只是相对整个特殊子弹的运动时间
            this_1.launches += 1;
            if (this_1.launches < 10) {
                this_1.skill_01_Delayed_02 += 36;
            }
            else if (this_1.launches >= 10 && this_1.launches < 11) {
                //停顿
                this_1.skill_01_Delayed_02 += 100;
            }
            else if (this_1.launches >= 11 && this_1.launches < 40) {
                this_1.skill_01_Delayed_02 += 18;
            }
            else if (this_1.launches >= 40 && this_1.launches < 41) {
                //停顿
                this_1.skill_01_Delayed_02 += 100;
            }
            else if (this_1.launches >= 41 && this_1.launches < 48) {
                this_1.skill_01_Delayed_02 += 9;
            }
        };
        var this_1 = this;
        for (var g = 0; g < 48; g++) {
            _loop_1(g);
        }
        this.skill_01_Delayed_02 = 0;
        this.launches = 0;
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            if (this.firstAttack && nowTime - this.attack_NowTime > this.firstAttack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                this.firstAttack = false;
                this.attack('null');
            }
            else if (nowTime - this.attack_NowTime > this.attack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.attack_Interval = 26000;
                            this.skill(); //大招1
                            // 延长下次技能释放时间间隔
                        }
                        else {
                            // 做预防，防止时间错乱
                            if (this.attack_Interval !== 6000) {
                                this.attack_Interval = 6000;
                            }
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Boss/shitoujuren_bullet":16,"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关判断
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.accelerated_01_01 = 0.06; //加速度
        _this.attack_01_timer_01 = 0.1; //计时器
        // 第二阶段发射子弹
        _this.attack_01_02_angleChange = 1;
        // attack_02_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.accelerated_02_01 = 0.05; //加速度1
        _this.accelerated_02_02 = 0; //加速度2
        _this.accelerated_02_03 = 0.1; //加速度3
        _this.accelerated_02_04 = 0.1; //加速度4
        _this.deceleration_02_01 = 0; //减速度1
        _this.attack_02_timer_01 = 0.1; //计时器
        // boss大招子弹类型1
        _this.skill_accelerated_01_01 = 0.1; //加速度
        _this.skill_Row_timer_01 = 0; //第一阶段计时器,可随机
        _this.stepSwitch_01 = true; //第一阶段开关
        _this.angleChange_01 = 1; //角度变化值
        _this.angleRow_00 = 225; //角度记录0
        _this.angleRow_01 = 315; //角度记录1
        _this.angleRow_02 = 135; //角度记录2
        _this.angleRow_03 = 45; //角度记录3
        _this.radius_00 = 0; //旋转半径
        _this.radius_01 = 0; //旋转半径
        _this.radius_02 = 0; //旋转半径
        _this.radius_03 = 0; //旋转半径
        _this.skill_accelerated_01_02 = 0.1; //加速度
        _this.angleChange_02 = 1; //角度变化值
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.initProperty(); //初始化,每次进入重新初始化
        this.self['shitoujuren_bullet'] = this;
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1
        this.accelerated_01_01 = 0.06; //加速度
        this.attack_01_timer_01 = 0.1;
        this.attack_01_02_angleChange = 1;
        //普通攻击2
        this.accelerated_02_01 = 0.05; //加速度1
        this.accelerated_02_02 = 0; //加速度2
        this.accelerated_02_03 = 0.1; //加速度3
        this.accelerated_02_04 = 0.1; //加速度4
        this.deceleration_02_01 = 0; //减速度1
        this.attack_02_timer_01 = 0.1; //计时器
        this.velocity_up; //上升速度，随机值
        this.velocity_drop; //下落速度，随机值
        this.basedTime; //基础时间；
        // 技能1_01
        // boss大招子弹类型1
        this.skill_accelerated_01_01 = 0.1; //加速度
        this.skill_Row_timer_01 = 0; //第一阶段计时器,可随机
        this.stepSwitch_01 = true; //第一阶段开关
        this.velocityRandom; //速度随机数
        this.angleChange_01 = 1; //角度变化值
        this.angleRow_00 = 225; //角度记录0
        this.angleRow_01 = 315; //角度记录1
        this.angleRow_02 = 135; //角度记录2
        this.angleRow_03 = 45; //角度记录3
        this.radius_00 = 0; //旋转半径
        this.radius_01 = 0; //旋转半径
        this.radius_02 = 0; //旋转半径
        this.radius_03 = 0; //旋转半径
        // 技能1_02
        this.skill_accelerated_01_02 = 0.1; //加速度
    };
    //合集方法
    bullet.prototype.shiTouJuRen_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            // 运动轨迹
            if (this.rowName === 'skill_01_Row_B') {
                this.skill_01_01();
            }
            else {
                switch (this.self.name) {
                    case 'attack_01_Bullet_01':
                        this.attack_01_01();
                        break;
                    case 'attack_02_Bullet_01':
                        this.attack_02_01();
                        break;
                    //skill_01普通
                    case 'skill_01_Bullet_02':
                        this.skill_01_02();
                        break;
                }
            }
        }
    };
    bullet.prototype.attack_01_01 = function () {
        this.attack_01_timer_01 += 0.1;
        var basedSpeed = 18;
        var angle1 = 160;
        var angle2 = 20;
        // 通过时间线控制行为
        if (this.attack_01_timer_01 < 0.5) {
            if (this.group === 0 || this.group === 1 || this.group === 2) {
                this.attack_01_01_move1(angle1, basedSpeed);
            }
            else if (this.group === 3 || this.group === 4 || this.group === 5) {
                this.attack_01_01_move1(angle2, basedSpeed);
            }
        }
        else if (this.attack_01_timer_01 >= 0.5 && this.attack_01_timer_01 < 1) {
            if (this.group === 1 || this.group === 2) {
                this.attack_01_01_move1(angle1, basedSpeed);
            }
            else if (this.group === 4 || this.group === 5) {
                this.attack_01_01_move1(angle2, basedSpeed);
            }
        }
        else if (this.attack_01_timer_01 >= 1 && this.attack_01_timer_01 < 1.5) {
            if (this.group === 2) {
                this.attack_01_01_move1(angle1, basedSpeed);
            }
            else if (this.group === 5) {
                this.attack_01_01_move1(angle2, basedSpeed);
            }
        }
        // 分段发射
        if (this.attack_01_timer_01 >= 2) {
            if (this.row === 0) {
                this.attack_01_02();
            }
        }
        if (this.attack_01_timer_01 >= 3 + 0.3) {
            if (this.row === 1) {
                this.attack_01_02();
            }
        }
        if (this.attack_01_timer_01 >= 4 + 0.6) {
            if (this.row === 2) {
                this.attack_01_02();
            }
        }
        if (this.attack_01_timer_01 >= 5 + 0.9) {
            if (this.row === 3) {
                this.attack_01_02();
            }
        }
        if (this.attack_01_timer_01 >= 6 + 1.2) {
            if (this.row === 4) {
                this.attack_01_02();
            }
        }
        if (this.attack_01_timer_01 >= 7 + 1.5) {
            if (this.row === 5) {
                this.attack_01_02();
            }
        }
        this.accelerated_01_01 += 0.01;
    };
    // 第一阶段组移动
    bullet.prototype.attack_01_01_move1 = function (angle1, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle1, basedSpeed + this.accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle1, basedSpeed + this.accelerated_01_01).y;
    };
    bullet.prototype.attack_01_02 = function () {
        this.attack_01_02_angleChange += 0.1;
        var basedSpeed = 12;
        var basedangle = 22.5 + this.attack_01_02_angleChange;
        if (this.group === 0 || this.group === 1 || this.group === 2) {
            switch (this.line) {
                case 0:
                    this.attack_01_01_move1(basedangle, basedSpeed);
                    break;
                case 1:
                    this.attack_01_01_move1(basedangle * 2, basedSpeed);
                    break;
                case 2:
                    this.attack_01_01_move1(basedangle * 3, basedSpeed);
                    break;
                case 3:
                    this.attack_01_01_move1(basedangle + 180, basedSpeed);
                    break;
                case 4:
                    this.attack_01_01_move1(basedangle * 2 + 180, basedSpeed);
                    break;
                case 5:
                    this.attack_01_01_move1(basedangle * 3 + 180, basedSpeed);
                    break;
                default:
                    break;
            }
        }
        else if (this.group === 3 || this.group === 4 || this.group === 5) {
            switch (this.line) {
                case 0:
                    this.attack_01_01_move1(-basedangle, basedSpeed);
                    break;
                case 1:
                    this.attack_01_01_move1(-(basedangle * 2), basedSpeed);
                    break;
                case 2:
                    this.attack_01_01_move1(-(basedangle * 3), basedSpeed);
                    break;
                case 3:
                    this.attack_01_01_move1(-(basedangle + 180), basedSpeed);
                    break;
                case 4:
                    this.attack_01_01_move1(-(basedangle * 2 + 180), basedSpeed);
                    break;
                case 5:
                    this.attack_01_01_move1(-(basedangle * 3 + 180), basedSpeed);
                    break;
                default:
                    break;
            }
        }
    };
    bullet.prototype.attack_02_01 = function () {
        this.attack_02_timer_01 += 0.1;
        // 通过时间线控制行为
        if (this.attack_02_timer_01 < 0.8 + this.basedTime) { //向上加速
            this.accelerated_02_01 += 0.1;
            var angleGroup = 195;
            this.attack_02_01_move1(angleGroup + this.group * 15, this.velocity_up + this.accelerated_02_01);
        }
        else if (this.attack_02_timer_01 >= 0.8 + this.basedTime && this.attack_02_timer_01 < 1 + this.basedTime) { //向上减速
            this.deceleration_02_01 -= 0.3;
            var angleGroup = 200;
            this.attack_02_01_move1(angleGroup + this.group * 18, this.velocity_up - this.deceleration_02_01);
        }
        else if (this.attack_02_timer_01 >= 1 + this.basedTime && this.attack_02_timer_01 < 4 + this.basedTime) { //下落
            this.accelerated_02_02 += 0.4;
            this.self.y += (this.velocity_drop + this.accelerated_02_02);
        }
        else if (this.attack_02_timer_01 >= 4 + this.basedTime && this.attack_02_timer_01 < 7 + this.basedTime) { //行爆炸
            var angleRow = this.row * 90 + 45;
            this.accelerated_02_03 += 0.1;
            this.self.x += Tool_1.default.speedXYByAngle(angleRow, 10 + this.accelerated_02_03).x;
            this.self.y += Tool_1.default.speedXYByAngle(angleRow, 10 + this.accelerated_02_03).y;
        }
        else if (this.attack_02_timer_01 >= 7 + this.basedTime) { //列爆炸
            this.accelerated_02_04 += 0.05;
            var angleLine = this.line * 60 + 30;
            this.self.x += Tool_1.default.speedXYByAngle(angleLine, this.velocity_up - 3 + this.accelerated_02_04).x;
            this.self.y += Tool_1.default.speedXYByAngle(angleLine, this.velocity_up - 3 + this.accelerated_02_04).y;
        }
    };
    // 第一阶段组移动
    bullet.prototype.attack_02_01_move1 = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
    };
    // 特殊子弹的移动
    bullet.prototype.skill_01_01 = function () {
        // boss位置点初始化
        var bossParent = this.owner.scene.getChildByName('EnemySpite');
        this.boss = bossParent.getChildByName(this.bossName);
        if (this.boss === null) {
            return;
        }
        var bulletX = this.boss.x + this.boss.width * 1 / 3;
        var bulletY = this.boss.y + this.boss.height * 1 / 3 + 50;
        this.bossPoint = new Laya.Point(bulletX, bulletY);
        // 通过时间控制行为
        var basedSpeed = 10;
        var angle = 45;
        if (this.skill_Row_timer_01 >= 0 && this.skill_Row_timer_01 < 3) {
            if (this.row === 0) {
                this.radius_00 += 5;
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_00, this.radius_00, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_00, this.radius_00, this.bossPoint).y;
            }
        }
        else if (this.skill_Row_timer_01 >= 3 && this.skill_Row_timer_01 < 6) {
            if (this.row === 1) {
                this.radius_01 += 5;
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_01, this.radius_01, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_01, this.radius_01, this.bossPoint).y;
            }
        }
        else if (this.skill_Row_timer_01 >= 6 && this.skill_Row_timer_01 < 9) {
            if (this.row === 2) {
                this.radius_02 += 5;
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_02, this.radius_02, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_02, this.radius_02, this.bossPoint).y;
            }
        }
        else if (this.skill_Row_timer_01 >= 9 && this.skill_Row_timer_01 < 12) {
            if (this.row === 3) {
                this.radius_03 += 5;
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_03, this.radius_03, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_03, this.radius_03, this.bossPoint).y;
            }
            this.angleRow_03 = angle;
        }
        else if (this.skill_Row_timer_01 >= 12 && this.angleChange_01 < 360) { //正向旋转
            this.skill_01_01_Group_Move();
            this.angleRow_00 += 1;
            this.angleRow_01 += 1;
            this.angleRow_02 += 1;
            this.angleRow_03 += 1;
            this.angleChange_01 += 1;
        }
        else if (this.angleChange_01 >= 360 && this.angleChange_01 < 720) { //反向旋转
            this.skill_01_01_Group_Move();
            this.radius_00 += 0.08;
            this.radius_01 += 0.08;
            this.radius_02 += 0.08;
            this.radius_03 += 0.08;
            this.angleRow_00 -= 1;
            this.angleRow_01 -= 1;
            this.angleRow_02 -= 1;
            this.angleRow_03 -= 1;
            this.angleChange_01 += 0.5;
        }
        else if (this.angleChange_01 >= 720 && this.angleChange_01 < 900) { //半径扩大缓冲
            this.angleChange_01 += 1;
            this.radius_00 += 0.6;
            this.radius_01 += 0.6;
            this.radius_02 += 0.6;
            this.radius_03 += 0.6;
            this.skill_01_01_Group_Move();
        }
        else if (this.angleChange_01 >= 900 && this.angleChange_01 < 950) { //发射散开
            this.radius_00 += 20;
            this.radius_01 += 20;
            this.radius_02 += 20;
            this.radius_03 += 20;
            this.skill_01_01_Group_Move();
            this.angleChange_01 += 1;
        }
        else if (this.angleChange_01 >= 900) {
            this.angleChange_01 += 1;
            this.self.removeSelf();
        }
        this.skill_Row_timer_01 += 0.1;
    };
    //根据组进行运动规则
    bullet.prototype.skill_01_01_Group_Move = function () {
        switch (this.row) {
            case 0:
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_00, this.radius_00, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_00, this.radius_00, this.bossPoint).y;
                break;
            case 1:
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_01, this.radius_01, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_01, this.radius_01, this.bossPoint).y;
                break;
            case 2:
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_02, this.radius_02, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_02, this.radius_02, this.bossPoint).y;
                break;
            case 3:
                this.self.x = Tool_1.default.getRoundPos(this.angleRow_03, this.radius_03, this.bossPoint).x;
                this.self.y = Tool_1.default.getRoundPos(this.angleRow_03, this.radius_03, this.bossPoint).y;
                break;
            default:
                break;
        }
    };
    bullet.prototype.skill_01_02 = function () {
        var angleRow = this.line * 45;
        var basedSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(angleRow, basedSpeed + this.skill_accelerated_01_02).x;
        this.self.y += Tool_1.default.speedXYByAngle(angleRow, basedSpeed + this.skill_accelerated_01_02).y;
        this.skill_accelerated_01_02 += 0.1;
    };
    bullet.prototype.onDisable = function () {
        // Laya.Pool.recover("bulltePrefab", this.owner);
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var zhangyunvhuang_bullet_1 = require("../Boss/zhangyunvhuang_bullet"); //章鱼女皇子弹
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关
        _this.attack_Interval = 10000; //时间间隔
        _this.firstAttack = true;
        _this.attackCounter = 0; //攻击次数计数器；
        //普攻1子弹类型1
        _this.attack_01_Delayed_01 = 0; //延时帧数
        _this.attack_01_Launches_01 = 1;
        //普攻2子弹生成类型1
        _this.attack_02_Delayed_01 = 0; //延时帧数
        //普攻2子弹生成类型1
        _this.attack_02_Delayed_02 = 0; //延时帧数
        //skill子弹类型1
        _this.S_01_Delayed_01 = 0;
        //skill子弹类型2
        _this.S_01_Delayed_02 = 0; //延时时间
        //普攻2子弹生成类型1
        _this.S_01_Delayed_03 = 0; //延时帧数
        //普攻2子弹生成类型1
        _this.S_01_Delayed_04 = 0; //延时帧数
        //普攻2子弹生成类型1
        _this.S_01_Delayed_05 = 0; //延时帧数
        return _this;
        // boss_zhangyunvhuang//章鱼女皇
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        // 需要每次初始化属性
        this.initProperty();
        this.creatBossAni();
    };
    //初始化属性
    Boss_jinsenangua.prototype.initProperty = function () {
        this.self = this.owner;
        this.moveOnOff = false; //移动开关
        this.attack_Interval = 8500; //时间间隔
        this.firstAttack = true;
        this.firstAttack_Interval = 4000; //第一次的时间间隔
        this.attackCounter = 0; //攻击次数计数器；
        this.attack_NowTime = Date.now();
        this.boosCurrentX = null; //boss当前x
        this.boosCurrentY = null; //boss当前y
        this.self.name = 'zhangyunvhuang';
        this.self.markName = "zhangyunvhuang";
        //普攻1子弹类型1
        this.attack_01_Delayed_01 = 0; //延时帧数
        // 普通攻击2子弹类型1
        this.attack_02_Delayed_01 = 0; //延时帧数
        //大招1—01
        //大招1—02
        this.S_01_Delayed_02 = 0; //延时帧数
        //大招1—03
        this.S_01_Delayed_03 = 0; //延时帧数
        //大招1—03
        this.S_01_Delayed_04 = 0; //延时帧数
    };
    Boss_jinsenangua.prototype.creatBossAni = function () {
        //骨骼动画赋值
        var nick = this.owner["vars_"].propertyObj.nick;
        this.skeleton = this.owner.getChildByName("Boss_zhangyunvhuang");
        this.skeleton.play('stand', true);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
        return;
        // this.bossTemplet = new Laya.Templet();
        // this.bossTemplet.on(Laya.Event.COMPLETE, this, this.parseComplete);
        // this.bossTemplet.on(Laya.Event.ERROR, this, this.onError);
        // this.bossTemplet.loadAni("dragonbones/boss_zhangyunvhuang.sk");
    };
    /**
     *
     */
    Boss_jinsenangua.prototype.onError = function () {
        console.log("加载错误！");
    };
    Boss_jinsenangua.prototype.parseComplete = function () {
        // 播放boss动画
        var skeleton;
        this.skeleton = this.bossTemplet.buildArmature(0); //模板0
        this.skeleton.play('stand', true);
        this.skeleton.playbackRate(1);
        //boss节点
        this.self.addChild(this.skeleton);
        this.skeleton.pos(205, 165);
        // 打开移动开关
        this.moveOnOff = true;
        // 随机方向
        var number = Math.random() * 2;
        if (number === 1) {
            this.moveDirection = 'left';
        }
        else {
            this.moveDirection = 'right';
        }
    };
    /**
     * boss的移动行为
     */
    Boss_jinsenangua.prototype.move = function () {
        if (this.moveDirection === "left") {
            this.self.x -= 5;
            if (this.self.x + this.self.width / 2 < Laya.stage.width * 1 / 4 + 50) {
                this.moveDirection = "right";
            }
        }
        else if (this.moveDirection === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4) {
                this.moveDirection = "left";
            }
        }
    };
    //普通攻击
    //两种普通攻击根据攻击次数交替进行
    Boss_jinsenangua.prototype.attack = function (random) {
        this.skeleton.play('attack', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        // // 延时用于匹配动作
        Laya.timer.frameOnce(30, this, function () {
            if (this.owner.scene === null) {
                return;
            }
            // 如果参数是随机random,那么随机发动普通攻击一次,否则按照攻击次数决定
            if (random === "random") {
                var number = Math.floor(Math.random() * 2);
                if (number === 1) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
            else {
                if (this.attackCounter % 2 !== 0) {
                    this.attack_01_Bullet_01(); //普通攻击1
                }
                else {
                    this.attack_02_Bullet_01(); //普通攻击2
                }
            }
        });
    };
    /**实例化子弹
       * @param skin 子弹图片地址
       * */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        if (this.owner.scene == null) {
            var bullet_null = new Laya.Sprite();
            return bullet_null;
        }
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, 30108); //30470
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.fromNick = this.self.name;
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    Boss_jinsenangua.prototype.attack_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_1 = function (g) {
            if (g === 4) {
                this_1.attack_01_Delayed_01 += 80;
            }
            else {
                this_1.attack_01_Delayed_01 += 30;
            }
            Laya.timer.frameOnce(this_1.attack_01_Delayed_01, this_1, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 12; r++) {
                    for (var l = 0; l < 6; l++) {
                        var attack_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                        // 释放次数，让名称每轮都唯一
                        attack_01_Bullet_01.name = "attack_01_Bullet_01";
                        // // 修正位置
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        attack_01_Bullet_01.pos(bulletX, bulletY);
                        //先判断是否已经有了这个脚本
                        var zhangyunvhuang_Bullet = attack_01_Bullet_01.getComponent(zhangyunvhuang_bullet_1.default);
                        if (!zhangyunvhuang_Bullet) {
                            attack_01_Bullet_01.addComponent(zhangyunvhuang_bullet_1.default);
                        }
                        zhangyunvhuang_Bullet = attack_01_Bullet_01.getComponent(zhangyunvhuang_bullet_1.default);
                        zhangyunvhuang_Bullet.group = g;
                        zhangyunvhuang_Bullet.row = r;
                        zhangyunvhuang_Bullet.line = l;
                        zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                        zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称
                        zhangyunvhuang_Bullet.A_01_01_firstAngle = r * 36;
                    }
                }
            });
        };
        var this_1 = this;
        //角度合集
        for (var g = 0; g < 8; g++) {
            _loop_1(g);
        }
        this.attack_01_Delayed_01 = 0;
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_01 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_2 = function (l) {
            Laya.timer.frameOnce(this_2.attack_02_Delayed_01, this_2, function () {
                if (this.owner.scene == null) {
                    return;
                }
                var attack_02_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                attack_02_Bullet_01.name = 'attack_02_Bullet_01';
                // 位置需要修正
                var bulletX = this.self.x + this.self.width * 1 / 3;
                var bulletY = this.self.y + this.self.height * 1 / 3 + 150;
                //先判断是否已经有了这个脚本
                var zhangyunvhuang_Bullet = attack_02_Bullet_01.getComponent(zhangyunvhuang_bullet_1.default);
                if (!zhangyunvhuang_Bullet) {
                    attack_02_Bullet_01.addComponent(zhangyunvhuang_bullet_1.default);
                }
                zhangyunvhuang_Bullet = attack_02_Bullet_01.getComponent(zhangyunvhuang_bullet_1.default);
                zhangyunvhuang_Bullet.line = l; //行
                //位置
                if (l % 2 === 0) {
                    zhangyunvhuang_Bullet.A_02_01_firstAngle = l * 12; //初始角度
                    attack_02_Bullet_01.pos(Laya.stage.width * 1 / 4 - 25, bulletY);
                }
                else {
                    attack_02_Bullet_01.pos(Laya.stage.width * 3 / 4 - 25, bulletY);
                    zhangyunvhuang_Bullet.A_02_01_firstAngle = -l * 12; //初始角度
                }
                zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称
                zhangyunvhuang_Bullet.bossPosX = bulletX;
                zhangyunvhuang_Bullet.bossPosX = bulletY;
                // 技能释放完毕之后把位置清掉
                if (zhangyunvhuang_Bullet.line === 249) {
                    this.attack_02_Bullet_02();
                }
            });
            this_2.attack_02_Delayed_01 += 1;
        };
        var this_2 = this;
        for (var l = 0; l < 250; l++) {
            _loop_2(l);
        }
        this.attack_02_Delayed_01 = 0; //环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.attack_02_Bullet_02 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_3 = function (l) {
            Laya.timer.frameOnce(this_3.attack_02_Delayed_02, this_3, function () {
                if (this.owner.scene == null) {
                    return;
                }
                var attack_02_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                attack_02_Bullet_02.name = 'attack_02_Bullet_02';
                // 位置需要修正
                var bulletX = this.self.x + this.self.width * 1 / 3;
                var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                attack_02_Bullet_02.pos(bulletX, bulletY);
                //先判断是否已经有了这个脚本
                var zhangyunvhuang_Bullet = attack_02_Bullet_02.getComponent(zhangyunvhuang_bullet_1.default);
                if (!zhangyunvhuang_Bullet) {
                    attack_02_Bullet_02.addComponent(zhangyunvhuang_bullet_1.default);
                }
                zhangyunvhuang_Bullet = attack_02_Bullet_02.getComponent(zhangyunvhuang_bullet_1.default);
                zhangyunvhuang_Bullet.line = l; //行
                zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称
                zhangyunvhuang_Bullet.bossPosX = bulletX;
                zhangyunvhuang_Bullet.bossPosX = bulletY;
                zhangyunvhuang_Bullet.A_02_02_firstAngle = l * 12; //初始角度
                // 技能释放完毕之后把位置清掉
            });
            this_3.attack_02_Delayed_02 += 1;
        };
        var this_3 = this;
        for (var l = 0; l < 100; l++) {
            _loop_3(l);
        }
        this.attack_02_Delayed_02 = 0; //环结束之后延时重置；
    };
    // 大招
    Boss_jinsenangua.prototype.skill = function () {
        this.skeleton.play('skill', false);
        this.moveOnOff = false; //攻击时候停止移动
        this.attackCounter++;
        this.skeleton.on(Laya.Event.STOPPED, this, function () {
            this.skeleton.play('stand', true);
            this.moveOnOff = true;
        });
        this.skill_01_Bullet_01();
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_4 = function (g) {
            this_4.S_01_Delayed_01 += 45;
            Laya.timer.frameOnce(this_4.S_01_Delayed_01, this_4, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 6; r++) {
                    for (var l = 0; l < 4; l++) {
                        var skill_01_Bullet_01 = this.initBullet('enemyBullet/common_bullet.png');
                        // 位置需要修正,这次是在boss的四周
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 150;
                        skill_01_Bullet_01.pos(bulletX, bulletY);
                        // 注意每次位置参考的层次属性都不尽相同
                        skill_01_Bullet_01.name = 'skill_01_Bullet_01';
                        //先判断是否已经有了这个脚本
                        var zhangyunvhuang_Bullet = skill_01_Bullet_01.getComponent(zhangyunvhuang_bullet_1.default);
                        if (!zhangyunvhuang_Bullet) {
                            skill_01_Bullet_01.addComponent(zhangyunvhuang_bullet_1.default);
                        }
                        zhangyunvhuang_Bullet = skill_01_Bullet_01.getComponent(zhangyunvhuang_bullet_1.default);
                        zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                        zhangyunvhuang_Bullet.group = g;
                        zhangyunvhuang_Bullet.row = r;
                        zhangyunvhuang_Bullet.line = l;
                        zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称
                        zhangyunvhuang_Bullet.bossPosX = bulletX;
                        zhangyunvhuang_Bullet.bossPosY = bulletY;
                        zhangyunvhuang_Bullet.S_01_01_firstAngle = r * 60;
                        if (zhangyunvhuang_Bullet.group === 3 && zhangyunvhuang_Bullet.row === 5 && zhangyunvhuang_Bullet.line === 3) {
                            this.skill_01_Bullet_04();
                        }
                        else if (zhangyunvhuang_Bullet.group === 12 && zhangyunvhuang_Bullet.row === 5 && zhangyunvhuang_Bullet.line === 3) {
                            this.skill_01_Bullet_03();
                        }
                        else if (zhangyunvhuang_Bullet.group === 23 && zhangyunvhuang_Bullet.row === 5 && zhangyunvhuang_Bullet.line === 3) {
                            this.skill_01_Bullet_02();
                        }
                    }
                }
            });
        };
        var this_4 = this;
        for (var g = 0; g < 28; g++) {
            _loop_4(g);
        }
        this.S_01_Delayed_01 = 0;
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_02 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_5 = function (g) {
            this_5.S_01_Delayed_02 += 5;
            Laya.timer.frameOnce(this_5.S_01_Delayed_02, this_5, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 8; r++) {
                    var number = void 0;
                    if (g > 40) {
                        number = 9;
                    }
                    else {
                        number = 1;
                    }
                    for (var l = 0; l < number; l++) {
                        var skill_01_Bullet_02 = this.initBullet('enemyBullet/common_bullet.png');
                        // 位置需要修正
                        // let bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletX = Laya.stage.width / 2 - 25;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 100;
                        skill_01_Bullet_02.pos(bulletX, bulletY);
                        skill_01_Bullet_02.name = 'skill_01_Bullet_02';
                        //先判断是否已经有了这个脚本
                        var zhangyunvhuang_Bullet = skill_01_Bullet_02.getComponent(zhangyunvhuang_bullet_1.default);
                        if (!zhangyunvhuang_Bullet) {
                            skill_01_Bullet_02.addComponent(zhangyunvhuang_bullet_1.default);
                        }
                        zhangyunvhuang_Bullet = skill_01_Bullet_02.getComponent(zhangyunvhuang_bullet_1.default);
                        zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                        zhangyunvhuang_Bullet.group = g;
                        zhangyunvhuang_Bullet.row = r;
                        zhangyunvhuang_Bullet.line = l;
                        zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称s
                        zhangyunvhuang_Bullet.bossPosX = bulletX;
                        zhangyunvhuang_Bullet.bossPosY = bulletY;
                        zhangyunvhuang_Bullet.S_01_02_firstAngle = r * 45 + g * 2;
                    }
                }
            });
        };
        var this_5 = this;
        for (var g = 0; g < 60; g++) {
            _loop_5(g);
        }
        this.S_01_Delayed_02 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_03 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_6 = function (r) {
            this_6.S_01_Delayed_03 += (40 - r * 1);
            Laya.timer.frameOnce(this_6.S_01_Delayed_03, this_6, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 30; l++) {
                    var skill_01_Bullet_03 = this.initBullet('enemyBullet/common_bullet.png');
                    skill_01_Bullet_03.name = 'skill_01_Bullet_03';
                    // 位置需要修正
                    var bulletX = Laya.stage.width / 2 - 25;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 100;
                    skill_01_Bullet_03.pos(bulletX, bulletY);
                    //先判断是否已经有了这个脚本
                    var zhangyunvhuang_Bullet = skill_01_Bullet_03.getComponent(zhangyunvhuang_bullet_1.default);
                    if (!zhangyunvhuang_Bullet) {
                        skill_01_Bullet_03.addComponent(zhangyunvhuang_bullet_1.default);
                    }
                    zhangyunvhuang_Bullet = skill_01_Bullet_03.getComponent(zhangyunvhuang_bullet_1.default);
                    zhangyunvhuang_Bullet.row = r; //行
                    zhangyunvhuang_Bullet.line = l; //列
                    zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                    zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称
                    zhangyunvhuang_Bullet.S_01_03_firstAngle = l * 12;
                }
            });
        };
        var this_6 = this;
        for (var r = 0; r < 20; r++) {
            _loop_6(r);
        }
        this.S_01_Delayed_03 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_04 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //节点g
        var key = 50;
        this.S_01_Delayed_04 = 0; //每一列循环结束之后延时重置；
        var _loop_7 = function (g) {
            if (g === key) {
                this_7.S_01_Delayed_04 += 15;
            }
            else {
                this_7.S_01_Delayed_04 += 6;
            }
            Laya.timer.frameOnce(this_7.S_01_Delayed_04, this_7, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 2; r++) {
                    this.S_01_Delayed_04 += 5;
                    for (var l = 0; l < 3; l++) {
                        var skill_01_Bullet_04 = this.initBullet('enemyBullet/common_bullet.png');
                        skill_01_Bullet_04.name = 'skill_01_Bullet_04';
                        // 位置需要修正
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        //位置
                        if (r === 0) {
                            skill_01_Bullet_04.pos(Laya.stage.width * 1 / 4 - 25, bulletY);
                        }
                        else {
                            skill_01_Bullet_04.pos(Laya.stage.width * 3 / 4 - 25, bulletY);
                        }
                        //先判断是否已经有了这个脚本
                        var zhangyunvhuang_Bullet = skill_01_Bullet_04.getComponent(zhangyunvhuang_bullet_1.default);
                        if (!zhangyunvhuang_Bullet) {
                            skill_01_Bullet_04.addComponent(zhangyunvhuang_bullet_1.default);
                        }
                        zhangyunvhuang_Bullet = skill_01_Bullet_04.getComponent(zhangyunvhuang_bullet_1.default);
                        zhangyunvhuang_Bullet.group = g; //行
                        zhangyunvhuang_Bullet.row = r; //行
                        zhangyunvhuang_Bullet.line = l; //列
                        zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                        zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称
                        // 角度变量
                        var number = 3;
                        var baseAngle = 25;
                        if (g >= 0 && g < key) {
                            if (r === 0) {
                                zhangyunvhuang_Bullet.S_01_firstAngle_04 = (l * 30 + baseAngle) + g * number;
                            }
                            else {
                                zhangyunvhuang_Bullet.S_01_firstAngle_04 = ((180 - baseAngle) - l * 30) - g * number;
                            }
                        }
                        else {
                            if (r === 0) {
                                zhangyunvhuang_Bullet.S_01_firstAngle_04 = (l * 30 + baseAngle) + key * number - (g - key) * number * 2;
                            }
                            else {
                                zhangyunvhuang_Bullet.S_01_firstAngle_04 = ((180 - baseAngle) - l * 30) - key * number + (g - key) * number * 2;
                            }
                        }
                    }
                }
            });
        };
        var this_7 = this;
        for (var g = 0; g < 100; g++) {
            _loop_7(g);
        }
    };
    Boss_jinsenangua.prototype.skill_01_Bullet_05 = function () {
        // 改变子弹父节点的层级
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        var _loop_8 = function (g) {
            this_8.S_01_Delayed_05 += 5;
            Laya.timer.frameOnce(this_8.S_01_Delayed_05, this_8, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var r = 0; r < 2; r++) {
                    this.S_01_Delayed_04 += 5;
                    for (var l = 0; l < 3; l++) {
                        var skill_01_Bullet_05 = this.initBullet('enemyBullet/common_bullet.png');
                        skill_01_Bullet_05.name = 'skill_01_Bullet_05';
                        // 位置需要修正
                        var bulletX = this.self.x + this.self.width * 1 / 3;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        //位置
                        if (r === 0) {
                            skill_01_Bullet_05.pos(Laya.stage.width * 1 / 4 - 25, bulletY);
                        }
                        else {
                            skill_01_Bullet_05.pos(Laya.stage.width * 3 / 4 - 25, bulletY);
                        }
                        //先判断是否已经有了这个脚本
                        var zhangyunvhuang_Bullet = skill_01_Bullet_05.getComponent(zhangyunvhuang_bullet_1.default);
                        if (!zhangyunvhuang_Bullet) {
                            skill_01_Bullet_05.addComponent(zhangyunvhuang_bullet_1.default);
                        }
                        zhangyunvhuang_Bullet = skill_01_Bullet_05.getComponent(zhangyunvhuang_bullet_1.default);
                        zhangyunvhuang_Bullet.group = g; //行
                        zhangyunvhuang_Bullet.row = r; //行
                        zhangyunvhuang_Bullet.line = l; //列
                        zhangyunvhuang_Bullet.moveOnOff = true; //运动开关
                        zhangyunvhuang_Bullet.bossName = this.owner.name; //boss名称
                        if (r === 0) {
                            zhangyunvhuang_Bullet.S_01_firstAngle_04 = (l * 30 + 60) + g * 1.5;
                        }
                        else {
                            zhangyunvhuang_Bullet.S_01_firstAngle_04 = (l * 30 + 60) - g * 1.5;
                        }
                    }
                }
            });
        };
        var this_8 = this;
        for (var g = 0; g < 60; g++) {
            _loop_8(g);
        }
        this.S_01_Delayed_05 = 0; //每一列循环结束之后延时重置；
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            if (this.firstAttack && nowTime - this.attack_NowTime > this.firstAttack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                this.firstAttack = false;
                this.attack('null');
            }
            else if (nowTime - this.attack_NowTime > this.attack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                //场景切换后立即结束子弹的创建和发射
                if (this.owner.scene !== null) {
                    // 子弹发射规则
                    // 血量高于50%以上，两种普通子弹随机发射
                    // 血量低于50%，大招和两种普通子弹随机一个切换；
                    // 通过攻击次数控制子弹发射类型
                    var bate = this.self.vars_.propertyObj.hp / this.self.vars_.propertyObj.startHp;
                    if (bate > 0.5) {
                        this.attack('null');
                    }
                    else {
                        if (this.attackCounter % 2 !== 0) {
                            this.attack_Interval = 26000;
                            this.skill(); //大招1
                            // 延长下次技能释放时间间隔
                        }
                        else {
                            // 做预防，防止时间错乱
                            if (this.attack_Interval !== 8500) {
                                this.attack_Interval = 8500;
                            }
                            this.attack('random');
                        }
                    }
                }
                else {
                    this.moveOnOff = false;
                }
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Boss/zhangyunvhuang_bullet":18,"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        _this.moveOnOff = false; //移动开关判断
        // attack_01_Bullet_01普通攻击1的第一个子弹类型运动规则
        _this.A_accelerated_01_01 = 0.06; //加速度
        _this.A_01_01_timer = 0; //时间线
        // 普通攻击2-1
        _this.accelerated_02_01 = 0.05; //加速度1
        // 普通攻击2-2
        _this.accelerated_02_02 = 0.05; //加速度1
        // boss大招子弹类型1
        _this.S_01_01_accelerated = 0.05; //加速度
        _this.S_01_01_firstAngle = 0.05; //初始角度
        _this.S_01_01_timer = 0; //时间线 
        // boss大招子弹类型2
        _this.S_01_02_accelerated = 0.1; //加速度
        _this.S_01_02_timer = 0; //时间线
        // boss大招子弹类型3
        _this.S_01_03_accelerated = 0.1; //加速度
        _this.S_01_03_timer = 0; //时间线
        // boss大招子弹类型2
        _this.S_accelerated_01_04 = 0.1; //加速度
        _this.S_01_firstAngle_04 = 0.1; //初始角度3
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['zhangyunvhuang_bullet'] = this;
        this.initProperty(); //初始化,每次进入重新初始化
    };
    // 初始化各种属性
    bullet.prototype.initProperty = function () {
        //普通攻击1-1
        this.A_accelerated_01_01 = 0.05; //加速度
        this.A_01_01_timer = 0; //时间线
        //普通攻击2-1
        this.accelerated_02_01 = 0.05; //加速度1
        //普通攻击2-2
        this.accelerated_02_02 = 0.05; //加速度1
        // 技能1_01
        // boss大招子弹类型1
        this.S_01_01_accelerated = 0.05; //加速度
        this.S_01_01_timer = 0; //时间线 
        // 技能1_02
        this.S_01_02_timer = 0; //时间线
        this.S_01_02_accelerated = 0.05; //加速度
        // 技能1_03
        this.S_01_03_timer = 0; //时间线
        this.S_01_03_accelerated = 0.05; //加速度
        // 技能1_04
        this.S_accelerated_01_04 = 0.05; //加速度
    };
    //合集方法
    bullet.prototype.zhangyunvhuang_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            // 运动轨迹
            switch (this.self.name) {
                //普通攻击1-01
                case 'attack_01_Bullet_01':
                    this.attack_01_01();
                    break;
                //普通攻击2-01
                case 'attack_02_Bullet_01':
                    this.attack_02_01();
                    break;
                //普通攻击2_02
                case 'attack_02_Bullet_02':
                    this.attack_02_02();
                    break;
                //大招1-01
                case 'skill_01_Bullet_01':
                    this.skill_01_01();
                    break;
                //大招1-02
                case 'skill_01_Bullet_02':
                    this.skill_01_02();
                    break;
                //大招1-03
                case 'skill_01_Bullet_03':
                    this.skill_01_03();
                    break;
                //大招1-04
                case 'skill_01_Bullet_04':
                    this.skill_01_04();
                    break;
                default:
                    break;
            }
        }
    };
    bullet.prototype.attack_01_01 = function () {
        var angle = this.A_01_01_firstAngle;
        var basedSpeed;
        this.A_01_01_timer += 0.1;
        if (this.group >= 0 && this.group < 4) {
            if (this.A_01_01_timer >= 0 && this.A_01_01_timer < 4) {
                basedSpeed = 1.5;
                this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed - this.group * 0.2).x;
                this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed - this.group * 0.2).y;
            }
            else if (this.A_01_01_timer >= 4 && this.A_01_01_timer < 6) {
                // 等待
            }
            else if (this.A_01_01_timer >= 6) {
                this.A_accelerated_01_01 += 0.05;
                basedSpeed = 3;
                this.attack_01_01_move(this.line * 60 + 45, basedSpeed - this.line * 0.2);
            }
        }
        else {
            if (this.A_01_01_timer >= 0 && this.A_01_01_timer < 5) {
                basedSpeed = 1.5;
                this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed - (this.group - 4) * 0.2).x;
                this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed - (this.group - 4) * 0.2).y;
            }
            else if (this.A_01_01_timer >= 5 && this.A_01_01_timer < 6) {
                // 等待
            }
            else if (this.A_01_01_timer >= 6) {
                this.A_accelerated_01_01 += 0.05;
                basedSpeed = 6;
                this.attack_01_01_move(this.A_01_01_firstAngle - this.line * 12, basedSpeed - this.line * 0.5);
            }
        }
    };
    bullet.prototype.attack_01_01_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.A_accelerated_01_01).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.A_accelerated_01_01).y;
    };
    bullet.prototype.attack_02_01 = function () {
        var basedSpeed = 4;
        this.self.x += Tool_1.default.speedXYByAngle(this.A_02_01_firstAngle, basedSpeed).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.A_02_01_firstAngle, basedSpeed).y;
    };
    bullet.prototype.attack_02_02 = function () {
        var basedSpeed = 8;
        this.self.x += Tool_1.default.speedXYByAngle(this.A_02_02_firstAngle, basedSpeed + this.accelerated_02_02).x;
        this.self.y += Tool_1.default.speedXYByAngle(this.A_02_02_firstAngle, basedSpeed + this.accelerated_02_02).y;
        this.accelerated_02_02 += 0.05;
    };
    bullet.prototype.skill_01_01 = function () {
        var basedSpeed;
        var angle;
        this.S_01_01_timer += 0.1;
        if (this.S_01_01_timer >= 0 && this.S_01_01_timer < 4) {
            angle = this.S_01_01_firstAngle - this.line * 5;
            basedSpeed = 5 - this.line * 0.4;
            this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
        }
        else if (this.S_01_01_timer >= 4) {
            basedSpeed = 6;
            angle = this.S_01_01_firstAngle - this.line * 5;
            this.S_01_01_accelerated += 0.05;
            this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.line * 2).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.line * 2).y;
        }
    };
    // S_01_01基本移动
    bullet.prototype.S_01_01_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
    };
    bullet.prototype.skill_01_02 = function () {
        var basedSpeed;
        var angle;
        this.S_01_01_timer += 0.1;
        if (this.line === 0) {
            basedSpeed = 6 + this.S_01_02_accelerated;
            angle = this.S_01_02_firstAngle;
            this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
            this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
        }
        else {
            if (this.S_01_02_timer > 0 && this.S_01_02_timer <= 5) {
                angle = this.S_01_02_firstAngle;
                basedSpeed = 6 + this.S_01_02_accelerated;
                this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
                this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
            }
            else {
                if (this.line > 0 && this.line <= 4) {
                    var angle1 = this.S_01_02_firstAngle + 60;
                    basedSpeed = 6 + this.S_01_02_accelerated + this.line * 1;
                    this.self.x += Tool_1.default.speedXYByAngle(angle1, basedSpeed).x;
                    this.self.y += Tool_1.default.speedXYByAngle(angle1, basedSpeed).y;
                }
                else {
                    var angle2 = this.S_01_02_firstAngle + 120;
                    basedSpeed = 6 + this.S_01_02_accelerated + (this.line - 4) * 1;
                    this.self.x += Tool_1.default.speedXYByAngle(angle2, basedSpeed).x;
                    this.self.y += Tool_1.default.speedXYByAngle(angle2, basedSpeed).y;
                }
            }
        }
        this.S_01_02_accelerated += 0.05;
    };
    bullet.prototype.S_01_02_move_01 = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_01_02_accelerated).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.S_01_02_accelerated).y;
    };
    bullet.prototype.skill_01_03 = function () {
        var basedSpeed;
        var angle = this.S_01_03_firstAngle;
        this.S_01_03_timer += 0.1;
        if (this.S_01_03_timer >= 0 && this.S_01_03_timer < 3) {
            basedSpeed = 8;
        }
        else if (this.S_01_03_timer >= 3 && this.S_01_03_timer < 4) {
            return;
        }
        else if (this.S_01_03_timer >= 4) {
            basedSpeed = 6;
        }
        this.S_01_03_move(angle, basedSpeed);
        this.S_01_03_accelerated += 0.05;
    };
    // S_01_03基本移动
    bullet.prototype.S_01_03_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
    };
    bullet.prototype.skill_01_04 = function () {
        var angle = this.S_01_firstAngle_04;
        var basedSpeed = 4 + this.S_accelerated_01_04;
        this.S_01_04_move(angle, basedSpeed);
        this.S_accelerated_01_04 += 0.05;
    };
    // S_01_02基本移动
    bullet.prototype.S_01_04_move = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed).y;
    };
    bullet.prototype.onDisable = function () {
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Bullet;
(function (Bullet) {
    var collisionShape;
    (function (collisionShape) {
        collisionShape[collisionShape["rect"] = 1] = "rect";
        collisionShape[collisionShape["round"] = 2] = "round";
    })(collisionShape = Bullet.collisionShape || (Bullet.collisionShape = {}));
    var BulletType;
    (function (BulletType) {
        BulletType[BulletType["bossBullet"] = 1] = "bossBullet";
        BulletType[BulletType["roleMainBullet"] = 2] = "roleMainBullet";
        BulletType[BulletType["roleSecondBullet"] = 3] = "roleSecondBullet";
    })(BulletType = Bullet.BulletType || (Bullet.BulletType = {}));
})(Bullet = exports.Bullet || (exports.Bullet = {}));
exports.default = Bullet;
},{}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletParent_1 = require("../Bullet/BulletParent");
var MainWeaponData_1 = require("../manage/MainWeaponData");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var BulletInterface_1 = require("./BulletInterface");
var Tool_1 = require("../Tools/Tool");
var BulletType = BulletInterface_1.default.BulletType;
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var BulletMain = /** @class */ (function (_super) {
    __extends(BulletMain, _super);
    function BulletMain(type, pos, pic, angle, buff, fireBuffType) {
        var _this = _super.call(this) || this;
        _this.bType = type;
        _this.startPos = pos;
        _this.angle = angle || 270;
        if (pic) {
            _this.pic = pic + ".png";
        }
        if (buff) {
            _this.buffObj = buff;
        }
        if (fireBuffType !== (void 0)) {
            _this.fireBuffType = fireBuffType;
        }
        _this.playingControlObj = PlayingSceneControl_1.default.instance;
        _this.initVar();
        _this.createPrefab();
        return _this;
    }
    ;
    BulletMain.prototype.createPrefab = function () {
        var prefabObj;
        switch (this.bType) {
            case BulletType.roleMainBullet:
                prefabObj = this.playingControlObj.bullet_red;
                this.prefabName = "Bullet_red";
                if (!this.angle) {
                    this.angle = 270;
                }
                this.w = 29;
                this.h = 100;
                break;
            case BulletType.roleSecondBullet:
                this.prefabName = SecondWeaponData_1.default.getInstance().bulletPrefab;
                if (this.secondType !== 3 && this.secondType !== 4 /* && this.secondType !== 5*/) {
                    this.bulletObj = SkeletonTempletManage_1.default.getInstance().createSkByTemplet(this.prefabName);
                    this.w = 50;
                    this.h = 50;
                    if (this.secondType === 5) {
                        this.startPos.x += 60;
                    }
                    this.bulletObj.pos(this.startPos.x, this.startPos.y);
                    this.bulletObj["property"] = this;
                    // this.bulletObj.visible = true;
                    if (this.secondType === 4) {
                        this.bulletObj.play("jgp", true);
                    }
                    else if (this.secondType === 5) {
                        this.bulletObj.play("pp", true);
                        this.bulletObj.scale(0.5, 0.5);
                    }
                    else if (this.secondType === 10) {
                        this.bulletObj.play("mgp", true);
                    }
                    else {
                        this.bulletObj.play(0, true);
                    }
                    this.setBulletOrder();
                    PlayingSceneControl_1.default.instance.bulletParent.addChild(this.bulletObj);
                    return;
                }
                if (!this.angle) {
                    this.angle = 270;
                }
                prefabObj = Laya.loader.getRes("prefab/" + this.prefabName + ".json");
                if (this.prefabName === "Bullet_skill3") {
                    this.w = 57;
                    this.h = 234;
                    this.offsetY = -220;
                }
                else if (this.prefabName == "Bullet_skill4") {
                    this.w = 57;
                    this.h = 1081;
                }
                // else if (this.prefabName === "Bullet_skill5") {
                //     this.w = 257;
                //     this.h = 220;
                // }
                break;
            case BulletType.bossBullet:
                break;
            default:
                break;
        }
        this.bulletObj = Laya.Pool.getItemByCreateFun(this.prefabName, prefabObj.create, prefabObj);
        if (this.pic) {
            var imgObj = this.bulletObj.getChildByName("img_pic");
            imgObj.skin = this.path + this.pic;
            this.w = imgObj.width;
            this.h = imgObj.height;
        }
        this.bulletObj.pos(this.startPos.x, this.startPos.y);
        this.bulletObj["property"] = this;
        this.bulletObj.visible = true;
        this.setBulletOrder();
        PlayingSceneControl_1.default.instance.bulletParent.addChild(this.bulletObj);
    };
    BulletMain.prototype.initVar = function () {
        var markSpeed;
        if (this.bType === BulletType.roleMainBullet) {
            markSpeed = MainWeaponData_1.default.getInstance().bulletSpeed;
            if (this.buffObj) {
                this.buffValue = this.buffObj.buffValue;
                this.BuffType = this.buffObj.type;
            }
            if (this.BuffType === 3) {
                //火力子弹的伤害
                var defaultHurt = Number(MainWeaponData_1.default.getInstance().getShowFire());
                var hurtArr = this.buffObj.buffValue.split("|")[0].split("#");
                this.hurtValue = defaultHurt * Number(hurtArr[this.fireBuffType]);
            }
            else {
                this.hurtValue = Number(MainWeaponData_1.default.getInstance().getShowFire());
            }
        }
        else if (this.bType === BulletType.roleSecondBullet) {
            var configProperty = SecondWeaponData_1.default.getInstance().buffType;
            markSpeed = SecondWeaponData_1.default.getInstance().getbulletSpeed();
            this.hurtValue = Number(SecondWeaponData_1.default.getInstance().getFire());
            this.secondType = Number(configProperty[0]);
            var affectArr = [1, 3, 5, 6, 10];
            if (affectArr.indexOf(this.secondType) > -1) {
                var powerLevel = SecondWeaponData_1.default.getInstance().getItemPowerLevel();
                var configArrLength = configProperty.length;
                this.affectBate = Number(configProperty[configArrLength - 2]) + powerLevel * Number(configProperty[configArrLength - 1]);
            }
            this.initKeepTime(this.secondType, configProperty);
            if (this.secondType === 8) {
                //黑洞开始无法触发检测
                this.canHitCollision = false;
            }
        }
        else {
            //boss
        }
        if (this.BuffType === 3 && this.fireBuffType === 2) {
            this.bulletSpeed = Tool_1.default.speedLabelByAngle(270, markSpeed);
        }
        else if (this.angle) {
            this.bulletSpeed = Tool_1.default.speedLabelByAngle(this.angle, markSpeed);
        }
    };
    BulletMain.prototype.setBuff = function (markxy) {
        if (markxy) {
            this.markX = markxy.x;
            this.markY = markxy.y;
        }
    };
    /**
     *
     * @param type
     * @param configArr
     * 持续性副武器的持续时间
     */
    BulletMain.prototype.initKeepTime = function (type, configArr) {
        var powerLevel = SecondWeaponData_1.default.getInstance().getItemPowerLevel();
        switch (type) {
            case 3:
                this.keepTimeValue = Number(configArr[2]) + powerLevel * Number(configArr[3]);
                break;
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
                this.keepTimeValue = Number(configArr[1]) + powerLevel * Number(configArr[2]);
            default:
                break;
        }
    };
    /**
     * 设置不同类型的子弹的图层
     */
    BulletMain.prototype.setBulletOrder = function () {
        switch (this.bType) {
            case BulletType.roleMainBullet:
                if (this.fireBuffType !== (void 0)) {
                    if (this.fireBuffType === 0) {
                        this.bulletObj.zOrder = 2;
                    }
                    else if (this.fireBuffType === 1) {
                        this.bulletObj.zOrder = 4;
                    }
                    else if (this.fireBuffType === 0) {
                        this.bulletObj.zOrder === 0;
                    }
                }
                else {
                    this.bulletObj.zOrder = 3;
                }
                break;
            case BulletType.roleSecondBullet:
                this.bulletObj.zOrder = 1;
                break;
            default:
                this.bulletObj.zOrder = 0;
                break;
        }
    };
    return BulletMain;
}(BulletParent_1.default));
exports.default = BulletMain;
},{"../Bullet/BulletParent":21,"../Tools/Tool":37,"../manage/MainWeaponData":52,"../manage/SecondWeaponData":56,"../manage/SkeletonTempletManage":57,"../playing/PlayingSceneControl":65,"./BulletInterface":19}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletParent = /** @class */ (function () {
    function BulletParent() {
        this.path = "face/";
        //部分副武器的子弹开始需要不能触发检测
        this.canHitCollision = true;
    }
    return BulletParent;
}());
exports.default = BulletParent;
},{}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var toast_1 = require("../manage/toast");
var HttpModel;
(function (HttpModel) {
    var HttpClass = /** @class */ (function (_super) {
        __extends(HttpClass, _super);
        /**
         *
         * @param compelete
         * @param markUrl 请求地址
         * @param data 发送的参数
         * @param type 请求的类型 post get
         */
        function HttpClass(compelete, markUrl, data, type) {
            var _this = 
            //此处需要设置loading   
            _super.call(this) || this;
            _this.markUrl = markUrl;
            _this.getType = type || "post";
            _this.completeH = compelete;
            _this.http.timeout = 10000; //设置超时时间；
            _this.once(Laya.Event.COMPLETE, _this, _this.completeHandler);
            _this.once(Laya.Event.ERROR, _this, _this.errorHandler);
            _this.on(Laya.Event.PROGRESS, _this, _this.processHandler);
            _this.send(_this.markUrl, data, _this.getType, "json", ["Content-Type", "application/json"]);
            return _this;
        }
        /**
         * 请求完成
         */
        HttpClass.prototype.completeHandler = function (e) {
            console.error("返回的数据:", e);
            this.completeH.runWith(e);
        };
        /**
         * 请求发生了错误
         */
        HttpClass.prototype.errorHandler = function (e) {
            console.error("requestError:", e);
            toast_1.default.noBindScript("请求发生了错误~");
        };
        /**
         * 进度
         */
        HttpClass.prototype.processHandler = function (e) {
            console.error("requestProcess:", e);
        };
        return HttpClass;
    }(Laya.HttpRequest));
    HttpModel.HttpClass = HttpClass;
})(HttpModel || (HttpModel = {}));
exports.default = HttpModel;
},{"../manage/toast":59}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpModel;
(function (HttpModel) {
    // export const URLSERVER = "http://192.168.1.181:5000/api/";
    HttpModel.URLSERVER = "http://192.168.1.198:5000/api/";
    // export const URLSERVER = "http://212.64.114.11:5000/api/";
    // export const URLSERVER = "https://ssl.xdieg.com/api/";
    var httpUrls;
    (function (httpUrls) {
        httpUrls["uuid"] = "UserMgr/Login";
        httpUrls["GetPlayerData"] = "PlayerBase/GetPlayerData";
        httpUrls["SignUp"] = "PlayerBase/SignUp";
        httpUrls["PassedBarrier"] = "PlayerBase/PassedBarrier";
        httpUrls["UpWeapon"] = "PlayerBase/UpWeapon";
        httpUrls["UpSecondaryWeapon"] = "PlayerBase/UpSecondaryWeapon";
        httpUrls["ShopOnce"] = "PlayerBase/ShopOnce";
        httpUrls["ShopTen"] = "PlayerBase/ShopTen";
        httpUrls["ExchangeEnergy"] = "PlayerBase/ExchangeEnergy";
        httpUrls["ExchangeGold"] = "PlayerBase/ExchangeGold";
        httpUrls["TimerUpdateUpdateSome"] = "TimerUpdate/UpdateSome";
        httpUrls["ShopItem"] = "PlayerBase/ShopItem";
        httpUrls["EndlessStart"] = "PlayerBase/EndlessStart";
        httpUrls["EndlessStop"] = "PlayerBase/EndlessStop";
        httpUrls["AchieveFetch"] = "PlayerBase/AchieveFetch";
    })(httpUrls = HttpModel.httpUrls || (HttpModel.httpUrls = {}));
})(HttpModel || (HttpModel = {}));
exports.default = HttpModel;
},{}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var toast_1 = require("../manage/toast");
var HttpModel;
(function (HttpModel) {
    var errorCode;
    (function (errorCode) {
        errorCode[errorCode["OK"] = 0] = "OK";
        errorCode[errorCode["Error"] = -1] = "Error";
        errorCode[errorCode["ParamError"] = -2] = "ParamError";
        errorCode[errorCode["HasNotLoginYet"] = -3] = "HasNotLoginYet";
        errorCode[errorCode["ReLogin"] = -4] = "ReLogin";
        errorCode[errorCode["FixedTableError"] = -5] = "FixedTableError";
        errorCode[errorCode["Repeated"] = -6] = "Repeated";
        errorCode[errorCode["NoEnough"] = -7] = "NoEnough";
        errorCode[errorCode["FullLevel"] = -8] = "FullLevel";
        errorCode[errorCode["UserDataError"] = -9] = "UserDataError";
        errorCode[errorCode["TryLockFailed"] = -10] = "TryLockFailed";
    })(errorCode = HttpModel.errorCode || (HttpModel.errorCode = {}));
    var HttpError = /** @class */ (function () {
        function HttpError(error, pare, back) {
            this.ERRORCODE = error;
            this.handerError(error, pare, back);
        }
        HttpError.prototype.handerError = function (error, parent, back) {
            var toastText;
            switch (error) {
                case errorCode.Error:
                    toastText = "发生错误,请刷新游戏!";
                    break;
                case errorCode.ParamError:
                    toastText = "参数错误!";
                    break;
                case errorCode.HasNotLoginYet:
                    toastText = "未登录!";
                    break;
                case errorCode.ReLogin:
                    toastText = "在其它设备登录!";
                    break;
                case errorCode.FixedTableError:
                    toastText = "数据表错误!";
                    break;
                case errorCode.Repeated:
                    toastText = "今天已经签过了哦~！";
                    break;
                case errorCode.FullLevel:
                    toastText = "已达满级~！";
                    break;
                case errorCode.UserDataError:
                    toastText = "用户数据错误!";
                    break;
                case errorCode.TryLockFailed:
                    toastText = "发生异常，请重试！";
                    break;
                default:
                    break;
            }
            toastText && toast_1.default.noBindScript(toastText, parent);
            back && back.run();
        };
        return HttpError;
    }());
    HttpModel.HttpError = HttpError;
})(HttpModel || (HttpModel = {}));
exports.default = HttpModel;
},{"../manage/toast":59}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var JsonEnum_1 = require("./JsonEnum");
var LoadManager_1 = require("../manage/LoadManager");
var Tool_1 = require("../Tools/Tool");
var ReadZip_1 = require("../Tools/ReadZip");
var readZip = ReadZip_1.default.readZip;
var copydata = Tool_1.default.copydata;
var zipDataFileList = JsonEnum_1.default.zipDataFileList;
var DataType = JsonEnum_1.default.DataType;
var JsonDataFileList = JsonEnum_1.default.DataJsonUrl;
var FixedDataTablesDir = JsonEnum_1.default.url;
var LoadManager = LoadManager_1.default.LoadManager;
var LYHandler = Laya.Handler;
var Data;
(function (Data) {
    var FixedDataTables = /** @class */ (function () {
        function FixedDataTables(complete, e) {
            var _this = this;
            this.dataCollection = {};
            if (!FixedDataTables.bLoadData) { // 必须预先加载json文件
                throw new Error("FixedDataTables haven't loaded data files yet.");
            }
            var zipObj = new readZip();
            var zIndex = 0;
            zipObj.loadAsync(Laya.loader.getRes(FixedDataTablesDir + "/" + Object.keys(zipDataFileList)[0] + ".zip")).then(function (data) {
                Object.getOwnPropertyNames(zipDataFileList.jsonZip).forEach(function (filename) {
                    data.file(JsonDataFileList[filename].file + ".json").async("text").then(function (data_json) {
                        _this.dataCollection[JsonDataFileList[filename].file] = zipObj.convertToJson(JSON.parse(data_json), JsonDataFileList[filename].key);
                        zIndex++;
                        if (zIndex >= Object.keys(data.files).length) {
                            if (complete) {
                                Laya.Browser.window.dataCollection = _this.dataCollection;
                                complete.runWith(e);
                            }
                        }
                    });
                    //this.dataCollection[JsonDataFileList[filename].file] = zipObj.convertToJson(zipObj.decomposeFiles(`${JsonDataFileList[filename].file}.json`), JsonDataFileList[filename].key)
                });
            });
            /*
            Object.getOwnPropertyNames(JsonDataFileList).forEach(filename => {
                this.dataCollection[JsonDataFileList[filename].file] = this.json2KeyValues(
                    LYLoader.getRes(`${FixedDataTablesDir}/${JsonDataFileList[filename].file}.json`).RECORDS,
                    JsonDataFileList[filename].key);
                LYLoader.clearRes(`${FixedDataTablesDir}/${JsonDataFileList[filename].file}.json`);
            });
    */
        }
        // 加载固定表的json文件
        FixedDataTables.loadFixedTables = function (complete, progress) {
            var loadFiles = [];
            // 整合需要加载的JSON列表
            /*
                Object.getOwnPropertyNames(JsonDataFileList).forEach(filename => {
                    loadFiles.push(`${JsonDataFileList[filename].file}.json`);
                });
                */
            //zip加入到loadFiles
            for (var i in zipDataFileList) {
                loadFiles.push(i + ".zip");
            }
            LoadManager.Instance().loadAssets(loadFiles, LYHandler.create(this, function (e) {
                FixedDataTables.bLoadData = true;
                FixedDataTables.getInstance(complete, e);
                if (complete) {
                    //complete.runWith(e);
                }
            }), progress);
            FixedDataTables.bLoadData = true;
        };
        FixedDataTables.getInstance = function (complete, e) {
            if (!FixedDataTables.instance) {
                FixedDataTables.instance = new FixedDataTables(complete, e);
                //console调试用
                Laya.Browser.window.FixedDataTables = FixedDataTables.instance;
            }
            return FixedDataTables.instance;
        };
        // get data() {
        //     return this.dataCollection;
        // }
        /**
         * 根据id获取对应英雄、装备、道具、技能等详细属性数据
         * @param type      获取的物品类型
         * @param ptyVal    属性检索值
        */
        FixedDataTables.prototype.getData = function (type, ptyVal) {
            // const fixData = FixedDataTables.getInstance().data;
            switch (type) {
                default:
                    var jsonFile = JsonDataFileList[DataType[type]];
                    if (ptyVal) {
                        return copydata(this.dataCollection[jsonFile.file][ptyVal]);
                    }
                    return copydata(this.dataCollection[jsonFile.file]);
            }
        };
        /**
         * 根据key从json中取值
         * @param type         DataType类型
         * @param ptyVal       key值
         * @param fieldName    属性名称
         */
        FixedDataTables.prototype.getDataByKey = function (type, ptyVal, fieldName) {
            var jsonFile = typeof (type) === 'number' ? JsonDataFileList[DataType[type]].file : type;
            var jsons = this.dataCollection;
            if (!jsons || jsons === undefined) {
                return jsons;
            }
            var json = jsons[jsonFile];
            if (!json || ptyVal === undefined) {
                return json;
            }
            var data = json[ptyVal];
            if (!data || fieldName === undefined || jsonFile === 'MazeMap') {
                return data;
            }
            var value = data[fieldName];
            return value;
        };
        /**
         * 从服务器获取固定表信息，类似关卡表
         * @param name  表名称
         * @param id    表里面Key字段
         * @param fieldName  属性名称
         */
        /*
        async getFixedData(name, id, fieldName?) {
            if (!this.dataCollection[name] || !this.dataCollection[name][id]) {
                const msgClient = NSCommunication.MessageClient.getInstance();
                const req = await msgClient.request(MSG.FixedTableInfo_Request, { tableName: name, tableId: id });
                if (req.fixedInfo) {
                    this.cacheServerData(name, id, req.fixedInfo);
                    return this.getDataByKey(name, id, fieldName);
                } else {
                    return null;
                }
            } else {
                return this.getDataByKey(name, id, fieldName);
            }
        }
        */
        FixedDataTables.prototype.cacheServerData = function (name, key, dataStr) {
            var _this = this;
            var dataPrase = JSON.parse(dataStr);
            var objData = {};
            if (name === 'MazeMap') {
                objData[key] = dataPrase;
            }
            else {
                dataPrase.forEach(function (element) {
                    var keyName = _this.JsonFileKeyName(name);
                    objData[element[keyName]] = element;
                });
            }
            this.dataCollection[name] = objData;
        };
        FixedDataTables.prototype.JsonFileKeyName = function (fileName) {
            for (var n in JsonDataFileList) {
                if (JsonDataFileList[n].file === fileName) {
                    return JsonDataFileList[n].key;
                }
            }
        };
        // 将JSON数组整合成Key:value格式
        FixedDataTables.prototype.json2KeyValues = function (jsonPty, keyPty) {
            var ret = {};
            jsonPty.forEach(function (pty) {
                ret[pty[keyPty]] = pty;
            });
            return ret;
        };
        // private static readonly dir = `res/data/fixed_tables`;
        FixedDataTables.bLoadData = false;
        return FixedDataTables;
    }());
    Data.FixedDataTables = FixedDataTables;
})(Data || (Data = {}));
exports.default = Data;
},{"../Tools/ReadZip":36,"../Tools/Tool":37,"../manage/LoadManager":51,"./JsonEnum":26}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Data;
(function (Data) {
    /**
     * jsonZip的地址
     */
    Data.url = "res/data/dataJson";
    /**
     * 非boos怪物得路径
     */
    Data.monsterUrl = "monster/";
    /**
     * 副武器的url路径
     */
    Data.urlSecondWeapon = "secondWeapon/";
    /**
     * 如果key为空表示key的值为"id"
     */
    Data.DataJsonUrl = {
        battle: { file: "battle", key: "id" },
        buff: { file: "buff", key: "id" },
        buy_gold: { file: "buy_gold", key: "id" },
        buy_power: { file: "buy_power", key: "id" },
        endless: { file: "endless", key: "id" },
        endless_reward: { file: "endless_reward", key: "id" },
        endless_skill: { file: "endless_skill", key: "id" },
        endless_weapon: { file: "endless_weapon", key: "level" },
        endless_boss: { file: "endless_boss", key: "id" },
        item: { file: "item", key: "id" },
        misc: { file: "misc", key: "id" },
        monster: { file: "monster", key: "id" },
        secondaryWeapon: { file: "secondaryWeapon", key: "id" },
        shop: { file: "shop", key: "id" },
        sign: { file: "sign", key: "id" },
        tips: { file: "tips", key: "id" },
        weapon: { file: "weapon", key: "level" },
        wheel: { file: "wheel", key: "id" },
        bullet: { file: "bullet", key: "id" },
        achievement: { file: "achievement", key: "id" }
    };
    Data.zipDataFileList = {
        jsonZip: Data.DataJsonUrl
    };
    var DataType;
    (function (DataType) {
        DataType[DataType["battle"] = 1] = "battle";
        DataType[DataType["buff"] = 2] = "buff";
        DataType[DataType["buy_gold"] = 3] = "buy_gold";
        DataType[DataType["buy_power"] = 4] = "buy_power";
        DataType[DataType["endless"] = 5] = "endless";
        DataType[DataType["endless_reward"] = 6] = "endless_reward";
        DataType[DataType["endless_skill"] = 7] = "endless_skill";
        DataType[DataType["endless_weapon"] = 8] = "endless_weapon";
        DataType[DataType["endless_boss"] = 9] = "endless_boss";
        DataType[DataType["item"] = 10] = "item";
        DataType[DataType["misc"] = 11] = "misc";
        DataType[DataType["monster"] = 12] = "monster";
        DataType[DataType["secondaryWeapon"] = 13] = "secondaryWeapon";
        DataType[DataType["shop"] = 14] = "shop";
        DataType[DataType["sign"] = 15] = "sign";
        DataType[DataType["tips"] = 16] = "tips";
        DataType[DataType["weapon"] = 17] = "weapon";
        DataType[DataType["wheel"] = 18] = "wheel";
        DataType[DataType["bullet"] = 19] = "bullet";
        DataType[DataType["achievement"] = 20] = "achievement";
    })(DataType = Data.DataType || (Data.DataType = {}));
    /**
     * 怪物类型对应的预设&&副武器子弹pic对应预设
     */
    var enemyToPerfab;
    (function (enemyToPerfab) {
        enemyToPerfab["\u521D\u59CB_\u602A\u72691"] = "Enemy_blue";
        enemyToPerfab["\u521D\u59CB_\u602A\u72692"] = "Enemy_yellow";
        enemyToPerfab["\u521D\u59CB_\u602A\u72693"] = "Enemy_red";
        enemyToPerfab["\u602A\u72694"] = "Enemy4";
        enemyToPerfab["\u602A\u72695"] = "Enemy5";
        enemyToPerfab["\u602A\u72696"] = "Enemy6";
        enemyToPerfab["\u602A\u72697"] = "Enemy7";
        enemyToPerfab["\u602A\u72698"] = "Enemy8";
        enemyToPerfab["\u602A\u72699"] = "Enemy9";
        enemyToPerfab["\u602A\u726910"] = "Enemy10";
        enemyToPerfab["\u602A\u726911"] = "Enemy11";
        enemyToPerfab["\u602A\u726912"] = "Enemy12";
        enemyToPerfab["\u602A\u726913"] = "Enemy13";
        enemyToPerfab["\u602A\u726914"] = "Enemy14";
        enemyToPerfab["\u602A\u726915"] = "Enemy15";
        enemyToPerfab["\u7279\u6B8A\u602A\u72691"] = "enemy_special1";
        enemyToPerfab["\u7279\u6B8A\u602A\u72692"] = "enemy_special2";
        enemyToPerfab["\u7279\u6B8A\u602A\u72693"] = "enemy_special3";
        enemyToPerfab["\u7279\u6B8A\u602A\u72694"] = "enemy_special4";
        enemyToPerfab["\u7279\u6B8A\u602A\u72695"] = "enemy_special5";
        enemyToPerfab["boss1"] = "Boss1";
        enemyToPerfab["boss2"] = "Boss2";
        enemyToPerfab["boss3"] = "Boss3";
        enemyToPerfab["boss4"] = "Boss4";
        enemyToPerfab["boss5"] = "Boss5";
        enemyToPerfab["boss_nanguawangzi"] = "Boss_nanguawangzi";
        enemyToPerfab["boss_dashuren"] = "Boss_dashuren";
        enemyToPerfab["boss_shitoujuren"] = "Boss_shitoujuren";
        enemyToPerfab["boss_maowanghou"] = "Boss_maowanghou";
        enemyToPerfab["boss_bingqilinzuhe"] = "Boss_bingqilinzuhe";
        enemyToPerfab["boss_bingtouxiang"] = "Boss_bingtouxiang";
        enemyToPerfab["boss_jibaobao"] = "Boss_jibaobao";
        enemyToPerfab["boss_zhangyunvhuang"] = "Boss_zhangyunvhuang";
        enemyToPerfab["bingshuanpao"] = "Bullet_skill3";
        enemyToPerfab["jiguangpao"] = "Bullet_skill4";
        /*"xuanfupao" = "Bullet_skill5",*/
        enemyToPerfab["bullet_blue"] = "Bullet_blue";
    })(enemyToPerfab = Data.enemyToPerfab || (Data.enemyToPerfab = {}));
    /**
     * boss的状态
     */
    var bossStatus;
    (function (bossStatus) {
        bossStatus[bossStatus["stand"] = 1] = "stand";
        bossStatus[bossStatus["attack"] = 2] = "attack";
        bossStatus[bossStatus["attacked"] = 3] = "attacked";
    })(bossStatus = Data.bossStatus || (Data.bossStatus = {}));
    /**
     * boss 动作对应的动画名称
     */
    var bossDragonAction;
    (function (bossDragonAction) {
        bossDragonAction["attack"] = "attack";
        bossDragonAction["attacked"] = "attacked";
        bossDragonAction["skill"] = "skill";
        bossDragonAction["stand"] = "stand";
        bossDragonAction["skill1"] = "skill1";
    })(bossDragonAction = Data.bossDragonAction || (Data.bossDragonAction = {}));
    /**
     * 子弹的类型
     */
    var BulletType;
    (function (BulletType) {
        BulletType[BulletType["main"] = 1] = "main";
        BulletType[BulletType["second"] = 2] = "second";
        BulletType[BulletType["boss"] = 3] = "boss";
        BulletType[BulletType["bigEnemy"] = 4] = "bigEnemy";
    })(BulletType = Data.BulletType || (Data.BulletType = {}));
    /**
     * prefab类型
     */
    var prefabType;
    (function (prefabType) {
        prefabType[prefabType["role"] = 1] = "role";
        prefabType[prefabType["boss"] = 2] = "boss";
        prefabType[prefabType["enemy"] = 3] = "enemy";
        prefabType[prefabType["bulletRole"] = 4] = "bulletRole";
        prefabType[prefabType["bulletSkill"] = 5] = "bulletSkill";
        prefabType[prefabType["bullletBoss"] = 6] = "bullletBoss";
        prefabType[prefabType["muzzle"] = 7] = "muzzle";
    })(prefabType = Data.prefabType || (Data.prefabType = {}));
    /**
     * 副武器技能状态
     */
    var secondSkill;
    (function (secondSkill) {
        secondSkill[secondSkill["ice"] = 1] = "ice";
        secondSkill[secondSkill["Laser"] = 2] = "Laser";
        secondSkill[secondSkill["flottant"] = 3] = "flottant";
    })(secondSkill = Data.secondSkill || (Data.secondSkill = {}));
    //副武器类型 type对应的预设~
    var muzzlePrefab;
    (function (muzzlePrefab) {
        muzzlePrefab[muzzlePrefab["Bullet_muzzle3"] = 3] = "Bullet_muzzle3";
        muzzlePrefab[muzzlePrefab["Bullet_muzzle4"] = 4] = "Bullet_muzzle4";
        muzzlePrefab[muzzlePrefab["Bullet_muzzle5"] = 5] = "Bullet_muzzle5";
    })(muzzlePrefab = Data.muzzlePrefab || (Data.muzzlePrefab = {}));
    //副武器类型 type对应的怪物身上效果的预设~
    var muzzlePrefabEnemy;
    (function (muzzlePrefabEnemy) {
        muzzlePrefabEnemy[muzzlePrefabEnemy["Bullet_skill3_enemy"] = 3] = "Bullet_skill3_enemy";
        muzzlePrefabEnemy[muzzlePrefabEnemy["Bullet_skill4_enemy"] = 4] = "Bullet_skill4_enemy";
        muzzlePrefabEnemy[muzzlePrefabEnemy["Bullet_skill5_enemy"] = 5] = "Bullet_skill5_enemy";
    })(muzzlePrefabEnemy = Data.muzzlePrefabEnemy || (Data.muzzlePrefabEnemy = {}));
    /**
     * SkeletonTempletManage 中的模板类型
     */
    var templetType;
    (function (templetType) {
        templetType[templetType["enemy"] = 1] = "enemy";
        templetType[templetType["other"] = 2] = "other";
    })(templetType = Data.templetType || (Data.templetType = {}));
    /**
     * baozha sk的动画name
     */
    var baozhaAni;
    (function (baozhaAni) {
        baozhaAni[baozhaAni["baozha"] = 0] = "baozha";
        baozhaAni[baozhaAni["gwbaozha"] = 1] = "gwbaozha";
        baozhaAni[baozhaAni["fjbaozha"] = 2] = "fjbaozha";
        baozhaAni[baozhaAni["xg_baozha"] = 3] = "xg_baozha";
    })(baozhaAni = Data.baozhaAni || (Data.baozhaAni = {}));
    /**
     * 中级怪物对应得sk name
     */
    var midEnemyNameToSK;
    (function (midEnemyNameToSK) {
        midEnemyNameToSK["\u4E2D\u7EA7_\u6CB3\u8C5A"] = "zhongji_hetun";
        midEnemyNameToSK["\u4E2D\u7EA7_\u874E\u5B50"] = "zhongji_xiezi";
        midEnemyNameToSK["\u4E2D\u7EA7_\u98DE\u7334"] = "zhongji_feihou";
        midEnemyNameToSK["\u4E2D\u7EA7_\u841D\u535C"] = "zhongji_luobo";
        midEnemyNameToSK["\u4E2D\u7EA7_\u51B0\u82B1"] = "zhongji_binghua";
        midEnemyNameToSK["\u4E2D\u7EA7_\u51B0\u6DC7\u6DCB"] = "zhongji_bingqilin";
        midEnemyNameToSK["\u4E2D\u7EA7_\u6D77\u9CA8"] = "zhongji_haisha";
        midEnemyNameToSK["\u4E2D\u7EA7_\u6D77\u5996"] = "zhongji_haiyao";
        midEnemyNameToSK["\u4E2D\u7EA7_\u706B\u9B3C"] = "zhongji_huogui";
        midEnemyNameToSK["\u4E2D\u7EA7_\u706B\u8611\u83C7"] = "zhongji_huomogu";
    })(midEnemyNameToSK = Data.midEnemyNameToSK || (Data.midEnemyNameToSK = {}));
    /**
     * boss的子弹的类型
     */
    var bossBulletType;
    (function (bossBulletType) {
        bossBulletType[bossBulletType["skill"] = 1] = "skill";
        bossBulletType[bossBulletType["common"] = 2] = "common";
        bossBulletType[bossBulletType["common2"] = 3] = "common2";
        bossBulletType[bossBulletType["ion"] = 4] = "ion";
        bossBulletType[bossBulletType["display"] = 5] = "display";
        bossBulletType[bossBulletType["skill2"] = 6] = "skill2";
    })(bossBulletType = Data.bossBulletType || (Data.bossBulletType = {}));
    /**
     * 副武器炮口特效的位置
     */
    /**
 *  - 35, 44   ||143 - 10-5, 44   203副武器位置
 *  - 35, 52  || 143 - 5, 52     201
 *  -32 ,52-8  ||  143,52-8       202
 */
    Data.secondWeaponMuzzlePos = {
        5: { x: [-35, 143 - 15], y: [44, 44] },
        3: { x: [-35, 143 - 5], y: [52, 52] },
        4: { x: [-32, 143], y: [52 - 8, 52 - 8] },
        6: { x: [-32, 143], y: [52 - 8, 52 - 8] },
        1: { x: [-32, 143], y: [52 - 8, 52 - 8] },
        7: { x: [-32, 143], y: [52 - 8, 52 - 8] },
        8: { x: [-32, 143], y: [52 - 8, 52 - 8] },
        9: { x: [-32, 143], y: [52 - 8, 52 - 8] },
        10: { x: [-32, 143], y: [52 - 8, 52 - 8] },
        11: { x: [-32, 143], y: [52 - 8, 52 - 8] },
    };
    /**
     * 副武器子弹发射的位置
     */
    /**
 * 203   x-34 y-20    ||  x+143 y-20
 * 201  x-34 y-80    ||   x+143 y-80
 * 202  x-34 y-80    ||   x+143 y-80
 */
    Data.secondWeaponPos = {
        3: { x: [-34 - 35, 143 - 25], y: [-80 - 200, -80 - 200] },
        4: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        6: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        1: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        7: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        8: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        9: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        10: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        11: { x: [-34 - 15, 143 - 15 + 4], y: [-80 - 600 + 640, -80 - 600 + 640] },
        5: { x: [-34 - 52, 143 - 52 + 4], y: [-20 - 20, -20 - 20] },
    };
    var roleStatus;
    (function (roleStatus) {
        roleStatus[roleStatus["controled"] = 1] = "controled";
    })(roleStatus = Data.roleStatus || (Data.roleStatus = {}));
    var dropHpStatus;
    (function (dropHpStatus) {
        dropHpStatus[dropHpStatus["born"] = 1] = "born";
        dropHpStatus[dropHpStatus["ordinary"] = 2] = "ordinary";
        dropHpStatus[dropHpStatus["second9"] = 3] = "second9";
        dropHpStatus[dropHpStatus["second10"] = 4] = "second10";
        dropHpStatus[dropHpStatus["second8"] = 5] = "second8";
    })(dropHpStatus = Data.dropHpStatus || (Data.dropHpStatus = {}));
})(Data || (Data = {}));
exports.default = Data;
},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Data;
(function (Data) {
    Data.musicPath = "music/";
    var musicToUrl;
    (function (musicToUrl) {
        musicToUrl["bg_menu"] = "bg_menu";
        musicToUrl["bg_fight"] = "bg_fight";
        musicToUrl["bg_boss"] = "bg_boss";
        musicToUrl["button_normal"] = "button_normal";
        musicToUrl["button_buy"] = "button_buy";
        musicToUrl["ui_popup"] = "ui_popup";
        musicToUrl["bullet_normal"] = "bullet_normal";
        musicToUrl["bomb"] = "bomb";
        musicToUrl["bomb_boss"] = "bomb_boss";
        musicToUrl["bomb_hero"] = "bomb_hero";
        musicToUrl["get_coin"] = "get_coin";
        musicToUrl["get_item"] = "get_item";
        musicToUrl["warning"] = "warning";
        musicToUrl["warning_bg"] = "warning_bg";
        musicToUrl["lose_noise"] = "lose_noise";
        musicToUrl["lose_bg"] = "lose_bg";
        musicToUrl["win_noise"] = "win_noise";
        musicToUrl["win_bg"] = "win_bg";
        musicToUrl["lottery_single"] = "lottery_single";
        musicToUrl["lottery_ten"] = "lottery_ten";
        musicToUrl["set_off"] = "set_off";
        musicToUrl["set_on"] = "set_on";
        musicToUrl["readygo"] = "readygo";
        musicToUrl["coin_charge"] = "coin_charge"; //兑换音效，用于金币-钻石之间兑换
    })(musicToUrl = Data.musicToUrl || (Data.musicToUrl = {}));
})(Data || (Data = {}));
exports.default = Data;
},{}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ButtonTouchEffect = /** @class */ (function (_super) {
    __extends(ButtonTouchEffect, _super);
    /**
     * 按钮动画通用动作序列
     */
    function ButtonTouchEffect() {
        return _super.call(this) || this;
    }
    ButtonTouchEffect.prototype.onEnable = function () {
        this.self = this.owner;
        this.startScale = this.self.scaleX;
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.setScaleSmall);
        this.self.on(Laya.Event.MOUSE_UP, this, this.setResumeScale);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.setScaleSmall);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.setResumeScale);
    };
    ButtonTouchEffect.prototype.setScaleSmall = function (e) {
        // this.self.
        if (this.self.hasOwnProperty("canTouch") && !this.self["canTouch"]) {
            return;
        }
        this.self.scale(0.9 * this.startScale, 0.9 * this.startScale);
    };
    ButtonTouchEffect.prototype.setResumeScale = function () {
        this.self.scale(this.startScale, this.startScale);
    };
    return ButtonTouchEffect;
}(Laya.Script));
exports.default = ButtonTouchEffect;
},{}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TimeLine = Laya.TimeLine;
var Event = Laya.Event;
var HpaddEffectControl = /** @class */ (function (_super) {
    __extends(HpaddEffectControl, _super);
    function HpaddEffectControl() {
        return _super.call(this) || this;
    }
    ;
    HpaddEffectControl.prototype.onEnable = function () {
        this.timeLineObj = new TimeLine();
        var timeLineObj = this.timeLineObj;
        this.alpha = 1;
        timeLineObj.addLabel("move", 0).to(this, { y: this.y - 125 }, 2000, Laya.Ease.expoOut, 0)
            .addLabel("alphaChange", 1500).to(this, { alpha: 0 }, 1000, null, 0);
        timeLineObj.play(0, false);
        timeLineObj.on(Event.COMPLETE, this, this.onFinished);
        timeLineObj.on(Event.LABEL, this, this.onLabel);
    };
    HpaddEffectControl.prototype.onFinished = function () {
        this.timeLineObj.destroy();
        this.removeSelf();
    };
    HpaddEffectControl.prototype.onLabel = function (label) {
        console.log("标签~---", label);
    };
    HpaddEffectControl.prototype.onDisable = function () {
        Laya.Pool.recover("HpAddToast", this);
    };
    return HpaddEffectControl;
}(Laya.FontClip));
exports.default = HpaddEffectControl;
},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var ReqLoadingControl = /** @class */ (function (_super) {
    __extends(ReqLoadingControl, _super);
    function ReqLoadingControl() {
        return _super.call(this) || this;
    }
    ;
    ReqLoadingControl.prototype.onEnable = function () {
        this.blackSprite.alpha = 0.6;
        this.canMove = true;
        this.blackSprite.on(Laya.Event.CLICK, this, function (e) {
            e.stopPropagation();
        });
        this.setLoading();
    };
    ReqLoadingControl.prototype.setLoading = function () {
        var _this = this;
        this.canMove && Laya.timer.loop(50, this, function () {
            if (_this.canMove) {
                _this.loadIcon.rotation += 4;
            }
        });
    };
    ReqLoadingControl.prototype.onClosed = function () {
        this.canMove = false;
        this.loadIcon.rotation = 0;
        Laya.timer.clearAll(this);
    };
    return ReqLoadingControl;
}(layaMaxUI_1.ui.test.ReqLoadingUI));
exports.default = ReqLoadingControl;
},{"../../ui/layaMaxUI":98}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LYSprite = Laya.Sprite;
var AdaptScene_1 = require("../manage/AdaptScene");
var UpBlackEffect = /** @class */ (function (_super) {
    __extends(UpBlackEffect, _super);
    /**
     * 战斗中手指松开,效果
     */
    function UpBlackEffect() {
        var _this = _super.call(this) || this;
        _this.loadImage("face/暂停遮照.png");
        _this.visible = false;
        _this.width = Laya.stage.width;
        _this.height = Laya.stage.height;
        AdaptScene_1.default.getInstance().setBg(_this);
        Laya.stage.addChild(_this);
        return _this;
    }
    UpBlackEffect.getInstance = function () {
        if (!this._instance) {
            this._instance = new UpBlackEffect();
        }
        return this._instance;
    };
    // private animationIndex: number;
    UpBlackEffect.prototype.setShow = function () {
        this.visible = true;
        this.alpha = 1;
        // this.animationIndex = 0;
        this.clearEffect();
    };
    // setAnimation() {
    //     this.animationIndex++ % 2 == 0 && (this.visible = !this.visible);
    // }
    UpBlackEffect.prototype.setHide = function () {
        this.alpha && Laya.Tween.to(this, { alpha: 0 }, 2000);
    };
    UpBlackEffect.prototype.clearEffect = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearTween(this);
    };
    return UpBlackEffect;
}(LYSprite));
exports.default = UpBlackEffect;
},{"../manage/AdaptScene":40}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BulletCommon_1 = require("../role/BulletCommon");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var MediumEnemy_bullet_1 = require("../MediumEnemy/MediumEnemy_bullet"); //所有中级小怪子弹
var Boss_jinsenangua = /** @class */ (function (_super) {
    __extends(Boss_jinsenangua, _super);
    function Boss_jinsenangua() {
        var _this = _super.call(this) || this;
        /**攻击次数计数器*/
        _this.attackCounter = 0;
        return _this;
    }
    Boss_jinsenangua.prototype.onEnable = function () {
        // 需要每次初始化属性
        this.initProperty();
    };
    //初始化属性
    Boss_jinsenangua.prototype.initProperty = function () {
        this.self = this.owner;
        this.pic = this.self.vars_.propertyObj.pic;
        this.skeleton = this.self.getChildByName("EnemySK");
        this.moveOnOff_Boss = true;
        this.firstAttack = true;
        this.firstAttack_Interval = 2000;
        this.attackCounter = 0;
        this.attack_NowTime = Date.now();
        this.timer = 0;
        this.delayed = 0;
        this.role = this.self.scene.getChildByName('role_name');
        switch (this.pic) {
            case 'zhongji_hetun':
                this.firstAttack_Interval = 2800;
                this.attack_Interval = 2000;
                break;
            case 'zhongji_xiezi':
                this.firstAttack_Interval = 2800;
                this.attack_Interval = 5000;
                break;
            case 'zhongji_luobo':
                this.firstAttack_Interval = 2800;
                this.attack_Interval = 4000;
                break;
            case 'zhongji_feihou':
                this.attack_Interval = 1200;
                this.firstAttack_Interval = 2000;
                break;
            case 'zhongji_binghua':
                this.attack_Interval = 3000;
                this.firstAttack_Interval = 3000;
                break;
            case 'zhongji_bingqilin':
                this.attack_Interval = 2000;
                this.firstAttack_Interval = 2000;
                break;
            case 'zhongji_haiyao':
                this.attack_Interval = 4500;
                this.firstAttack_Interval = 2000;
                break;
            case 'zhongji_haisha':
                this.attack_Interval = 6000;
                this.firstAttack_Interval = 2000;
                break;
            case 'zhongji_huogui':
                this.attack_Interval = 3000;
                this.firstAttack_Interval = 2000;
                break;
            case 'zhongji_huomogu':
                this.attack_Interval = 3000;
                this.firstAttack_Interval = 2000;
                var number = Math.floor(Math.random() * 2);
                if (number === 1) {
                    this.self.x = Laya.stage.width / 3 - 80;
                }
                else {
                    this.self.x = Laya.stage.width * 2 / 3 - 80;
                }
                break;
            default:
                this.attack_Interval = 3000;
                break;
        }
        if (this.self.x > Laya.stage.width / 2 - 80) {
            this.left_right_Direction = 'left';
        }
        else {
            this.left_right_Direction = 'right';
        }
        this.up_down_Direction = 'down';
    };
    /**怪物的移动行为合集*/
    Boss_jinsenangua.prototype.move = function () {
        switch (this.pic) {
            case 'zhongji_hetun':
                this.zhongji_hetun_move();
                break;
            case 'zhongji_xiezi':
                this.zhongji_xiezi_move();
                break;
            case 'zhongji_luobo':
                this.zhongji_luobo_move();
                break;
            case 'zhongji_feihou':
                this.zhongji_feihou_move();
                break;
            case 'zhongji_binghua':
                this.self.y += 2;
                break;
            case 'zhongji_bingqilin':
                this.zhongji_bingqilin_move();
                break;
            case 'zhongji_haiyao':
                this.self.y += 2;
                break;
            case 'zhongji_haisha':
                this.self.y += 2;
                break;
            case 'zhongji_huogui':
                this.self.y += 2;
                break;
            case 'zhongji_huomogu':
                this.zhongji_huomogu_move();
                break;
            default:
                this.self.y += 2;
                break;
        }
        this.timer += 1;
    };
    /**中级河豚移动规则，缓慢跟随*/
    Boss_jinsenangua.prototype.zhongji_hetun_move = function () {
        // x,y分别相减是两点连线向量
        var point = new Laya.Point(this.role.x - this.self.x, this.role.y - this.self.y);
        // 归一化，向量长度为1。
        point.normalize();
        //向量相加
        this.self.x += point.x * 2;
        this.self.y += point.y * 2;
    };
    /**中级河豚移动规则，驻点不动*/
    Boss_jinsenangua.prototype.zhongji_xiezi_move = function () {
        this.self.y += 2;
    };
    /**中级萝卜移动规则，旋转*/
    Boss_jinsenangua.prototype.zhongji_luobo_move = function () {
        this.self.y += 2;
        this.skeleton.rotation += 12;
        this.skeleton.playbackRate(0.1);
    };
    /**中级飞猴移动规则，左右徘徊*/
    Boss_jinsenangua.prototype.zhongji_feihou_move = function () {
        if (this.left_right_Direction === "left") {
            this.self.x -= 5;
            if (this.self.x < Laya.stage.width * 1 / 4 - 120) {
                this.left_right_Direction = "right";
            }
        }
        else if (this.left_right_Direction === "right") {
            this.self.x += 5;
            if (this.self.x + this.self.width / 2 > Laya.stage.width * 3 / 4 - 30) {
                this.left_right_Direction = "left";
            }
        }
        if (this.self.y < 100) {
            this.self.y += 5;
        }
        else {
            this.self.y += 0.5;
        }
    };
    /**中级飞猴移动规则，上下徘徊，迂回向下*/
    Boss_jinsenangua.prototype.zhongji_bingqilin_move = function () {
        this.self.y += 2;
    };
    /**中级火蘑菇移动规则，快速移动*/
    Boss_jinsenangua.prototype.zhongji_huomogu_move = function () {
        this.self.y += 2;
        if (this.left_right_Direction === "left") {
            this.self.x += 10;
        }
        else if (this.left_right_Direction === "right") {
            this.self.x -= 10;
        }
        if (this.timer % 35 === 0) {
            if (this.left_right_Direction === "left") {
                this.left_right_Direction = "right";
            }
            else if (this.left_right_Direction === "right") {
                this.left_right_Direction = "left";
            }
        }
    };
    /**怪物发射子弹攻击合集，暂时没有攻击动作*/
    Boss_jinsenangua.prototype.attack = function () {
        // 延时用于匹配动作
        switch (this.pic) {
            case 'zhongji_hetun':
                this.zhongji_hetun_01_01();
                break;
            case 'zhongji_xiezi':
                this.zhongji_xiezi_01_01();
                break;
            case 'zhongji_luobo':
                this.zhongji_luobo_01_01();
                break;
            case 'zhongji_feihou':
                this.zhongji_feihou_01_01();
                break;
            case 'zhongji_binghua':
                this.zhongji_binghua_01_01();
                break;
            case 'zhongji_bingqilin':
                this.zhongji_bingqilin_01_01();
                break;
            case 'zhongji_haiyao':
                this.zhongji_haiyao_01_01();
                break;
            case 'zhongji_haisha':
                this.zhongji_haisha_01_01();
                break;
            case 'zhongji_huogui':
                this.zhongji_huogui_01_01();
                break;
            case 'zhongji_huomogu':
                this.zhongji_huomogu_01_01();
                break;
            default:
                break;
        }
    };
    /**实例化子弹
     * @param skin 子弹的图片
    */
    Boss_jinsenangua.prototype.initBullet = function (skin) {
        // 子弹父节点
        this.bullteParent = this.owner.scene.getChildByName("bulletParent_enemy");
        // 子弹预设
        var bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.bigEnemy); //中级怪物子弹类型统一
        var bullet_Attack = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        // 赋予公用属性
        if (!bullet_Attack.vars_) {
            bullet_Attack.vars_ = {};
        }
        bullet_Attack.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        bullet_Attack.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
        bullet_Attack.vars_.propertyObj.fromNick = 'MediumEnemy_Move';
        this.bullteParent.addChild(bullet_Attack);
        bullet_Attack.rotation = 0;
        // 子弹样式替换
        var img = bullet_Attack.getChildByName('img');
        img.skin = skin;
        img.pivotX = img.width / 2;
        img.pivotY = img.height / 2;
        img.rotation = 0;
        return bullet_Attack;
    };
    /**子弹脚本属性赋值
     * @param bullet 子弹本身
     * @param syncRotation 子弹本身的角度是和移动方向相同
     * @param moveOnOff 是否开启移动开关
     * @param group 子弹属于哪个组
     * @param row 子弹属于那一排
     * @param line 子弹属于那一列
     * @param firstAngle 初始移动方向
     * @param firstSpeed 初始速度
     * @param standingTime 停留时间
    */
    Boss_jinsenangua.prototype.bulletProperties = function (bullet, syncRotation, moveOnOff, group, row, line, firstAngle, firstSpeed, standingTime) {
        //添加运动脚本，并且给予一些属性
        if (!bullet['MediumEnemy_bullet']) {
            bullet.addComponent(MediumEnemy_bullet_1.default);
        }
        var MediumEnemy_Bullet = bullet['MediumEnemy_bullet'];
        MediumEnemy_Bullet.group = group;
        MediumEnemy_Bullet.row = row;
        MediumEnemy_Bullet.line = line;
        MediumEnemy_Bullet.moveOnOff = moveOnOff;
        MediumEnemy_Bullet.bossName = this.owner.name;
        MediumEnemy_Bullet.firstAngle = firstAngle;
        MediumEnemy_Bullet.firstSpeed = firstSpeed;
        if (syncRotation === 'sync') {
            bullet.rotation = firstAngle - 90;
        }
        else {
            bullet.rotation = 0;
        }
        MediumEnemy_Bullet.standingTime = standingTime;
    };
    /**zhongji_hetun，中级河豚普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_hetun_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 50;
        // 发射子弹的时候停顿
        this.moveOnOff_Boss = false;
        Laya.timer.frameOnce(this.delayed, this, function () {
            this.moveOnOff_Boss = true;
            //角度合集
            for (var l = 0; l < 12; l++) {
                //创建
                var zhongji_hetun_01_01 = this.initBullet('enemyBullet/zhongjihetun_b.png');
                zhongji_hetun_01_01.name = "zhongji_hetun_01_01";
                // 修正位置
                var bulletX = this.self.x + this.self.width * 1 / 3 + 75;
                var bulletY = this.self.y + this.self.height * 1 / 3 + 75;
                zhongji_hetun_01_01.pos(bulletX, bulletY);
                // 移动脚本属性赋值
                this.bulletProperties(zhongji_hetun_01_01, 'sync', true, null, null, l, 30 * l, null, null);
            }
        });
    };
    /**zhongji_xiezi，中级蝎子普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_xiezi_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 50;
        //发射子弹的时候停顿
        this.moveOnOff_Boss = false;
        var _loop_1 = function (r) {
            this_1.delayed += 15;
            Laya.timer.frameOnce(this_1.delayed, this_1, function () {
                if (this.owner.scene == null) {
                    return;
                }
                for (var l = 0; l < 2; l++) {
                    //创建
                    var zhongji_xiezi_01_01 = this.initBullet('enemyBullet/zhongjixiezi_b.png');
                    zhongji_xiezi_01_01.name = "zhongji_xiezi_01_01";
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3 + 73;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 60;
                    zhongji_xiezi_01_01.pos(bulletX, bulletY);
                    // 移动脚本属性赋值
                    var firstAngle = r * 45 + l * 15;
                    this.bulletProperties(zhongji_xiezi_01_01, 'sync', true, null, r, l, firstAngle, null, 0);
                    // 恢复移动
                    if (r === 7 && l === 1) {
                        this.moveOnOff_Boss = true;
                    }
                }
            });
        };
        var this_1 = this;
        for (var r = 0; r < 8; r++) {
            _loop_1(r);
        }
    };
    /**zhongji_luobo，中级萝卜普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_luobo_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //角度重置0
        this.skeleton.rotation = 0;
        //播放速率正常
        this.skeleton.playbackRate(1);
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 50;
        // 发射子弹的时候停顿
        this.moveOnOff_Boss = false;
        // 时间间隔
        var number = 20;
        var _loop_2 = function (g) {
            this_2.delayed += number;
            Laya.timer.frameOnce(this_2.delayed, this_2, function () {
                for (var r = 0; r < 4; r++) {
                    if (this.owner.scene == null) {
                        return;
                    }
                    for (var l = 0; l < 2; l++) {
                        //创建
                        var zhongji_luobo_01_01 = this.initBullet('enemyBullet/zhongjiluobo_b.png');
                        zhongji_luobo_01_01.name = "zhongji_luobo_01_01";
                        // 修正位置
                        var bulletX = this.self.x + this.self.width * 1 / 3 + 50;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        zhongji_luobo_01_01.pos(bulletX, bulletY);
                        // 移动脚本属性赋值
                        var firstAngle = r * 90 + l * 15 + g * 25;
                        var standingTime = 10 - g * number * 0.1;
                        this.bulletProperties(zhongji_luobo_01_01, 'sync', true, g, r, l, firstAngle, null, standingTime);
                        // 打开移动
                        if (g === 2 && r === 3 && l === 1) {
                            this.moveOnOff_Boss = true;
                        }
                    }
                }
            });
        };
        var this_2 = this;
        for (var g = 0; g < 3; g++) {
            _loop_2(g);
        }
    };
    /**zhongji_feihou，中级飞猴普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_feihou_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 30;
        // 关掉移动
        this.moveOnOff_Boss = false;
        Laya.timer.frameOnce(this.delayed, this, function () {
            // 关掉移动
            this.moveOnOff_Boss = true;
            //计时器时间初始化
            for (var l = 0; l < 6; l++) {
                //创建
                var zhongji_feihou_01_01 = this.initBullet('enemyBullet/zhongjifeihou_b.png');
                zhongji_feihou_01_01.name = "zhongji_feihou_01_01";
                // 修正位置
                var bulletX = this.self.x + this.self.width * 1 / 3 + 80;
                var bulletY = this.self.y + this.self.height * 1 / 3 + 100;
                if (l === 0) {
                    zhongji_feihou_01_01.pos(bulletX, bulletY);
                }
                else if (l === 1) {
                    zhongji_feihou_01_01.pos(bulletX - 20, bulletY + 25);
                }
                else if (l === 2) {
                    zhongji_feihou_01_01.pos(bulletX + 20, bulletY + 25);
                }
                else if (l === 3) {
                    zhongji_feihou_01_01.pos(bulletX + 40, bulletY + 50);
                }
                else if (l === 4) {
                    zhongji_feihou_01_01.pos(bulletX, bulletY + 50);
                }
                else if (l === 5) {
                    zhongji_feihou_01_01.pos(bulletX - 40, bulletY + 50);
                }
                // 移动脚本属性赋值
                this.bulletProperties(zhongji_feihou_01_01, 'no', true, null, null, l, null, null, null);
            }
        });
    };
    /**zhongji_binghua，中级冰花普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_binghua_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 50;
        // 关掉移动
        this.moveOnOff_Boss = false;
        var _loop_3 = function (r) {
            this_3.delayed += 7;
            Laya.timer.frameOnce(this_3.delayed, this_3, function () {
                for (var l = 0; l < 2; l++) {
                    //创建
                    var zhongji_binghua_01_01 = this.initBullet('enemyBullet/zhongjibinghua_b.png');
                    zhongji_binghua_01_01.name = "zhongji_binghua_01_01";
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3 + 80;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    zhongji_binghua_01_01.pos(bulletX, bulletY);
                    // 移动脚本属性赋值
                    var firstAngle = r * 36;
                    this.bulletProperties(zhongji_binghua_01_01, 'sync', true, null, r, l, r * 36, firstAngle, null, null);
                    // 恢复移动
                    if (r === 14 && l === 1) {
                        this.moveOnOff_Boss = true;
                    }
                }
            });
        };
        var this_3 = this;
        for (var r = 0; r < 15; r++) {
            _loop_3(r);
        }
    };
    /**zhongji_bingqilin，中级冰淇淋普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_bingqilin_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 40;
        // 关掉移动
        this.moveOnOff_Boss = false;
        var _loop_4 = function (g) {
            this_4.delayed += 10;
            Laya.timer.frameOnce(this_4.delayed, this_4, function () {
                for (var r = 0; r < 4; r++) {
                    for (var l = 0; l < 4; l++) {
                        //创建
                        var zhongji_bingqilin_01_01 = this.initBullet('enemyBullet/zhongjibingqilin_b.png');
                        zhongji_bingqilin_01_01.name = "zhongji_bingqilin_01_01";
                        //修正位置
                        var bulletX = this.self.x + this.self.width * 1 / 3 + 80;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        zhongji_bingqilin_01_01.pos(bulletX, bulletY);
                        // 移动脚本属性赋值
                        var firstAngle = r * 90 + g * 45;
                        this.bulletProperties(zhongji_bingqilin_01_01, 'sync', true, g, r, l, firstAngle, null, null);
                        if (g === 1 && r === 3 && l === 3) {
                            this.moveOnOff_Boss = true;
                        }
                    }
                }
            });
        };
        var this_4 = this;
        for (var g = 0; g < 2; g++) {
            _loop_4(g);
        }
    };
    /**zhongji_haiyao，中级海妖普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_haiyao_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 30;
        // 关掉移动
        this.moveOnOff_Boss = false;
        var _loop_5 = function (g) {
            this_5.delayed += 30;
            var numberR;
            var numberL;
            if (g === 0) {
                numberR = 5;
                numberL = 5;
            }
            else {
                numberR = 4;
                numberL = 4;
            }
            Laya.timer.frameOnce(this_5.delayed, this_5, function () {
                for (var r = 0; r < numberR; r++) {
                    for (var l = 0; l < numberL; l++) {
                        //创建
                        var zhongji_haiyao_01_01 = this.initBullet('enemyBullet/zhongjihaiyao_b.png');
                        zhongji_haiyao_01_01.name = "zhongji_haiyao_01_01";
                        // 修正位置
                        var bulletX = this.self.x + this.self.width * 1 / 3 + 50;
                        var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                        zhongji_haiyao_01_01.pos(bulletX, bulletY);
                        // 移动脚本属性赋值
                        var firstAngle = void 0;
                        if (g === 0) {
                            firstAngle = r * 72 + l * 10;
                        }
                        else {
                            firstAngle = r * 90 + l * 15 + 45;
                        }
                        this.bulletProperties(zhongji_haiyao_01_01, 'sync', true, g, r, l, firstAngle, null, null);
                        if (g === 1 && r === 3 && l === 3) {
                            this.moveOnOff_Boss = true;
                        }
                    }
                }
            });
        };
        var this_5 = this;
        for (var g = 0; g < 2; g++) {
            _loop_5(g);
        }
    };
    /**zhongji_haisha，中级海妖普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_haisha_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 30;
        // 关掉移动
        this.moveOnOff_Boss = false;
        //时间间隔
        var number = 3;
        var _loop_6 = function (l) {
            this_6.delayed += number;
            Laya.timer.frameOnce(this_6.delayed, this_6, function () {
                //创建
                var zhongji_haisha_01_01 = this.initBullet('enemyBullet/zhongjihaisha_b.png');
                zhongji_haisha_01_01.name = "zhongji_haisha_01_01";
                // 修正位置
                var bulletX = this.self.x + this.self.width * 1 / 3 + 50;
                var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                zhongji_haisha_01_01.pos(bulletX, bulletY);
                // 移动脚本属性赋值
                var firstAngle = l * 20;
                var standingTime = 15 - l * number * 0.1;
                this.bulletProperties(zhongji_haisha_01_01, 'sync', true, null, null, l, firstAngle, null, standingTime);
                if (l === 39) {
                    this.moveOnOff_Boss = true;
                }
            });
        };
        var this_6 = this;
        for (var l = 0; l < 40; l++) {
            _loop_6(l);
        }
    };
    /**zhongji_huogui，中级火鬼普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_huogui_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 30;
        // 关掉移动
        this.moveOnOff_Boss = false;
        var _loop_7 = function (r) {
            this_7.delayed += 15;
            Laya.timer.frameOnce(this_7.delayed, this_7, function () {
                for (var l = 0; l < 8; l++) {
                    //创建
                    var zhongji_huogui_01_01 = this.initBullet('enemyBullet/zhongjihuogui_b.png');
                    zhongji_huogui_01_01.name = "zhongji_huogui_01_01";
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3 + 50;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    zhongji_huogui_01_01.pos(bulletX + 20, bulletY);
                    // 移动脚本属性赋值
                    var firstSpeed = Math.floor(Math.random() * 3) + 5;
                    var firstAngle = Math.floor(Math.random() * 60) + l * 45;
                    this.bulletProperties(zhongji_huogui_01_01, 'sync', true, null, r, l, firstAngle, firstSpeed, null);
                    if (r === 4 && l === 5) {
                        this.moveOnOff_Boss = true;
                    }
                }
            });
        };
        var this_7 = this;
        for (var r = 0; r < 5; r++) {
            _loop_7(r);
        }
    };
    /**zhongji_huomogu，中级火蘑菇普通攻击1-1*/
    Boss_jinsenangua.prototype.zhongji_huomogu_01_01 = function () {
        // 改变子弹父节点的层级，要大于boss
        this.owner.scene.getChildByName("bulletParent_enemy").zOrder = 2;
        this.self.parent.zOrder = 1;
        //计时器时间初始化,起始延时控制停顿
        this.delayed = 30;
        // 关掉移动
        this.moveOnOff_Boss = false;
        var _loop_8 = function (r) {
            this_8.delayed += 15;
            Laya.timer.frameOnce(this_8.delayed, this_8, function () {
                for (var l = 0; l < 10; l++) {
                    //创建
                    var zhongji_huomogu_01_01 = this.initBullet('enemyBullet/zhongjihuomogu_b.png');
                    zhongji_huomogu_01_01.name = "zhongji_huomogu_01_01";
                    // 修正位置
                    var bulletX = this.self.x + this.self.width * 1 / 3 + 50;
                    var bulletY = this.self.y + this.self.height * 1 / 3 + 50;
                    zhongji_huomogu_01_01.pos(bulletX, bulletY);
                    // 移动脚本属性赋值
                    var firstAngle = void 0;
                    if (l >= 0 && l < 5) {
                        firstAngle = -45 + 22.5 * l + r * 60;
                    }
                    else if (l >= 5 && l < 10) {
                        firstAngle = 225 - (22.5 * (l - 5)) + r * 60;
                    }
                    this.bulletProperties(zhongji_huomogu_01_01, 'sync', true, null, r, l, firstAngle, null, null);
                    if (r === 5 && l === 9) {
                        this.moveOnOff_Boss = true;
                    }
                }
            });
        };
        var this_8 = this;
        for (var r = 0; r < 6; r++) {
            _loop_8(r);
        }
    };
    Boss_jinsenangua.prototype.onUpdate = function () {
        if (this.moveOnOff_Boss && !PlayingSceneControl_1.default.instance.isGamePause) {
            this.move();
            //通过时间间隔发动攻击
            var nowTime = Date.now();
            if (this.firstAttack && nowTime - this.attack_NowTime > this.firstAttack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                this.firstAttack = false;
                this.attack();
            }
            else if (nowTime - this.attack_NowTime > this.attack_Interval) {
                this.attack_NowTime = nowTime; //重置时间
                this.attack();
            }
        }
    };
    Boss_jinsenangua.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
    };
    return Boss_jinsenangua;
}(Laya.Script));
exports.default = Boss_jinsenangua;
},{"../Data/JsonEnum":26,"../MediumEnemy/MediumEnemy_bullet":33,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/BulletCommon":70}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var bullet = /** @class */ (function (_super) {
    __extends(bullet, _super);
    function bullet() {
        var _this = _super.call(this) || this;
        /**移动开关，需要在怪物脚本内打开*/
        _this.moveOnOff = false;
        return _this;
    }
    bullet.prototype.onEnable = function () {
        this.self = this.owner;
        this.self['MediumEnemy_bullet'] = this;
        this.initProperty();
    };
    /**初始化一些属性*/
    bullet.prototype.initProperty = function () {
        this.accelerated = 0.06;
        this.timer = 0;
    };
    /**怪物子弹移动合集*/
    bullet.prototype.bullet_Move = function () {
        if (this.moveOnOff && !PlayingSceneControl_1.default.instance.isGamePause) {
            // 运动轨迹
            switch (this.self.name) {
                //zhongji_hetun 01_01
                case 'zhongji_hetun_01_01':
                    this.zhongji_hetun_01_01();
                    break;
                //zhongji_xieizi 01_01
                case 'zhongji_xiezi_01_01':
                    this.zhongji_xiezi_01_01();
                    break;
                //zhongji_luobo_01_01
                case 'zhongji_luobo_01_01':
                    this.zhongji_luobo_01_01();
                    break;
                //zhongji_luobo_01_01
                case 'zhongji_feihou_01_01':
                    this.zhongji_feihou_01_01();
                    break;
                //zhongji_bingqilin
                case 'zhongji_bingqilin_01_01':
                    this.zhongji_bingqilin_01_01();
                    break;
                //zhongji_binghua
                case 'zhongji_binghua_01_01':
                    this.zhongji_binghua_01_01();
                    break;
                //zhongji_bingqilin
                case 'zhongji_haiyao_01_01':
                    this.zhongji_haiyao_01_01();
                    break;
                //zhongji_binghua
                case 'zhongji_haisha_01_01':
                    this.zhongji_haisha_01_01();
                    break;
                //zhongji_huogui
                case 'zhongji_huogui_01_01':
                    this.zhongji_huogui_01_01();
                    break;
                //zhongji_huomogu
                case 'zhongji_huomogu_01_01':
                    this.zhongji_huomogu_01_01();
                    break;
                default:
                    break;
            }
        }
        this.accelerated += 0.05;
        this.timer += 0.1;
    };
    /**
     * 通用子弹移动，按单一角度移动
     * @param angle 角度
     *  @param basedSpeed 基础速度
    */
    bullet.prototype.commonSpeedXYByAngle = function (angle, basedSpeed) {
        this.self.x += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated).x;
        this.self.y += Tool_1.default.speedXYByAngle(angle, basedSpeed + this.accelerated).y;
    };
    /**中级河豚1-01*/
    bullet.prototype.zhongji_hetun_01_01 = function () {
        var angle = this.firstAngle;
        var basedSpeed;
        if (this.line % 2 !== 0) {
            basedSpeed = 5;
        }
        else {
            basedSpeed = 3;
        }
        this.commonSpeedXYByAngle(angle, basedSpeed);
    };
    /**中级蝎子1-01*/
    bullet.prototype.zhongji_xiezi_01_01 = function () {
        var angle = this.firstAngle;
        var basedSpeed;
        if (this.line === 1) {
            basedSpeed = 6.3;
        }
        else {
            basedSpeed = 6;
        }
        this.commonSpeedXYByAngle(angle, basedSpeed);
    };
    /**中级萝卜1-01*/
    bullet.prototype.zhongji_luobo_01_01 = function () {
        var angle = this.firstAngle;
        var basedSpeed;
        var number = 1;
        if (this.timer >= 0 && this.timer < number) {
            if (this.group === 0) {
                basedSpeed = 10;
            }
            else if (this.group === 1) {
                basedSpeed = 7;
            }
            else {
                basedSpeed = 4;
            }
            this.commonSpeedXYByAngle(angle, basedSpeed);
        }
        else if (this.timer >= number && this.timer <= this.standingTime + number) {
            this.accelerated = 0.06;
            return;
        }
        else if (this.timer >= this.standingTime + number) {
            basedSpeed = 7 - this.line * 0.4;
            this.commonSpeedXYByAngle(angle, basedSpeed);
        }
    };
    /**中级飞猴1-01*/
    bullet.prototype.zhongji_feihou_01_01 = function () {
        var angle = 90;
        var basedSpeed = 5;
        if (this.line === 0) {
            basedSpeed = 7;
        }
        else if (this.line === 1 || this.line === 2) {
            basedSpeed = 6;
        }
        else if (this.line === 3 || this.line === 4 || this.line === 5) {
            basedSpeed = 5;
        }
        this.commonSpeedXYByAngle(angle, basedSpeed);
    };
    /**中级冰花1-01*/
    bullet.prototype.zhongji_binghua_01_01 = function () {
        var angle;
        var basedSpeed = 5;
        if (this.timer > 0 && this.timer > 5) {
        }
        if (this.line === 0) {
            angle = this.firstAngle + 10;
        }
        else {
            angle = this.firstAngle - 10;
        }
        this.commonSpeedXYByAngle(angle, basedSpeed);
    };
    /**中级冰淇淋1-01*/
    bullet.prototype.zhongji_bingqilin_01_01 = function () {
        var angle = this.firstAngle;
        var basedSpeed;
        if (this.timer >= 0 && this.timer < 1) {
            basedSpeed = 5;
            this.commonSpeedXYByAngle(angle, basedSpeed - this.line * 0.3);
        }
        else if (this.timer >= 1 && this.timer < 2) {
            return;
        }
        else if (this.timer >= 2) {
            basedSpeed = 5;
            this.commonSpeedXYByAngle(angle, basedSpeed - this.line * 0.4);
        }
    };
    /**中级海妖1-01*/
    bullet.prototype.zhongji_haiyao_01_01 = function () {
        this.self.rotation += 5;
        var angle = this.firstAngle;
        var basedSpeed;
        if (this.group === 0) {
            if (this.line === 0 || this.line === 4) {
                basedSpeed = 3.6;
            }
            else if (this.line === 2) {
                basedSpeed = 4;
            }
            else if (this.line === 1 || this.line === 3) {
                basedSpeed = 3.9;
            }
        }
        else {
            if (this.line === 0 || this.line === 3) {
                basedSpeed = 3.5;
            }
            else if (this.line === 1 || this.line === 2) {
                basedSpeed = 3.8;
            }
        }
        this.commonSpeedXYByAngle(angle, basedSpeed);
    };
    /**中级海鲨1-01*/
    bullet.prototype.zhongji_haisha_01_01 = function () {
        var angle = this.firstAngle;
        var basedSpeed;
        var number = 0.7;
        if (this.timer >= 0 && this.timer < number) {
            basedSpeed = 14 - this.line * 0.3;
            this.commonSpeedXYByAngle(angle, basedSpeed);
        }
        else if (this.timer >= number && this.timer <= this.standingTime + number) {
            this.accelerated = 0.06;
            return;
        }
        else if (this.timer >= this.standingTime + number) {
            basedSpeed = 7;
            this.commonSpeedXYByAngle(angle, basedSpeed);
        }
    };
    /**中级火鬼1-01*/
    bullet.prototype.zhongji_huogui_01_01 = function () {
        this.self.rotation += 5;
        this.commonSpeedXYByAngle(this.firstAngle, this.firstSpeed);
    };
    /**中级火蘑菇1-01*/
    bullet.prototype.zhongji_huomogu_01_01 = function () {
        this.self.rotation += 5;
        var angle = this.firstAngle;
        var basedSpeed;
        if (this.timer >= 0 && this.timer < 1.5) {
            basedSpeed = 10;
        }
        else {
            basedSpeed = 2.5;
        }
        this.commonSpeedXYByAngle(angle, basedSpeed);
    };
    bullet.prototype.onDisable = function () {
    };
    bullet.prototype.onUpdate = function () {
    };
    return bullet;
}(Laya.Script));
exports.default = bullet;
},{"../Tools/Tool":37,"../playing/PlayingSceneControl":65}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GoldFly = /** @class */ (function () {
    function GoldFly(start, endPoint, moveObj, parent, action, arg, contex, num) {
        this.start = start;
        this.end = endPoint;
        this.addParent = parent || Laya.stage;
        this.action = action;
        this.num = num || 0;
        this.moveObj = moveObj || this.createFlyImage();
        this.moveFinishArg = arg || null;
        this.contex = contex || null;
        this.startMove();
    }
    ;
    GoldFly.prototype.createFlyImage = function () {
        var getDiamond = Laya.loader.getRes("prefab/getDiamond.json");
        var aniDiamond = Laya.Pool.getItemByCreateFun("getDiamond", getDiamond.create, getDiamond);
        aniDiamond.alpha = 0;
        aniDiamond.scale(0, 0);
        aniDiamond.pos(Laya.stage.width / 3 + 30, Laya.stage.height / 3 + 50);
        var numberDiamonds = aniDiamond.getChildByName('numberDiamonds');
        numberDiamonds.value = 'x' + this.num;
        aniDiamond.zOrder = 1100;
        this.addParent.addChild(aniDiamond);
        // Laya.Browser.window.aniDiamond = aniDiamond;
        return aniDiamond;
    };
    GoldFly.prototype.changeIconTexture = function (url) {
        if (url) {
            this.moveObj.texture = Laya.loader.getRes(url);
        }
    };
    GoldFly.prototype.startMove = function () {
        var aniDiamond = this.moveObj;
        // 动画表现
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(aniDiamond, { scaleX: 1, scaleY: 1, alpha: 1 }, 500, Laya.Ease.circInOut, 0)
            .addLabel('move', 0).to(aniDiamond, { x: this.end.x - 10, y: this.end.y + 50, scaleX: 0.5, scaleY: 0.5 }, 700, Laya.Ease.circInOut, 0)
            .addLabel('vanish', 0).to(aniDiamond, { x: this.end.x, y: this.end.y, alpha: 0 }, 500, Laya.Ease.circInOut, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, this.moveEnd);
        timeLine.on(Laya.Event.LABEL, this, this.onLabel);
    };
    GoldFly.prototype.onLabel = function (label) {
        console.log("LabelName:" + label);
    };
    GoldFly.prototype.moveEnd = function () {
        // this.moveObj.destroy();
        this.moveObj.removeSelf();
        Laya.Pool.recover("getDiamond", this.moveObj);
        if (this.action && this.contex) {
            this.action.call(this.contex, this.moveFinishArg);
        }
    };
    return GoldFly;
}());
exports.default = GoldFly;
},{}],35:[function(require,module,exports){
"use strict";
//export module tools {
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * HashMap泛型实现
 */
var HashMap = /** @class */ (function () {
    function HashMap() {
        this._keyList = [];
        this.clear();
    }
    /**
     * 添加键值
     */
    HashMap.prototype.add = function (key, value) {
        var data = { key: key, value: value };
        // console.log('key = ' + key);
        var index = this.getIndexByKey(key);
        if (index !== -1) {
            // 已存在：刷新值
            this._list[index] = data;
        }
        else {
            // 不存在：添加值
            this._list.push(data);
            this.addKey(key);
        }
    };
    /**
     * 添加键值到键值列表
     */
    HashMap.prototype.addKey = function (key) {
        if (this._keyList.indexOf(key) < 0) {
            this._keyList.push(key);
        }
    };
    /**
     * 删除键值
     */
    HashMap.prototype.remove = function (key) {
        var index = this.getIndexByKey(key);
        if (index !== -1) {
            var data = this._list[index];
            this._list.splice(index, 1);
            this.removeKey(key);
            return data;
        }
        return null;
    };
    /**
     * 从键值列表中删除键值
     */
    HashMap.prototype.removeKey = function (key) {
        var index = this._keyList.indexOf(key);
        if (index >= 0) {
            this._keyList.splice(index, 1);
        }
    };
    /**
     * 是否存在键
     */
    HashMap.prototype.has = function (key) {
        var index = this.getIndexByKey(key);
        return index !== -1;
    };
    /**
     * 通过key获取键值value
     * @param key
     */
    HashMap.prototype.get = function (key) {
        var index = this.getIndexByKey(key);
        if (index !== -1) {
            var data = this._list[index];
            return data.value;
        }
        return null;
    };
    /**
     * 获取所有值的集合
     */
    HashMap.prototype.getValueList = function () {
        var valueList = [];
        this.forEach(function (key, value) {
            valueList.push(value);
        });
        return valueList;
    };
    /**
     * 根据属性获取符合的数值列表
     * @param propetyList 属性列表
     */
    HashMap.prototype.getVlaueByProperty = function (propetyList) {
        var valueList = [];
        this.forEach(function (key, value, obj) {
            if (obj.judgeObjectProperty(value, propetyList)) {
                valueList.push(value);
            }
        }, this);
        return valueList;
    };
    HashMap.prototype.judgeObjectProperty = function (obj, propetyList) {
        var propetyNames = Object.getOwnPropertyNames(propetyList);
        for (var index = 0; index < propetyNames.length; index++) {
            var propName = propetyNames[index];
            if (!this.judgeSingleProperty(obj, propName, propetyList[propName])) {
                return false;
            }
        }
        return true;
    };
    HashMap.prototype.judgeSingleProperty = function (obj, proName, proValue) {
        if (!obj.hasOwnProperty(proName) || obj[proName] !== proValue) {
            return false;
        }
        else {
            return true;
        }
    };
    Object.defineProperty(HashMap.prototype, "length", {
        /**
         * 获取数据个数
         */
        get: function () {
            return this._list.length;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 遍历列表，回调(data:KeyValue<K, V>)
     */
    HashMap.prototype.forEachKeyValue = function (f) {
        var count = this._list.length;
        for (var index = 0; index < count; index++) {
            var element = this._list[index];
            f(element);
        }
    };
    /**
     * 遍历列表，回调(K,V)
     */
    HashMap.prototype.forEach = function (f, any) {
        var count = this._list.length;
        for (var index = 0; index < count; index++) {
            var element = this._list[index];
            f(element.key, element.value, any);
        }
    };
    // 通过key获取索引
    HashMap.prototype.getIndexByKey = function (key) {
        var count = this._keyList.indexOf(key);
        return count;
    };
    /**
     * 清空全部
     */
    HashMap.prototype.clear = function () {
        this._list = [];
        this._keyList = [];
    };
    return HashMap;
}());
exports.default = HashMap;
//}
//export default tools;
},{}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tools;
(function (tools) {
    var readZip = /** @class */ (function () {
        function readZip() {
            this.instance = new JSZip();
        }
        readZip.prototype.getInstance = function () {
            if (this.instance) {
                return this.instance;
            }
            else {
                console.log("readZip not have instance");
            }
        };
        readZip.prototype.loadAsync = function (zipLoaded) {
            this.loadAsyncObj = this.instance.loadAsync(zipLoaded);
            return this.loadAsyncObj;
        };
        readZip.prototype.convertToJson = function (data, key) {
            if (!data.RECORDS) {
                console.log("json数据有问题需要查看~", data);
                return;
            }
            var ret = {};
            data.RECORDS.forEach(function (pty) {
                ret[pty[key]] = pty;
            });
            return ret;
        };
        readZip.prototype.judgeIsZip = function (lists) {
            var listIndex0;
            if (lists instanceof Array) {
                listIndex0 = lists[0];
            }
            if (listIndex0.indexOf(".zip") > -1) {
                return true;
            }
            else {
                return false;
            }
        };
        return readZip;
    }());
    tools.readZip = readZip;
})(tools = exports.tools || (exports.tools = {}));
exports.default = tools;
},{}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tools;
(function (tools) {
    /**
     *
     * @param n
     * @param m 第二个随机数不存在的话默认为10
     */
    function random(n, m) {
        if (m === void 0) {
            m = 10;
        }
        var c = m - n + 1;
        return Math.floor(Math.random() * c + n);
    }
    tools.random = random;
    /**
     *
     * @param arr
     * @param count
     * 从数组中随机取出count个数
     */
    function getRandomArrayElements(arr, count) {
        var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;
        while (i-- > min) {
            index = Math.floor((i + 1) * Math.random());
            temp = shuffled[index];
            shuffled[index] = shuffled[i];
            shuffled[i] = temp;
        }
        return shuffled.slice(min);
    }
    tools.getRandomArrayElements = getRandomArrayElements;
    function getArrayDifElements(arr, count) {
        var result = [];
        var i = 0;
        for (i; i < count; i++) {
            var temp = getDiffEle(arr.slice(), result, i);
            result.push(temp);
        }
        return result;
    }
    tools.getArrayDifElements = getArrayDifElements;
    function getDiffEle(arr, result, place) {
        var indexArr = [];
        var i = 0;
        for (i; i < arr.length - place; i++) {
            indexArr.push(i);
        }
        var ranIndex = Math.floor(Math.random() * indexArr.length);
        if (result.indexOf(arr[ranIndex]) === -1) {
            var backNum = arr[ranIndex];
            arr[ranIndex] = arr[indexArr.length - 1];
            return backNum;
        }
        else {
            arr.splice(ranIndex, 1);
            return getDiffEle(arr, result, place);
        }
    }
    tools.getDiffEle = getDiffEle;
    tools.roleDragCan = false;
    function copydata(obj) {
        var ret = {};
        Object.getOwnPropertyNames(obj).forEach(function (name) {
            ret[name] = obj[name];
        });
        return ret;
    }
    tools.copydata = copydata;
    /**
     * 数组复制
     */
    function fillArray(value, len) {
        var arr = [];
        for (var i = 0; i < len; i++) {
            arr.push(value);
        }
        return arr;
    }
    tools.fillArray = fillArray;
    /**
     *
     * @param angle 角度
     * @param XY 必须包含y上的速度
     */
    function speedByAngle(angle, XY) {
        if (angle % 90 === 0 || !angle) {
            console.error("计算的角度异常,需要查看：", angle);
            // debugger
            return;
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.y = XY.y;
        speedXY.x = speedXY.y / Math.tan(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedByAngle = speedByAngle;
    function speedXYByAngle(angle, speed) {
        if (angle % 90 === 0 || !angle) {
            //debugger
        }
        var speedXY = { x: 0, y: 0 };
        speedXY.x = speed * Math.cos(angle * Math.PI / 180);
        speedXY.y = speed * Math.sin(angle * Math.PI / 180);
        return speedXY;
    }
    tools.speedXYByAngle = speedXYByAngle;
    function speedLabelByAngle(angle, speed, speedBate) {
        // if (angle % 90 === 0 || !angle) {
        //     debugger
        // }
        var speedXY = { x: 0, y: 0 };
        var selfAngle = angle;
        var defaultSpeed = speed;
        var bate = speedBate || 1;
        if (selfAngle % 90 === 0) {
            if (selfAngle === 0 || selfAngle === 360) {
                speedXY.x = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 90) {
                speedXY.y = Math.abs(defaultSpeed) * bate;
            }
            else if (selfAngle === 180) {
                speedXY.x = -Math.abs(defaultSpeed) * bate;
            }
            else {
                speedXY.y = -Math.abs(defaultSpeed) * bate;
            }
        }
        else {
            var tempXY = tools.speedXYByAngle(selfAngle, defaultSpeed);
            speedXY.x = tempXY.x;
            speedXY.y = tempXY.y;
            if (selfAngle > 0 && selfAngle < 180) {
                speedXY.y = Math.abs(speedXY.y) * bate;
            }
            else {
                speedXY.y = -Math.abs(speedXY.y) * bate;
            }
            if (selfAngle > 90 && selfAngle < 270) {
                speedXY.x = -Math.abs(speedXY.x) * bate;
            }
            else {
                speedXY.x = Math.abs(speedXY.x) * bate;
            }
        }
        return speedXY;
    }
    tools.speedLabelByAngle = speedLabelByAngle;
    /**
     *
     * @param degree 角度
     * 根据角度计算弧度
     */
    function getRad(degree) {
        return degree / 180 * Math.PI;
    }
    tools.getRad = getRad;
    /**
     * 根据正切计算角度
     */
    function getAngleByTan(value) {
        var result = Math.atan(value) / (Math.PI / 180);
        result = Math.round(result);
        return result;
    }
    tools.getAngleByTan = getAngleByTan;
    /**
     * 求圆上的点的坐标~
     */
    function getRoundPos(angle, radius, centPos) {
        var center = centPos; //圆心坐标
        var radius = radius; //半径
        var hudu = (2 * Math.PI / 360) * angle; //90度角的弧度
        var X = center.x + Math.sin(hudu) * radius; //求出90度角的x坐标
        var Y = center.y - Math.cos(hudu) * radius; //求出90度角的y坐标
        return { x: X, y: Y };
    }
    tools.getRoundPos = getRoundPos;
    /**
     * 转化大的数字
     */
    function converteNum(num) {
        if (typeof (num) !== "number") {
            console.warn("要转化的数字并不为number");
            return num;
        }
        var backNum;
        if (num < 1000) {
            backNum = "" + num;
        }
        else if (num < 1000000) {
            backNum = "" + (num / 1000).toFixed(1) + "k";
        }
        else if (num < 10e8) {
            backNum = "" + (num / 1000000).toFixed(1) + "m";
        }
        else {
            backNum = "" + num;
        }
        return backNum;
    }
    tools.converteNum = converteNum;
    /**
     * 判断两个矩形是否碰撞
     */
    function rectangleCollisions(rec1, rec2) {
        if (rec1.x < rec2.x + rec2.w && rec1.x + rec1.w > rec2.x && rec1.y < rec2.y + rec2.h && rec1.h + rec1.y > rec2.y) {
            return true;
        }
        else {
            return false;
        }
    }
    tools.rectangleCollisions = rectangleCollisions;
    function rectAndRoundCollisions(rect, circle) {
        //矩形上距圆心最近的点
        var closestPoint = { x: 0, y: 0 };
        if (circle.x < rect.x) {
            closestPoint.x = rect.x;
        }
        else if (circle.x > rect.x + rect.w) {
            closestPoint.x = rect.x + rect.w;
        }
        else {
            closestPoint.x = circle.x;
        }
        if (circle.y < rect.y) {
            //圆心在矩形的上方
            closestPoint.y = rect.y;
        }
        else if (circle.y > rect.y + rect.h) {
            //圆心在矩形的下方
            closestPoint.y = rect.y + rect.h;
        }
        else {
            closestPoint.y = circle.y;
        }
        var distance = Math.sqrt(Math.pow(closestPoint.x - circle.x, 2) + Math.pow(closestPoint.y - circle.y, 2));
        if (distance < circle.r) {
            return true;
        }
        else {
            return false;
        }
    }
    tools.rectAndRoundCollisions = rectAndRoundCollisions;
    /**
     *
     * @param circleA
     * @param circleB
     * 两个圆形碰撞
     */
    function roundCollisions(circleA, circleB) {
        if (Math.sqrt(Math.pow(circleA.x - circleB.x, 2) +
            Math.pow(circleA.y - circleB.y, 2))
            < circleA.r + circleB.r) {
            return true;
        }
        else {
            return false;
        }
    }
    tools.roundCollisions = roundCollisions;
})(tools = exports.tools || (exports.tools = {}));
exports.default = tools;
},{}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 部分弹窗上的关闭按钮的缩放效果
 */
var closeTouchEffect = /** @class */ (function (_super) {
    __extends(closeTouchEffect, _super);
    function closeTouchEffect() {
        return _super.call(this) || this;
    }
    closeTouchEffect.prototype.onEnable = function () {
        this.clothBtn = this.owner;
        this.clothBtn.on(Laya.Event.MOUSE_DOWN, this, this.setZoom);
        this.clothBtn.on(Laya.Event.MOUSE_MOVE, this, this.setZoom);
        this.clothBtn.on(Laya.Event.MOUSE_UP, this, this.setBig);
        this.clothBtn.on(Laya.Event.MOUSE_OUT, this, this.setBig);
    };
    closeTouchEffect.prototype.setZoom = function () {
        this.clothBtn.scale(0.9, 0.9);
    };
    closeTouchEffect.prototype.setBig = function () {
        this.clothBtn.scale(1, 1);
    };
    return closeTouchEffect;
}(Laya.Script));
exports.default = closeTouchEffect;
},{}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Playing_var_1 = require("../manage/Playing_var");
var role_1 = require("../role/role");
var MainWeaponData_1 = require("../manage/MainWeaponData");
var BagDataControl_1 = require("../manage/BagDataControl");
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var DataType = JsonEnum_1.default.DataType;
var FixedDataTables = DataTables_1.default.FixedDataTables;
var toast_1 = require("../manage/toast");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var Tool_1 = require("../Tools/Tool");
var Music_1 = require("../manage/Music");
var EquipUpdate = /** @class */ (function (_super) {
    __extends(EquipUpdate, _super);
    function EquipUpdate() {
        var _this = _super.call(this) || this;
        EquipUpdate._instance = _this;
        _this.game = Laya.Browser.window.game;
        return _this;
    }
    EquipUpdate.prototype.onEnable = function () {
        var self = this.owner.getChildAt(0);
        this.tab = self;
        this.bagInstance = BagDataControl_1.default.getInstance();
        this.secondaryWeaponConfig = FixedDataTables.getInstance().getData(DataType.secondaryWeapon);
        self.selectHandler = new Laya.Handler(this, this.onSelect);
        this.updatePanel = this.owner.getChildByName("updatePanel");
        // this.listMain = this.owner.getChildAt(1) as Laya.List;
        // this.listMain.repeatY = 1;
        this.listVice = this.owner.getChildAt(2);
    };
    /**
     *
     * @param b box
     * @param i 0升级火力 1升级速度|威力
     *
     * 升级武器
     */
    EquipUpdate.prototype.onUpdateBtn = function (b, i) {
        var _a;
        Music_1.default.getInstance().playSound(MusicEnum_1.default.musicToUrl.button_normal);
        var nowGoldNum = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(101)).num;
        this.addUpdateEffect(this.tab.selectedIndex);
        if (this.tab.selectedIndex) {
            //升级副武器
            var consumeType = b.consumeType[0];
            var selectSecondData = BagDataControl_1.default.getInstance().getBagDataById(this.game.secondWeapon.selected);
            var haveWeaponNum = selectSecondData.num - b.consume;
            //consumeType === 2消耗自身 =1消耗金币
            var changeArg = { id: 201 || this.game.secondWeapon.selected };
            if (consumeType === 2) {
                if (selectSecondData && selectSecondData.num && selectSecondData.num >= (b.consume + 1)) {
                    if (i === 0) {
                        BagDataControl_1.default.getInstance().setBagData({ id: this.game.secondWeapon.selected.toString(), fire: selectSecondData.fire + 1, num: haveWeaponNum });
                        changeArg["fireLvl"] = SecondWeaponData_1.default.getInstance().getItemFireLevel();
                    }
                    else {
                        BagDataControl_1.default.getInstance().setBagData({ id: this.game.secondWeapon.selected.toString(), power: selectSecondData.power + 1, num: haveWeaponNum });
                        changeArg["powerLvl"] = SecondWeaponData_1.default.getInstance().getItemPowerLevel();
                    }
                    this.dataFillSecondWeapon();
                    this.listVice.refresh();
                    changeArg["num"] = haveWeaponNum;
                }
                else {
                    //前往获得
                    toast_1.default.noBindScript("消耗的服务器的数量不足!");
                }
            }
            else {
                if (nowGoldNum >= b.consume) {
                    if (i === 0) {
                        BagDataControl_1.default.getInstance().setBagData({ id: this.game.secondWeapon.selected.toString(), fire: selectSecondData.fire + 1 });
                        changeArg["fireLvl"] = SecondWeaponData_1.default.getInstance().getItemFireLevel();
                    }
                    else {
                        BagDataControl_1.default.getInstance().setBagData({ id: this.game.secondWeapon.selected.toString(), power: selectSecondData.power + 1 });
                        changeArg["powerLvl"] = SecondWeaponData_1.default.getInstance().getItemPowerLevel();
                    }
                    BagDataControl_1.default.getInstance().setBagData({ id: JSON.stringify(101), num: nowGoldNum - b.consume });
                }
                else {
                    var dec = "消耗的物品数量不足,是否前往获得？";
                    Laya.Scene.open("test/popDialog.scene", false, { "txt": dec, type: 1 });
                }
            }
            this.showUpdatePanel(1);
            toast_1.default.noBindScript("升级成功！");
            var urls = (HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.UpSecondaryWeapon);
            var key = this.game.secondWeapon.selected;
            var args_1 = { uuId: Playing_var_1.default.getInstance().uuId, bagSecondaryWeapon: (_a = {}, _a[key] = changeArg, _a) /*{ [201 || this.game.secondWeapon.selected]: changeArg }*/ };
            console.error("参数打印~！！！~~~~", args_1);
            var httpClass = new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
                //收到回调
                console.error(e);
            }), urls, JSON.stringify(args_1));
        }
        else {
            //升级主武器
            var args;
            if (nowGoldNum >= b.consume) {
                switch (i) {
                    case 0:
                        this.game.mainWeapon.hpLevel++;
                        args = { uuId: Playing_var_1.default.getInstance().uuId, mainWeapon: { hpLvl: this.game.mainWeapon.hpLevel } };
                        break;
                    case 1:
                        this.game.mainWeapon.fireLevel++;
                        args = { uuId: Playing_var_1.default.getInstance().uuId, mainWeapon: { fireLvl: this.game.mainWeapon.fireLevel } };
                        break;
                    case 2:
                        this.game.mainWeapon.speedLevel++;
                        args = { uuId: Playing_var_1.default.getInstance().uuId, mainWeapon: { shotSpeed: this.game.mainWeapon.speedLevel } };
                        break;
                    default:
                        break;
                }
                BagDataControl_1.default.getInstance().setBagData({ id: JSON.stringify(101), num: nowGoldNum - b.consume });
                //this.game.gold -= b.dataSource.consume;
                MainWeaponData_1.default.getInstance().updateMainWeapon();
                // this.listMain.array = this.dataFillFireAndSpeed();
                // this.listMain.refresh();
                //更新界面显示
                this.showUpdatePanel(0);
                var urls = (HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.UpWeapon);
                var httpClass = new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
                    //收到回调
                    console.error(e);
                }), urls, JSON.stringify(args));
                toast_1.default.noBindScript("升级成功!");
            }
            else {
                var dec = "消耗的物品数量不足,是否前往获得？";
                Laya.Scene.open("test/popDialog.scene", false, { "txt": dec, type: 1 });
            }
        }
    };
    EquipUpdate.prototype.getPosition = function () {
        if (!this.vicePos) {
            this.vicePos = this.owner.localToGlobal(new Laya.Point(this.listVice.x, this.listVice.y));
        }
        return this.vicePos;
    };
    EquipUpdate.prototype.propagation = function (e) {
        e.stopPropagation();
    };
    EquipUpdate.prototype.createListVice = function () {
        this.listVice.repeatX = 10;
        this.listVice.repeatY = 1;
        this.listVice.spaceX = 0;
        this.listVice.hScrollBarSkin = "";
        this.listVice.selectEnable = true;
        // this.listVice.selectHandler = new Laya.Handler(this, this.onSelectViceType);
        this.listVice.renderHandler = new Laya.Handler(this, this.updateItemSelectViceType);
        this.listVice.mouseHandler = new Laya.Handler(this, this.onMouseList);
        this.dataFillSecondWeapon();
    };
    EquipUpdate.prototype.onSelectViceType = function (index) {
        //lastObj.skin = "equip/装备框_选中.png";
        var cell = this.listVice.getCell(index);
        if (!cell.dataSource) {
            return;
        }
        if (!cell.dataSource.LevelAndNum) {
            var dec = SecondWeaponData_1.default.getInstance().unlockCondition(cell.dataSource.id);
            toast_1.default.noBindScript(dec);
            return;
        }
        else {
            this.game.secondWeapon.selected = Number(cell.dataSource.id);
            this.showUpdatePanel(1);
        }
        this.maskViceSelect = this.listVice.selectedIndex;
        //刷新武器的显示~
        Playing_var_1.default.getInstance().roleSecondaryEquipType = this.maskViceSelect;
        PlayingSceneControl_1.default.instance.setEquipType(cell.dataSource.id);
        console.log("现在选择的副武器类型为 :", this.maskViceSelect);
    };
    EquipUpdate.prototype.updateItemSelectViceType = function (cell, index) {
        var haveNumObj = cell.getChildByName("label_haveNum");
        var img_lock = cell.getChildByName("img_lock");
        var img_di = cell.getChildByName("btn_di");
        var img_icon = cell.getChildByName("img_icon");
        if (this.game.secondWeapon.selected && cell.dataSource.id === this.game.secondWeapon.selected) {
            //是选中的副武器
            img_di.skin = "face/装备框_选中.png";
            if (cell.dataSource.LevelAndNum.num - 1 > 0) {
                haveNumObj.visible = true;
                haveNumObj.text = JSON.stringify(cell.dataSource.LevelAndNum.num - 1);
            }
            else {
                haveNumObj.visible = false;
            }
            img_lock.visible = false;
            img_di.visible = true;
        }
        else if (cell.dataSource.LevelAndNum && cell.dataSource.LevelAndNum.num) {
            img_di.skin = "face/装备框.png";
            img_di.visible = true;
            haveNumObj.visible = false;
            img_lock.visible = false;
        }
        else {
            img_di.skin = "face/装备框_灰.png";
            img_di.visible = false;
            haveNumObj.visible = false;
            img_lock.visible = true;
        }
        img_icon.skin = "shop/" + cell.dataSource.icon + ".png";
    };
    EquipUpdate.prototype.createListMain = function () {
        //List相关
        var list = this.listMain;
        list.repeatX = 1;
        list.repeatY = 2;
        list.spaceY = 2;
        // 使用但隐藏滚动条
        list.vScrollBarSkin = "";
        list.selectEnable = true;
        list.selectHandler = new Laya.Handler(this, this.onSelectList);
        list.renderHandler = new Laya.Handler(this, this.updateItem);
        list.array = this.dataFillFireAndSpeed();
    };
    /**
     * 副武器list数据填充
     */
    EquipUpdate.prototype.dataFillSecondWeapon = function () {
        var secondaryWeaponKeys = Object.keys(this.secondaryWeaponConfig);
        secondaryWeaponKeys.sort(function (a, b) {
            var b_value = BagDataControl_1.default.getInstance().getBagDataById(b.toString());
            var a_value = BagDataControl_1.default.getInstance().getBagDataById(a.toString());
            if (!a_value) {
                return 1;
            }
            if (!b_value) {
                return -1;
            }
            var b_value_num = b_value.num;
            var a_value_num = a_value.num;
            if (a_value_num && !b_value_num) {
                return -1;
            }
            else if (!a_value_num && b_value_num) {
                return 1;
            }
            return -1;
        });
        var data = [];
        for (var m = 0; m < secondaryWeaponKeys.length; m++) {
            var oneJson = { id: 0, LevelAndNum: 0, icon: "" };
            oneJson.id = Number(secondaryWeaponKeys[m]);
            oneJson.LevelAndNum = BagDataControl_1.default.getInstance().getBagDataById(oneJson.id.toString()) || 0;
            oneJson.icon = FixedDataTables.getInstance().getDataByKey(DataType.secondaryWeapon, oneJson.id, "pic") + "_shop";
            data.push(oneJson);
        }
        this.listVice.array = data;
    };
    /**
     * 火力和速度的数据填充
     */
    EquipUpdate.prototype.dataFillFireAndSpeed = function () {
        var data = [];
        for (var m = 0; m < 2; m++) {
            var map;
            if (m) {
                //速度|威力
                if (this.tab.selectedIndex) {
                    //副武器
                    map = { typeUrl: "face/射速.png", consume: SecondWeaponData_1.default.getInstance().getspeed_cost() };
                    map.level = SecondWeaponData_1.default.getInstance().getItemPowerLevel();
                    map.value = SecondWeaponData_1.default.getInstance().getShowPower();
                    map.consumeType = SecondWeaponData_1.default.getInstance().getCostType();
                }
                else {
                    console.log(this.game.mainWeapon.speedLevel);
                    map = { typeUrl: "face/射速.png", level: this.game.mainWeapon.speedLevel, consume: MainWeaponData_1.default.getInstance().speed_gold };
                    map.value = MainWeaponData_1.default.getInstance().getShowSpeed();
                }
            }
            else {
                //火力
                if (this.tab.selectedIndex) {
                    //副武器
                    map = { typeUrl: "face/火力.png", value: SecondWeaponData_1.default.getInstance().getItemFireLevel(), consume: SecondWeaponData_1.default.getInstance().getFire_cost() };
                    map.level = SecondWeaponData_1.default.getInstance().getItemFireLevel();
                    map.value = SecondWeaponData_1.default.getInstance().getShowFire();
                    map.consumeType = SecondWeaponData_1.default.getInstance().getCostType();
                }
                else {
                    map = { typeUrl: "face/火力.png", level: this.game.mainWeapon.fireLevel, consume: MainWeaponData_1.default.getInstance().fire_gold };
                    map.value = MainWeaponData_1.default.getInstance().getShowFire();
                }
            }
            data.push(map);
        }
        return data;
    };
    EquipUpdate.prototype.showUpdatePanel = function (type) {
        if (!this.game.secondWeapon.selected && type === 1) {
            return;
        }
        var itemSprite;
        var createNum = type === 0 ? 3 : 2;
        var itemPrefab = PlayingSceneControl_1.default.instance.UpdateItem;
        if (!this.updatePanel.numChildren) {
            var i = 0;
            for (i; i < createNum; i++) {
                itemSprite = Laya.Pool.getItemByCreateFun("updateItem", itemPrefab.create, itemPrefab);
                itemSprite.pos(-3, 558 + 100 * i);
                this.setItemInfo(type, i, itemSprite);
                this.updatePanel.addChild(itemSprite);
            }
        }
        else {
            var i = 0;
            for (i; i < createNum; i++) {
                if (i >= this.updatePanel.numChildren) {
                    itemSprite = Laya.Pool.getItemByCreateFun("updateItem", itemPrefab.create, itemPrefab);
                    itemSprite.pos(-3, 558 + 100 * i);
                    this.updatePanel.addChild(itemSprite);
                }
                else {
                    itemSprite = this.updatePanel._children[i];
                    itemSprite.visible = true;
                }
                this.setItemInfo(type, i, itemSprite);
            }
        }
        Laya.Browser.window.updatePanel = this.updatePanel;
        if (type !== 0) {
            this.updatePanel.y = -872 /*98*/;
            this.updatePanel.numChildren > 2 && (this.updatePanel._children[this.updatePanel.numChildren - 1].visible = false);
        }
        else {
            this.updatePanel.y = -872 - 1 - 98;
        }
    };
    EquipUpdate.prototype.setItemInfo = function (type, index, obj) {
        var sendArgObj = {};
        //等级
        var fc_level = obj.getChildByName("fc_level");
        //数值
        var itemValue = obj.getChildByName("itemValue");
        //货币图标
        var consumeIcon = obj.getChildByName("consumeIcon");
        //升级需要的值
        var fc_consumeNum = obj.getChildByName("fc_consumeNum");
        //升级的属性
        var img_updateIcon = obj.getChildByName("img_updateIcon");
        //升级需要的货币的图标
        consumeIcon.skin = "commonPic/金币图标.png";
        consumeIcon.scale(1, 1);
        switch (index) {
            case 0:
                if (type === 0) {
                    //飞机的血
                    fc_level.value = "[" + this.game.mainWeapon.hpLevel + "]";
                    itemValue.value = "" + MainWeaponData_1.default.getInstance().getShowHp();
                    img_updateIcon.skin = "face/生命.png"; //hp属性图标
                    fc_consumeNum.value = "" + Tool_1.tools.converteNum(MainWeaponData_1.default.getInstance().hp_gold);
                    sendArgObj["consume"] = MainWeaponData_1.default.getInstance().hp_gold;
                }
                else {
                    fc_level.value = "[" + SecondWeaponData_1.default.getInstance().getItemFireLevel() + "]";
                    itemValue.value = "" + SecondWeaponData_1.default.getInstance().getShowFire();
                    img_updateIcon.skin = "face/火力.png";
                    fc_consumeNum.value = "" + Tool_1.tools.converteNum(SecondWeaponData_1.default.getInstance().getFire_cost());
                    sendArgObj["consume"] = SecondWeaponData_1.default.getInstance().getFire_cost();
                    sendArgObj["consumeType"] = SecondWeaponData_1.default.getInstance().getCostType();
                    //变成实际的副武器的图标
                    var moneyIcon = FixedDataTables.getInstance().getDataByKey(DataType.secondaryWeapon, this.game.secondWeapon.selected, "pic") + "_shop";
                    consumeIcon.skin = "shop/" + moneyIcon + ".png";
                    Laya.Browser.window.consumeIcon = consumeIcon;
                    consumeIcon.scale(0.45, 0.45);
                }
                break;
            case 1:
                if (type === 0) {
                    fc_level.value = "[" + this.game.mainWeapon.fireLevel + "]";
                    itemValue.value = "" + MainWeaponData_1.default.getInstance().getShowFire();
                    img_updateIcon.skin = "face/火力.png";
                    fc_consumeNum.value = "" + Tool_1.tools.converteNum(MainWeaponData_1.default.getInstance().fire_gold);
                    consumeIcon.skin = "commonPic/金币图标.png";
                    sendArgObj["consume"] = MainWeaponData_1.default.getInstance().fire_gold;
                }
                else {
                    fc_level.value = "[" + SecondWeaponData_1.default.getInstance().getItemPowerLevel() + "]";
                    itemValue.value = "" + SecondWeaponData_1.default.getInstance().getShowPower();
                    img_updateIcon.skin = "face/射速.png";
                    fc_consumeNum.value = "" + Tool_1.tools.converteNum(SecondWeaponData_1.default.getInstance().getspeed_cost());
                    //变成实际的副武器的图标
                    var moneyIcon = FixedDataTables.getInstance().getDataByKey(DataType.secondaryWeapon, this.game.secondWeapon.selected, "pic") + "_shop";
                    consumeIcon.skin = "shop/" + moneyIcon + ".png";
                    consumeIcon.scale(0.45, 0.45);
                    sendArgObj["consume"] = SecondWeaponData_1.default.getInstance().getspeed_cost();
                    sendArgObj["consumeType"] = SecondWeaponData_1.default.getInstance().getCostType();
                }
                break;
            case 2:
                fc_level.value = "[" + this.game.mainWeapon.speedLevel + "]";
                itemValue.value = "" + MainWeaponData_1.default.getInstance().getShowSpeed();
                img_updateIcon.skin = "face/射速.png";
                fc_consumeNum.value = "" + Tool_1.tools.converteNum(MainWeaponData_1.default.getInstance().speed_gold);
                consumeIcon.skin = "commonPic/金币图标.png";
                sendArgObj["consume"] = MainWeaponData_1.default.getInstance().speed_gold;
                break;
            default:
                break;
        }
        if (Number(itemValue.value) >= 10000) {
            itemValue.value = "" + 9999;
        }
        if (fc_consumeNum.value.length >= 6) {
            fc_consumeNum.scale(0.8, 0.8);
        }
        else {
            fc_consumeNum.scale(1, 1);
        }
        //监听升级按钮
        var updateBtn = obj.getChildByName("btn_update");
        updateBtn.on(Laya.Event.CLICK, this, this.onUpdateBtn, [sendArgObj, index]);
    };
    EquipUpdate.prototype.onSelect = function (index) {
        Music_1.default.getInstance().playSound(MusicEnum_1.default.musicToUrl.button_normal);
        index !== 2 && index !== -1 && role_1.default.instance.moveRoleInMain("up");
        this._alreadySelected = true;
        switch (index) {
            case 0:
                //准备重新中
                this.showUpdatePanel(index);
                //主武器
                this.updatePanel.visible = true;
                this.listVice.visible = false;
                break;
                if (!this.listMain.length) {
                    this.createListMain();
                }
                else {
                    this.listMain.array = this.dataFillFireAndSpeed();
                    this.listMain.refresh();
                }
                Laya.Browser.window.listMain = this.listMain;
                break;
            case 1:
                //重写
                this.showUpdatePanel(index);
                //副武器
                this.updatePanel.visible = true;
                this.listVice.visible = true;
                if (!this.listVice.length) {
                    this.createListVice();
                }
                else {
                    this.dataFillSecondWeapon();
                    this.listVice.refresh();
                }
                // if (!this.game.secondWeapon.selected) {
                //     this.updatePanel.visible = false;
                // }
                break;
            case 2:
                PlayingSceneControl_1.default.instance.playMusicAndSound(1, musicToUrl.button_normal);
                Laya.Scene.open("test/Set.scene", false);
                console.error("点击了副武器~~!~~~");
                break;
            default:
                break;
        }
        this.owner.getChildByName("render")["x"] = -3.1;
    };
    EquipUpdate.prototype.updateItem = function (cell, index) {
        //cell.setImg(cell.dataSource);
        //if (this.tab.selectedIndex === 0) {
        cell.getChildByName("img_updateIcon").skin = cell.dataSource.typeUrl;
        cell.getChildByName("fc_level").value = "[" + cell.dataSource.level + "]";
        cell.getChildByName("fc_consumeNum").value = cell.dataSource.consume;
        cell.getChildByName("itemValue").value = cell.dataSource.value;
        var consumeIconObj = cell.getChildByName("consumeIcon");
        Laya.Browser.window.consumeIcon = consumeIconObj;
        if (this.tab.selectedIndex === 1) {
            // consumeIconObj.skin = "equip/主武器_机炮0.png";
            consumeIconObj.skin = "commonPic/金币图标.png";
            consumeIconObj.scaleX = 1;
            consumeIconObj.scaleY = 1;
        }
        else {
            consumeIconObj.skin = "commonPic/金币图标.png";
            consumeIconObj.scaleX = 1;
            consumeIconObj.scaleY = 1;
        }
        var enough = this.isEnough(this.tab.selectedIndex, cell.dataSource.consume);
        if (enough) {
        }
        else {
            //消耗数量需要变红~
        }
    };
    /**
     * 升级消耗的物品是否足够
     * @param type 1消耗金币 2消耗武器升级
     */
    EquipUpdate.prototype.isEnough = function (type, consume) {
        var enough = true;
        switch (type) {
            case 1:
                enough = BagDataControl_1.default.getInstance().getBagDataById("101").num > consume;
                break;
            case 2:
                var secondId = this.game.secondWeapon.selected;
                enough = this.game.consume <= (BagDataControl_1.default.getInstance().getBagDataById(secondId) ? BagDataControl_1.default.getInstance().getBagDataById(secondId).num - 1 : 0);
                break;
            default:
                break;
        }
        return enough;
    };
    EquipUpdate.prototype.onSelectList = function (index) {
        this._alreadySelected = true;
    };
    EquipUpdate.prototype.onMouseList = function (e, index) {
        //console.log(e.type);
        var lastObj = e.target;
        switch (e.type) {
            case Laya.Event.MOUSE_DOWN:
                Laya.timer.clear(this, this.createDetail);
                this.touchStart = true;
                Laya.timer.once(350, this, this.createDetail, [index]);
                break;
            case Laya.Event.MOUSE_UP:
                Laya.timer.clear(this, this.createDetail);
                this.cancelDetail();
                break;
            case Laya.Event.MOUSE_OUT:
                Laya.timer.clear(this, this.createDetail);
                this.cancelDetail();
                break;
            case Laya.Event.CLICK:
                // console.error("点击item", e);
                Music_1.default.getInstance().playSound(MusicEnum_1.default.musicToUrl.button_normal);
                this.onSelectViceType(index);
                break;
            default:
                break;
        }
    };
    EquipUpdate.prototype.createDetail = function (index) {
        if (this.touchStart) {
            var cell = this.listVice.getCell(index);
            var detail = PlayingSceneControl_1.default.instance.ItemDetail;
            var detailObj = Laya.Pool.getItemByCreateFun("ItemDetail", detail.create, detail);
            var secondId = cell.dataSource.id;
            var configs = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.secondaryWeapon, secondId);
            detailObj["detailDec"] = configs.dec;
            detailObj["detailIcon"] = "shop/" + configs.pic + "_shop.png";
            detailObj["detailName"] = configs.name;
            detailObj.pos(Laya.stage.width / 2, Laya.stage.height * 0.57);
            Laya.stage.addChild(detailObj);
            this.detailObj = detailObj;
        }
    };
    EquipUpdate.prototype.cancelDetail = function () {
        if (this.detailObj) {
            this.detailObj.removeSelf();
            this.detailObj = null;
            this.touchStart = false;
        }
    };
    EquipUpdate.instance = function () {
        return EquipUpdate._instance;
    };
    EquipUpdate.prototype.hideAllList = function () {
        role_1.default.instance.moveRoleInMain("down");
        if (this.updatePanel) {
            this.updatePanel.visible = false;
        }
        if (this.listVice) {
            this.listVice.visible = false;
        }
        this.tab.selectedIndex = -1;
        PlayingSceneControl_1.default.instance.clearResUrl(["face/装备信息底条.png"], false);
    };
    EquipUpdate.prototype.listVisile = function () {
        return this.updatePanel._children.length && (this.updatePanel.visible || this.listVice.visible);
    };
    Object.defineProperty(EquipUpdate.prototype, "alreadySelected", {
        get: function () {
            return this._alreadySelected;
        },
        set: function (v) {
            this._alreadySelected = v;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 判断副武器是否有
     */
    EquipUpdate.prototype.judgeSecondWeaponHave = function () {
        var config = this.secondaryWeaponConfig;
        var i;
        for (i in config) {
            if (this.bagInstance.hasId(i)) {
                return true;
            }
        }
        return false;
    };
    /**
     *
     * @param type 升级副武器还是主武器
     * 增加升级武器得特效
     */
    EquipUpdate.prototype.addUpdateEffect = function (type) {
        //升级武器的特效暂时屏蔽
        return;
        if (type) {
            var posJson = { 0: { x: -39, y: 54 }, 1: { x: 157, y: 54 } };
            for (var i = 0; i < 2; i++) {
                var aniObj = this.getUpdateWeaponObj();
                aniObj.pos(posJson[i].x, posJson[i].y);
                PlayingSceneControl_1.default.instance.secondRoleObj.addChild(aniObj);
            }
        }
        else {
            var aniObj = this.getUpdateWeaponObj();
            aniObj.pos(65, 0);
            PlayingSceneControl_1.default.instance.roleObj.addChild(aniObj);
        }
    };
    EquipUpdate.prototype.getUpdateWeaponObj = function () {
        var prefab = PlayingSceneControl_1.default.instance.UpdateWeapon;
        var aniObj = Laya.Pool.getItemByCreateFun("UpdateWeapon", prefab.create, prefab);
        return aniObj;
    };
    return EquipUpdate;
}(Laya.Script));
exports.default = EquipUpdate;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../Tools/Tool":37,"../manage/BagDataControl":41,"../manage/MainWeaponData":52,"../manage/Music":53,"../manage/Playing_var":55,"../manage/SecondWeaponData":56,"../manage/toast":59,"../playing/PlayingSceneControl":65,"../role/role":79}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AdaptScene = /** @class */ (function () {
    function AdaptScene() {
    }
    AdaptScene.getInstance = function () {
        if (!AdaptScene._instance) {
            AdaptScene._instance = new AdaptScene();
        }
        return AdaptScene._instance;
    };
    AdaptScene.prototype.setSceneAdaptHeight = function () {
        var childrens = Laya.Scene.root._children;
        if (!childrens.length) {
            return;
        }
        var i = 0;
        for (i; i < childrens.length; i++) {
            childrens[0].height = Laya.stage.height;
        }
    };
    /**
     * 适配bg留空 中间适配
     */
    AdaptScene.prototype.setBg = function (image) {
        if (image.height && image.height !== Laya.stage.height) {
            var s_height = Laya.stage.height;
            var i_height = image.height;
            image.y = -(s_height - i_height) / 2;
            image.height = s_height;
        }
    };
    AdaptScene.prototype.setBG_top = function (img) {
        if (img && img.height && img.height !== Laya.stage.height) {
            img.height = Laya.stage.height;
        }
    };
    return AdaptScene;
}());
exports.default = AdaptScene;
},{}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HashMap_1 = require("../Tools/HashMap");
var Playing_var_1 = require("../manage/Playing_var");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var BagDataControl = /** @class */ (function () {
    function BagDataControl() {
        this.game = Laya.Browser.window.game;
        //this.initBagData();
        // Laya.Browser.window.bagList = this.bagList;
    }
    BagDataControl.getInstance = function () {
        if (!BagDataControl._instance) {
            BagDataControl._instance = new BagDataControl();
        }
        return BagDataControl._instance;
    };
    BagDataControl.prototype.initBagData = function (data) {
        if (!this.bagList) {
            this.bagList = new HashMap_1.default();
            Laya.Browser.window.bagList = this.bagList;
            //都是临时的  正式会从服务器取值
            // const key: string = JSON.stringify(202);
            // const value: any = { fire: 1, power: 1, num: 3 };
            // this.bagList.add(key, value);
            // this.bagList.add("201", { fire: 1, power: 1, num: 3 });
            // this.bagList.add("203", { fire: 1, power: 1, num: 3 });
            var i = void 0;
            //金币 体力数据初始化
            if (data.bagSecondaryWeapon) {
                for (i in data.bagSecondaryWeapon) {
                    this.bagList.add(/*"208"||*/ i, { fire: data.bagSecondaryWeapon[i].fireLvl, power: data.bagSecondaryWeapon[i].powerLvl, num: data.bagSecondaryWeapon[i].num });
                }
            }
            this.updateBagCommon(data);
        }
        // const itemData = FixedDataTables.getInstance().getData(DataType.item);
        // this.bagList.add("102", { num: Number(itemData[102].first) });
        // this.bagList.add("103", { num: Number(itemData[103].first) });
        // this.bagList.add("101", { num: Number(itemData[101].first) });
        // this.game.gold = Number(itemData[101].first);
    };
    BagDataControl.prototype.updateBagCommon = function (data) {
        if (data.bagCommon) {
            var i = void 0;
            for (i in data.bagCommon) {
                this.bagList.add(i, { num: data.bagCommon[i].num });
            }
            if (data.bagCommon[101]) {
                this.game.gold = data.bagCommon[101].num;
            }
        }
    };
    BagDataControl.prototype.getBagDataById = function (id) {
        return this.bagList.get(typeof (id) === "string" ? id : JSON.stringify(id));
    };
    /**
     *
     * @param e
     * 更新背包新  根据最新后端在小模块中返回的数据来返回
     */
    BagDataControl.prototype.updateBagDate_new = function (e) {
        var bagArr = [];
        if (e.bagCommon) {
            var bagCommon = JSON.parse(e.bagCommon);
            var i = void 0;
            for (i in bagCommon) {
                bagArr.push(bagCommon[i]);
            }
            this.setAnimationConsumePower(bagCommon[103]);
            PlayingSceneControl_1.default.instance.setMoneyData();
        }
        if (e.bagSecondaryWeapon) {
            var bagSecondaryWeapon = JSON.parse(e.bagSecondaryWeapon);
            var j = void 0;
            for (j in bagSecondaryWeapon) {
                bagArr.push(bagSecondaryWeapon[j]);
            }
        }
        if (e.achieve) {
            //更新成就数据
            Playing_var_1.default.getInstance().updateAchieve(JSON.parse(e.achieve));
        }
        this.setBagData(bagArr);
    };
    BagDataControl.prototype.setBagData = function (data) {
        var moneyArr = ["101", "103", "102"];
        var needUpdateMoney = false;
        if (Array.isArray(data)) {
            var i = 0;
            for (i; i < data.length; i++) {
                var id = data[i].id.toString();
                if (!this.bagList.has(id)) {
                    this.bagList.add(id, { fire: 1, power: 1, num: data[i].num || 1 });
                }
                else {
                    var dataOne = this.bagList.get(id);
                    var j = void 0;
                    for (j in data[i]) {
                        if (j == "id") {
                            if (moneyArr.indexOf(data[i][j].toString()) >= 0) {
                                needUpdateMoney = true;
                            }
                            continue;
                        }
                        if (j === "fireLvl" || j === "powerLvl") {
                            var jsonTo = { fireLvl: "fire", powerLvl: "power" };
                            dataOne[jsonTo[j]] = data[i][j];
                        }
                        else {
                            dataOne[j] = data[i][j];
                        }
                    }
                }
            }
        }
        else {
            if (!data.id) {
                console.error("修改Bag信息失败~！");
                return;
            }
            var id = data.id.toString();
            if (!this.bagList.has(id)) {
                this.bagList.add(id, { fire: 1, power: 1, num: 1 });
            }
            else {
                var dataOne = this.bagList.get(id);
                if (dataOne) {
                    var i = void 0;
                    for (i in data) {
                        if (i == "id") {
                            if (moneyArr.indexOf(data[i].toString()) >= 0) {
                                needUpdateMoney = true;
                            }
                            continue;
                        }
                        if (i === "fireLvl" || i === "powerLvl") {
                            var jsonTo = { fireLvl: "fire", powerLvl: "power" };
                            dataOne[jsonTo[i]] = data[i];
                        }
                        else {
                            dataOne[i] = data[i];
                        }
                    }
                }
            }
        }
        if (needUpdateMoney) {
            PlayingSceneControl_1.default.instance.setMoneyData();
        }
    };
    BagDataControl.prototype.deleteBagData = function (id) {
        if (Array.isArray(id)) {
        }
        else {
            if (this.hasId(id)) {
                this.bagList.remove(id);
            }
        }
    };
    BagDataControl.prototype.hasId = function (id) {
        return this.bagList.has(id);
    };
    BagDataControl.prototype.setAnimationConsumePower = function (data) {
        var lastNum = this.getBagDataById("103").num;
        if ((data === void 0) || (data && Number(data.num) === lastNum)) {
            return;
        }
        var plusValue = Number(data.num) - lastNum;
        if (plusValue >= 0) {
            return;
        }
        var plussValueStr = plusValue > 0 ? "+" + plusValue : JSON.stringify(plusValue);
        var powerImg = new Laya.Image("commonPic/体力图标.png");
        var mainPowerImg = PlayingSceneControl_1.default.instance.owner["img_mainPower"];
        powerImg.pos(mainPowerImg.x + mainPowerImg.parent["x"], mainPowerImg.y + mainPowerImg.parent["y"]);
        powerImg.zOrder = 2000;
        Laya.stage.addChild(powerImg);
        var roleObj = PlayingSceneControl_1.default.instance.roleObj;
        Laya.Tween.to(powerImg, { x: roleObj.x + 100, y: roleObj.y }, 1000, null, Laya.Handler.create(this, this.createConsumePower, [powerImg, plussValueStr]));
    };
    BagDataControl.prototype.createConsumePower = function (imgObj, plussValueStr) {
        Laya.Tween.clearAll(imgObj);
        imgObj.destroy();
        var diamondPreab = PlayingSceneControl_1.default.instance.getDiamond;
        var aniDiamond = Laya.Pool.getItemByCreateFun("getDiamond", diamondPreab.create, diamondPreab);
        aniDiamond.texture = Laya.loader.getRes("commonPic/体力图标.png");
        aniDiamond.alpha = 1;
        aniDiamond.scale(1, 1);
        // 数量显示
        var numberDiamonds = aniDiamond.getChildByName('numberDiamonds');
        numberDiamonds.visible = false;
        var reduceObj = aniDiamond.getChildByName("reduceNumber");
        reduceObj.visible = true;
        reduceObj.value = plussValueStr;
        console.error("消耗的体力值为: ", plussValueStr);
        var roleObj = PlayingSceneControl_1.default.instance.roleObj;
        aniDiamond.pos(roleObj.x, roleObj.y - 100);
        aniDiamond.zOrder = 2000;
        Laya.stage.addChild(aniDiamond);
        var timeline = new Laya.TimeLine();
        timeline.addLabel("move", 0).to(aniDiamond, { y: aniDiamond.y - 80 }, 1000, null, 0).addLabel("changeAlpha", 900).to(aniDiamond, { alpha: 0 }, 500, null, 0);
        timeline.play("move", true);
        timeline.on(Laya.Event.COMPLETE, this, this.moveEnd, [aniDiamond, timeline]);
        //timeline.on(Laya.Event.LABEL, this, this.onLabel);
    };
    BagDataControl.prototype.moveEnd = function (aniObj, timeObj) {
        timeObj.destroy();
        Laya.timer.frameOnce(3, this, function () {
            aniObj.destroy();
        });
    };
    return BagDataControl;
}());
exports.default = BagDataControl;
},{"../Tools/HashMap":35,"../manage/Playing_var":55,"../playing/PlayingSceneControl":65}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var manage;
(function (manage) {
    var BitmapFont = Laya.BitmapFont;
    var LYHandler = Laya.Handler;
    var Text = Laya.Text;
    var BitmapManage = /** @class */ (function (_super) {
        __extends(BitmapManage, _super);
        /**
         *
         * @param url fnt路径
         * @param name fntname
         * @param hander 回调
         */
        function BitmapManage(url, name, hander) {
            var _this = _super.call(this) || this;
            _this.loadFont(url, LYHandler.create(_this, _this.loaded, [name, hander]));
            return _this;
        }
        BitmapManage.prototype.loaded = function (arg1, arg2) {
            Text.registerBitmapFont(arg1, this);
            if (arg2) {
                arg2.run();
            }
        };
        return BitmapManage;
    }(BitmapFont));
    manage.BitmapManage = BitmapManage;
})(manage || (manage = {}));
exports.default = manage;
},{}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 弹出的界面的Dialog的效果
 */
var DialogEffect = /** @class */ (function () {
    function DialogEffect(dia) {
        if (!dia) {
            console.error("发生错误~！");
            debugger;
        }
        this.dialogObject = dia;
        this.init();
    }
    DialogEffect.prototype.init = function () {
        var owner = this.dialogObject;
        owner.x = -Laya.stage.width - 50;
        owner.y = Laya.stage.height / 2;
        owner.alpha = 0;
        this.popupAnimation();
    };
    //弹出动画
    DialogEffect.prototype.popupAnimation = function () {
        var owner = this.dialogObject;
        Laya.Tween.to(owner, { x: Laya.stage.width / 2, y: Laya.stage.height / 2, alpha: 1 }, 200, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
        }, []), 0);
    };
    DialogEffect.prototype.removeAnimation = function (handler) {
        this.compelete = handler;
        var owner = this.dialogObject;
        Laya.Tween.to(owner, { x: -Laya.stage.width / 2, y: Laya.stage.height / 2, alpha: 0 }, 100, Laya.Ease.circIn, Laya.Handler.create(this, this.destroyAnimation, []), 0);
    };
    //移除动画
    DialogEffect.prototype.destroyAnimation = function () {
        Laya.Tween.clearAll(this.dialogObject);
        this.compelete.run();
    };
    return DialogEffect;
}());
exports.default = DialogEffect;
},{}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var DataType = JsonEnum_1.default.DataType;
var Tool_1 = require("../Tools/Tool");
var BagDataControl_1 = require("./BagDataControl");
var Playing_var_1 = require("./Playing_var");
var toast_1 = require("./toast");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var HttpEnum_1 = require("../Connect/HttpEnum");
var HttpClass_1 = require("../Connect/HttpClass");
var EndlessBuyItem = /** @class */ (function (_super) {
    __extends(EndlessBuyItem, _super);
    function EndlessBuyItem() {
        return _super.call(this) || this;
    }
    EndlessBuyItem.prototype.onEnable = function () {
        this.self = this.owner;
        this.self.getChildByName("bg").on(Laya.Event.CLICK, this, this.stopThrough);
        this.markList = this.self.getChildByName("render");
        this.markList.renderHandler = new Laya.Handler(this, this.updateItem);
        this.self.getChildByName("goBtn").on(Laya.Event.CLICK, this, this.startGame);
        this.initData();
    };
    EndlessBuyItem.prototype.stopThrough = function (e) {
        e.stopPropagation();
    };
    EndlessBuyItem.prototype.initData = function () {
        var arr = [];
        var ids = [104, 105];
        var dataObj = FixedDataTables.getInstance();
        var i = 0;
        for (i; i < ids.length; i++) {
            var dataJson = {};
            var oneJson = dataObj.getData(DataType.item, ids[i]);
            var consumeArr = oneJson.price.split("|");
            var consumeNum = Number(consumeArr[1]);
            dataJson["itemId"] = ids[i];
            dataJson["icon"] = oneJson["icon"];
            dataJson["consume"] = consumeNum;
            dataJson["fc_consume"] = Tool_1.tools.converteNum(consumeNum);
            var dataItemJson = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(ids[i]));
            if (dataItemJson) {
                dataJson["fc_itemNum"] = dataItemJson.num;
            }
            else {
                dataJson["fc_itemNum"] = 0;
            }
            arr.push(dataJson);
        }
        this.markList.array = arr;
    };
    EndlessBuyItem.prototype.updateItem = function (cell, index) {
        cell.getChildByName("icon").skin = "endLess/" + cell.dataSource.icon + ".png";
        cell.getChildByName("fc_consume").value = cell.dataSource.fc_consume;
        cell.getChildByName("fc_itemNum").value = cell.dataSource.fc_itemNum;
        var buyBtn = (cell.getChildByName("btnBuy"));
        buyBtn.on(Laya.Event.CLICK, this, this.buyItem, [cell.dataSource.itemId, cell.dataSource.consume]);
    };
    EndlessBuyItem.prototype.startGame = function () {
        this.self.visible = false;
        Playing_var_1.default.getInstance().gameModel = "endless";
        PlayingSceneControl_1.default.instance.judgeLoadFinish();
    };
    EndlessBuyItem.prototype.buyItem = function (itemId, consume) {
        var _this = this;
        var diamondNum = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(102));
        if (!diamondNum || diamondNum.num < consume) {
            toast_1.default.noBindScript("钻石不足！");
            return;
        }
        //showLoading
        Laya.Scene.showLoadingPage();
        var data = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(itemId));
        var startNum = data ? BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(itemId)).num : 0;
        var urls = (HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.ShopItem);
        var args = { uuId: Playing_var_1.default.getInstance().uuId, itemID: itemId, itemNum: startNum + 1 };
        var httpClass = new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
            //收到回调
            //console.error(e);
            BagDataControl_1.default.getInstance().updateBagDate_new(e);
            _this.updateListData(itemId);
            _this.markList.refresh();
            Laya.Scene.hideLoadingPage();
        }), urls, JSON.stringify(args));
    };
    EndlessBuyItem.prototype.updateListData = function (itemId) {
        var arr = this.markList.array;
        var i = 0;
        for (i; i < arr.length; i++) {
            var id = arr[i]["itemId"];
            if (id == itemId) {
                arr[i]["fc_itemNum"] = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(itemId)).num;
                break;
            }
        }
    };
    return EndlessBuyItem;
}(Laya.Script));
exports.default = EndlessBuyItem;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"./BagDataControl":41,"./Playing_var":55,"./toast":59}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var EndlessParseSkill_1 = require("./EndlessParseSkill");
var EndlessManage_1 = require("./EndlessManage");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var EndlessChooseSkills = /** @class */ (function (_super) {
    __extends(EndlessChooseSkills, _super);
    function EndlessChooseSkills() {
        var _this = _super.call(this) || this;
        /**出现开关*/
        _this.appearSwitch = true;
        /**翻页动画开关*/
        _this.pageTurnSwitch = false;
        /**记录当前触摸的cell*/
        _this.presentCell = null;
        /**记录当前触摸的cell索引值*/
        _this.presentCellIndex = null;
        _this.vanishSwitch = false;
        _this.press = false;
        return _this;
    }
    EndlessChooseSkills.prototype.onEnable = function () {
        this.numberOfSkills();
        Laya.timer.pause();
    };
    EndlessChooseSkills.prototype.numberOfSkills = function () {
        // 拿到当前随机到的三个技能id，如果为null则不加载这个场景
        this.randomSkills = EndlessParseSkill_1.default.getInstance().getRandomUpgradeSkills();
        if (this.randomSkills.length !== 0) {
            this.initScene();
            this.listInit();
        }
        else {
            return;
        }
    };
    /**场景初始化*/
    EndlessChooseSkills.prototype.initScene = function () {
        this.self = this.owner;
        this.contentSet = this.owner.getChildByName('contentSet');
        this.background = this.owner.getChildByName('background');
        this.contentSet.x = -800;
        this.self.pos(0, 0);
        //列表
        this.list = this.self['m_list'];
        this.list.repeatX = 1;
        this.list.repeatY = 3;
        this.list.spaceY = 17;
        //数据表
        this.indexData = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.endless_skill);
        // //黑色先背景出现
        this.background = this.owner.getChildByName('background');
        this.contentSet.x = -800;
        this.adaptive();
        this.interfaceAppear();
    };
    /**适配策略*/
    EndlessChooseSkills.prototype.adaptive = function () {
        var background = this.owner.getChildByName('background');
        var contentSet = this.owner.getChildByName('contentSet');
        contentSet.y += 10;
        background.height = Laya.stage.height;
        background.width = Laya.stage.width;
        contentSet.y += (Laya.stage.height - 1334) / 2;
    };
    /**界面出现动画*/
    EndlessChooseSkills.prototype.interfaceAppear = function () {
        // 内容移动
        if (this.contentSet.x >= 0) {
            this.appearSwitch = false;
            this.pageTurnSwitch = true;
            this.pageTurnTime = Date.now();
        }
        else {
            this.contentSet.x += 200;
        }
        // 背景容移动
        if (this.background.alpha >= 0.8) {
            this.background.alpha += 0.8;
        }
        else {
            this.background.alpha += 0.05;
        }
    };
    /**界面消失动画*/
    EndlessChooseSkills.prototype.interfaceVanish = function (index) {
        // 背景移动
        if (this.background.alpha <= 0) {
            this.background.alpha = 0;
        }
        else {
            this.background.alpha -= 0.05;
        }
        // 内容移动
        if (this.contentSet.x <= -800) {
            this.contentSet.x = -800;
            Laya.timer.resume();
            EndlessManage_1.default.getInstance().selectSkillBack(this.list.array[index]["id"]);
            Laya.Scene.close('test/skillsToChoose.scene', 'skillsToChoose');
        }
        else {
            this.contentSet.x -= 150;
        }
    };
    /**成就栏初始化*/
    EndlessChooseSkills.prototype.listInit = function () {
        var scrollObj = this.list._children[1];
        scrollObj.hide = true; //使用但隐藏滚动条
        scrollObj.touchScrollEnable = false; //禁止触摸滚动
        scrollObj.elasticBackTime = 200; //设置橡皮筋回弹时间。单位为毫秒。
        scrollObj.elasticDistance = 50; //设置橡皮筋极限距离。
        this.listArrayMessage();
        this.list.selectHandler = new Laya.Handler(this, this.onSelect_List);
        this.list.renderHandler = new Laya.Handler(this, this.updateItem);
    };
    /**把数据表中的数据导入list.array中
     * 如果只有2个或者1个那么没有翻页动画
     * 如果大于三个则会有翻页动画*/
    EndlessChooseSkills.prototype.listArrayMessage = function () {
        var data = [];
        // 直接给data导入1~2个数据
        if (this.randomSkills.length >= 1 && this.randomSkills.length < 3) {
            for (var key in this.indexData) {
                if (this.indexData.hasOwnProperty(key)) {
                    var element = this.indexData[key];
                    if (this.randomSkills.length === 1) {
                        if (key === this.randomSkills[0].toString()) {
                            data.push({
                                id: key,
                                icon: element.icon,
                                name: element.name,
                                dec: element.dec,
                                selected: false,
                            });
                        }
                    }
                    else if (this.randomSkills.length === 2) {
                        if (key === this.randomSkills[0].toString() || key === this.randomSkills[1].toString()) {
                            data.push({
                                id: key,
                                icon: element.icon,
                                name: element.name,
                                dec: element.dec,
                                selected: false,
                            });
                        }
                    }
                }
            }
        }
        else if (this.randomSkills.length >= 3) {
            // 导入信息，并去掉当前随机出来的技能id
            for (var key in this.indexData) {
                if (this.indexData.hasOwnProperty(key)) {
                    var element = this.indexData[key];
                    data.push({
                        id: key,
                        icon: element.icon,
                        name: element.name,
                        dec: element.dec,
                        selected: false,
                    });
                }
            }
            // 删除这三个技能
            for (var i = 0; i < data.length; i++) {
                for (var j = 0; j < this.randomSkills.length; j++) {
                    if (i < 0) {
                        i = 0;
                    }
                    if (data[i]['id'] === this.randomSkills[j].toString()) {
                        data.splice(i, 1);
                        i--;
                    }
                }
            }
            // 把随机出来的技能放在最前面
            for (var i = 0; i < this.randomSkills.length; i++) {
                var element = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.endless_skill, this.randomSkills[i]);
                data.unshift({
                    id: this.randomSkills[i],
                    icon: element.icon,
                    name: element.name,
                    dec: element.dec,
                    selected: false,
                });
            }
        }
        this.list.array = data;
        this.pageIndex = this.list.array.length - 1;
    };
    /**list动画,翻页的时候不可以点击*/
    EndlessChooseSkills.prototype.listAnimation = function () {
        if (this.pageIndex > 0) {
            var nowTime = Date.now();
            if (nowTime - this.pageTurnTime > 40) {
                this.pageTurnTime = nowTime;
                this.list.scrollTo(this.pageIndex);
                this.pageIndex--;
            }
        }
        else {
            this.list.scrollTo(0);
            this.list.selectEnable = true;
            this.pageTurnSwitch = false;
        }
    };
    /**当前触摸的box监听，第一次触摸到任何一个都会关闭场景*/
    EndlessChooseSkills.prototype.onSelect_List = function (index) {
        // 按钮动画
        var timeLine = new Laya.TimeLine;
        var cell = this.list.getCell(index);
        // 选中显示
        this.list.array[index].selected = true;
        this.list.refresh();
        // 设置不可选
        this.list.selectEnable = false;
        // 播放音乐
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
        this.presentCell = cell;
        this.presentCellIndex = index;
    };
    /**cell的点击效果*/
    EndlessChooseSkills.prototype.cellClickAni = function (cell, index) {
        if (!this.press) {
            cell.scaleX -= 0.03;
            cell.scaleY -= 0.03;
            if (cell.scaleX < 0.9) {
                this.press = true;
            }
        }
        else {
            if (cell.scaleX > 1) {
                cell.scaleX = 1;
                cell.scaleY = 1;
                this.vanishSwitch = true;
            }
            else {
                cell.scaleX += 0.05;
                cell.scaleY += 0.05;
            }
        }
    };
    /**box信息对应list赋值信息*/
    EndlessChooseSkills.prototype.updateItem = function (cell, index) {
        // icon
        var id = this.list.array[index].id;
        var url = 'endlessMode' + '/' + 'icon_' + id + '.png';
        var icon = cell.getChildByName('icon');
        icon.loadImage(url);
        // 选中显示
        var baseboard_pitch = cell.getChildByName('baseboard_pitch');
        var baseboard = cell.getChildByName('baseboard');
        if (this.list.array[index].selected) {
            baseboard_pitch.visible = true;
            baseboard.visible = false;
        }
        else {
            baseboard_pitch.visible = false;
            baseboard.visible = true;
        }
        // 名字
        var name = cell.getChildByName('name');
        name.text = this.list.array[index].name;
        // 解释
        var describe = cell.getChildByName('describe');
        describe.text = this.list.array[index].dec;
    };
    EndlessChooseSkills.prototype.onUpdate = function () {
        // 出现控制
        if (this.appearSwitch) {
            this.interfaceAppear();
        }
        // list翻页动画
        if (this.pageTurnSwitch) {
            this.listAnimation();
        }
        // 消失控制
        // 第一步是按钮动画，第二是场景消失动画
        if (this.presentCell) {
            this.cellClickAni(this.presentCell, this.presentCellIndex);
            if (this.vanishSwitch) {
                this.interfaceVanish(this.presentCellIndex);
            }
        }
    };
    EndlessChooseSkills.prototype.onDestroy = function () {
        var urls = ["commonPic/黑色遮罩.png", "endlessMode/common_underframe.png", "endlessMode/ui_skillunselect.png", "endlessMode/ui_skillselect.png"];
        PlayingSceneControl_1.default.instance.clearResUrl(urls, true);
    };
    return EndlessChooseSkills;
}(Laya.Script));
exports.default = EndlessChooseSkills;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/Music":53,"../playing/PlayingSceneControl":65,"./EndlessManage":46,"./EndlessParseSkill":48}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainWeaponData_1 = require("./MainWeaponData");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var GameConfig_1 = require("../../GameConfig");
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var BagDataControl_1 = require("./BagDataControl");
var Playing_var_1 = require("./Playing_var");
var role_1 = require("../role/role");
var HttpEnum_1 = require("../Connect/HttpEnum");
var HttpClass_1 = require("../Connect/HttpClass");
var SkeletonTempletManage_1 = require("./SkeletonTempletManage");
var EndlessParseSkill_1 = require("./EndlessParseSkill");
var EndlessParseBoss_1 = require("./EndlessParseBoss");
var EnemyObject_1 = require("../role/EnemyObject");
var EndlessManage = /** @class */ (function () {
    function EndlessManage() {
        this.RESPATH = "prefab/Endless_buyItem";
        this.RESPATH_ITEM = "prefab/EndLessItem";
        /**
         * 计算距离
         */
        this.CALTIMEINTERVAL = 100;
        this.calUseSpeed = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.misc, 12, "value");
        this.weaponJson = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.endless_weapon);
    }
    ;
    EndlessManage.getInstance = function () {
        if (!this._instance) {
            this._instance = new EndlessManage();
        }
        return EndlessManage._instance;
    };
    EndlessManage.prototype.initEndless = function () {
        this.startTime = Date.now();
        this.isBossFighting = false;
        this.mainLevel = 1;
        this.scoreNum = 0;
        this.distanceNum = 0;
        this.planeLevelObj = PlayingSceneControl_1.default.instance.owner["label_planeLevel"];
        this.scoreObj = PlayingSceneControl_1.default.instance.owner["label_score"];
        this.distanceObj = PlayingSceneControl_1.default.instance.owner["label_distance"];
        this.distanceObj.value = "0Km";
        if (this.isLookedAD) {
            this.setLookedAdScore();
            this.isLookedAD = null;
        }
        this.scoreObj.value = "" + this.scoreNum;
        this.setSceneElement("enter");
        this.loadSk();
        // this.initItemIcon();
        this.reqReducePower();
        this.updateMainWeaponData();
        this.preLoadResInBoss();
    };
    EndlessManage.prototype.updateMainWeaponData = function () {
        var level = this.mainLevel;
        MainWeaponData_1.default.getInstance().updateMainWeapon(level, level, level);
    };
    /**
     * 部分无尽模式才能用到的骨骼~
     */
    EndlessManage.prototype.loadSk = function () {
        return;
        var skArr = ["shengji"];
        var i = 0;
        for (i; i < skArr.length; i++) {
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, skArr[i], skArr[i], true, null, null);
        }
    };
    /**
     * 界面的元素 进游戏和结算回主界面
     */
    EndlessManage.prototype.setSceneElement = function (status) {
        var mainInstance = PlayingSceneControl_1.default.instance;
        if (status && status === "exit") {
            mainInstance.secondRoleObj.visible = true;
        }
        else {
            // PlayingControl.instance.secondRoleObj.visible = false;
            var leftSecondWeapon = mainInstance.leftSecondWeapon;
            var rightSecondWeapon = mainInstance.rightSecondWeapon;
            Laya.Tween.to(leftSecondWeapon, { x: leftSecondWeapon.x - 350, y: leftSecondWeapon.y + 350 }, 2200, Laya.Ease.expoOut, Laya.Handler.create(this, this.leftWeaponmoveFinish, [leftSecondWeapon]));
            Laya.Tween.to(rightSecondWeapon, { x: rightSecondWeapon.x + 350, y: leftSecondWeapon.y + 350 }, 2200, Laya.Ease.expoOut, Laya.Handler.create(this, this.rightWeaponmoveFinish, [rightSecondWeapon]));
        }
        var arr = PlayingSceneControl_1.default.instance.playing_layer._children;
        arr.forEach(function (item, index) {
            if (item.name === "HpLevel") {
                item.visible = status !== "exit";
                var labelArray = ["label_score", "label_distance", "pauseBtn"];
                var i = 0;
                for (i; i < labelArray.length; i++) {
                    item.getChildByName(labelArray[i]).visible = status !== "exit";
                    // if (labelArray[i] == "lvscores_sprite") {
                    //     Laya.Browser.window.lvscores_sprite = item.getChildByName(labelArray[i]);
                    // }
                }
            }
            else {
                item.visible = status === "exit";
            }
        });
    };
    EndlessManage.prototype.leftWeaponmoveFinish = function (obj) {
        PlayingSceneControl_1.default.instance.secondRoleObj.visible = false;
        obj.x = 25;
        obj.y = 10;
    };
    EndlessManage.prototype.rightWeaponmoveFinish = function (obj) {
        PlayingSceneControl_1.default.instance.secondRoleObj.visible = false;
        obj.x = 210;
        obj.y = 10;
    };
    EndlessManage.prototype.initItemIcon = function () {
        if (this.itemJsonObj) {
            for (var i in this.itemJsonObj) {
                if (this.itemJsonObj) {
                    this.itemJsonObj[i].visible = true;
                }
            }
        }
        else {
            Laya.loader.load(this.RESPATH_ITEM + ".prefab", Laya.Handler.create(this, this.createItemInEndless));
        }
    };
    EndlessManage.prototype.createItemInEndless = function (e) {
        this.itemJsonObj = { 104: null, 105: null };
        var index = 0;
        var i;
        for (i in this.itemJsonObj) {
            var data = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.item, i);
            this.itemJsonObj[i] = e.create();
            var obj = this.itemJsonObj[i];
            if (i === "104") {
                obj["damage"] = data.damage;
            }
            else {
                obj["etime"] = data.etime;
            }
            obj.pos(-5.5, 0.65 * Laya.stage.height + 125 * index);
            Laya.stage.addChild(obj);
            obj["itemId"] = i;
            obj.on(Laya.Event.CLICK, this, this.useItem);
            index++;
        }
        this.updateItemData();
    };
    EndlessManage.prototype.updateItemData = function () {
        var i;
        var itemJsonObj = this.itemJsonObj;
        for (i in itemJsonObj) {
            var data = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.item, i);
            var obj = this.itemJsonObj[i];
            obj.getChildByName("icon").skin = "endLess/" + data.icon + ".png";
            var numData = BagDataControl_1.default.getInstance().getBagDataById(i);
            obj.getChildByName("fc_num").value = numData ? numData.num : 0;
        }
    };
    EndlessManage.prototype.getDistance = function () {
        if (Playing_var_1.default.getInstance().gameModel === "level" || PlayingSceneControl_1.default.instance.isGamePause || Playing_var_1.default.getInstance().gameStatus !== "playing") {
            return;
        }
        if (!this.isBossFighting && Date.now() - this.startTime >= this.CALTIMEINTERVAL) {
            var distance = (Date.now() - this.startTime) * this.calUseSpeed / 1000;
            this.distanceNum += distance;
            this.distanceNum = Number(this.distanceNum.toFixed(1));
            this.startTime = Date.now();
            this.distanceObj.value = "" + this.distanceNum + "km";
            this.startBossFighting();
        }
        this.setCoolDown();
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            PlayingSceneControl_1.default.instance.owner["lvscores_sprite"].visible = true;
        }
    };
    /**
     * 计算分数
     */
    EndlessManage.prototype.getScore = function (enemyType, enmeyLevel) {
        if (Playing_var_1.default.getInstance().gameModel === "level" || Playing_var_1.default.getInstance().gameStatus === "settlement") {
            return;
        }
        if (this.isBossFighting && enemyType !== 2) {
            return;
        }
        var scoresJson = { 1: 1, 2: 10, 3: 3 };
        var plusExp = enmeyLevel * scoresJson[enemyType];
        var instance = EndlessParseSkill_1.default.getInstance();
        //触发升级狂魔技能
        if (instance.isUpgraded(16)) {
            plusExp *= (1 + instance.getSkillNum(16) * 0.01);
            plusExp = Math.floor(plusExp);
        }
        this.scoreNum += plusExp;
        this.scoreObj.value = "" + this.scoreNum;
        this.updateMainLevel();
    };
    /**
     * 计算当前的等级
     */
    EndlessManage.prototype.updateMainLevel = function () {
        var needScore = this.weaponJson[this.mainLevel]["score"];
        if (this.mainLevel <= 100 && this.scoreNum >= needScore) {
            this.mainLevel++;
            this.setUpdateEffect();
            this.updateMainWeaponData();
            if (!this.isLookedAD) {
                this.upgradeOpenSelectSkill();
            }
        }
        var nextNeedScore = this.weaponJson[this.mainLevel]["score"];
        this.changeScoresProgressBar(nextNeedScore);
    };
    /**
     * 改变分数进度条
     */
    EndlessManage.prototype.changeScoresProgressBar = function (needScore) {
        PlayingSceneControl_1.default.instance.owner["lv_now"].value = this.mainLevel;
        var lv_scores = PlayingSceneControl_1.default.instance.owner["lv_scores"];
        var lastLevelNeedScore = this.mainLevel === 1 ? 0 : this.weaponJson[this.mainLevel - 1]["score"];
        lv_scores.text = "" + (this.scoreNum - lastLevelNeedScore) + "/" + (needScore - lastLevelNeedScore);
        var mark_graphics = PlayingSceneControl_1.default.instance.owner["scoreMask"].graphics;
        mark_graphics.clear();
        var markWidth = 177 * ((this.scoreNum - lastLevelNeedScore) / (needScore - lastLevelNeedScore));
        if (this.mainLevel >= 100) {
            PlayingSceneControl_1.default.instance.owner["lv_max"].visible = true;
            lv_scores.visible = false;
            markWidth = 177;
        }
        mark_graphics.drawRect(0, 0, markWidth, 30, "#ff0000");
    };
    /**
     * 设置飞机升级的特效~
     */
    EndlessManage.prototype.setUpdateEffect = function () {
        var roleObj = PlayingSceneControl_1.default.instance.roleObj;
        var shengjiObj = roleObj.getChildByName("shengji");
        if (shengjiObj) {
            shengjiObj.visible = true;
            shengjiObj.play(0, false);
        }
        else {
            // const templet = SkeletonTempletManage.getInstance().templets["shengji"];
            // if (templet) {
            // var skObj: Laya.Skeleton = Laya.Pool.getItemByCreateFun("shengji", () => {
            //     const sk = templet.buildArmature(0);
            //     return sk;
            // }, this);
            var skObj = new Laya.Skeleton();
            skObj.load("dragonbones/shengji.sk", Laya.Handler.create(this, function (mark) {
                mark.play(0, false);
            }), 0);
            roleObj.addChild(skObj);
            skObj.name = "shengji";
            skObj.pos(roleObj.width / 2, roleObj.height / 2);
            // skObj.play(0, false);
            skObj.on(Laya.Event.STOPPED, this, function (temp) {
                var markSk = temp.removeSelf();
                markSk.templet.destroy();
                markSk.destroy();
                Laya.loader.clearRes("dragonbones/shengji.png");
                // temp.visible = false;
            }, [skObj]);
            // } 
            // else {
            //     console.error("升级特效的资源未进行预加载~~~");
            // }
        }
    };
    /**
     * 设置飞机皮肤byLevel
     */
    EndlessManage.prototype.setPlaneShow = function () {
    };
    /**
     *
     * @param itemId
     * 使用道具
     */
    EndlessManage.prototype.useItem = function (e) {
        var itemObj = e.target;
        if (itemObj["cool"]) {
            //技能冷却中
            return;
        }
        var itemId = itemObj["itemId"];
        var numData = BagDataControl_1.default.getInstance().getBagDataById(itemId);
        if (!numData || numData.num === 0) {
            return;
        }
        this.setItemCool(itemObj);
        var argJson = { bagCommon: {} };
        argJson.bagCommon[itemId] = { num: numData.num - 1 };
        BagDataControl_1.default.getInstance().updateBagCommon(argJson);
        this.updateItemData();
        switch (Number(itemId)) {
            case 104:
                this.damageAllEnemy(itemId);
                break;
            case 105:
                this.roleAddShield(itemId);
                break;
            default:
                break;
        }
    };
    EndlessManage.prototype.setItemCool = function (itemObj) {
        var imgObj = itemObj.getChildByName("cool_img");
        imgObj.scaleY = 1;
        itemObj["startTime"] = Date.now();
        imgObj.visible = true;
        itemObj["cool"] = true;
    };
    /**
     * 冷却得倒计时
     */
    EndlessManage.prototype.setCoolDown = function () {
        var items = this.itemJsonObj;
        if (!items) {
            return;
        }
        var i;
        for (i in items) {
            var item = items[i];
            if (item["cool"]) {
                if (Date.now() - item["startTime"] >= 100) {
                    item["startTime"] = Date.now();
                    var imgObj = item.getChildByName("cool_img");
                    imgObj.scaleY = imgObj.scaleY - 0.02;
                    if (imgObj.scaleY <= 0) {
                        item["cool"] = null;
                        imgObj.visible = false;
                    }
                }
            }
        }
    };
    EndlessManage.prototype.damageAllEnemy = function (itemId) {
        this.setAllDamageEffect();
        var damageArr = this.itemJsonObj[itemId]["damage"].split("|");
        var enemys = PlayingSceneControl_1.default.instance.EnemySpite._children;
        var i = 0;
        for (i; i < enemys.length; i++) {
            if (!enemys[i].visible) {
                continue;
            }
            var markScript = enemys[i]["markScript"];
            var hurt = Number(damageArr[0]) + markScript.propertyObj.startHp * Number(damageArr[1]);
            markScript.setEnemyHp(hurt, null, null);
        }
    };
    EndlessManage.prototype.roleAddShield = function (itemId) {
        role_1.default.instance.startRoleSheild(this.itemJsonObj[itemId]["etime"]);
    };
    /**
     * 设置q全屏的伤害特效
     */
    EndlessManage.prototype.setAllDamageEffect = function () {
        var sk = Laya.Pool.getItemByCreateFun("qpbz", this.createAllDamageEffect, this);
        sk.on(Laya.Event.STOPPED, this, function (e) {
            Laya.Pool.recover("qpbz", e);
        }, [sk]);
        sk.play(0, false);
        sk.pos(Laya.stage.width / 2, Laya.stage.height / 2);
        Laya.stage.addChild(sk);
    };
    EndlessManage.prototype.createAllDamageEffect = function () {
        var templet = SkeletonTempletManage_1.default.getInstance().templets["qpbz"];
        var sk = templet.buildArmature(0);
        return sk;
    };
    /**
     * 战前准备
     */
    EndlessManage.prototype.createBuyItemPop = function () {
        if (this.buyPopObj) {
            this.buyPopObj.visible = true;
            return;
        }
        if (Laya.loader.getRes(this.RESPATH + ".json")) {
            this.loadResCompelete(Laya.loader.getRes(this.RESPATH + ".json"));
        }
        else {
            Laya.Scene.showLoadingPage();
            Laya.loader.load(this.RESPATH + ".prefab", Laya.Handler.create(this, this.loadResCompelete));
        }
    };
    EndlessManage.prototype.loadResCompelete = function (e) {
        this.buyPopObj = e.create();
        this.buyPopObj.y = (Laya.stage.height - GameConfig_1.default.height) / 2;
        var bg = this.buyPopObj.getChildByName("bg");
        bg.height = Laya.stage.height;
        bg.y = -(Laya.stage.height - GameConfig_1.default.height) / 2;
        Laya.stage.addChild(this.buyPopObj);
        Laya.Scene.hideLoadingPage();
    };
    /**
     * 结算后需要的部分处理
     */
    EndlessManage.prototype.endlessSettlement = function () {
        if (this.itemJsonObj) {
            //隐藏道具图标
            var i = void 0;
            for (i in this.itemJsonObj) {
                if (this.itemJsonObj[i]) {
                    this.itemJsonObj[i].visible = false;
                }
            }
        }
    };
    Object.defineProperty(EndlessManage.prototype, "scoreNum", {
        get: function () {
            return this._scoreNum;
        },
        set: function (value) {
            if (value !== void 0) {
                this._scoreNum = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 每次进入无尽都会扣除体力
     */
    EndlessManage.prototype.reqReducePower = function () {
        var url = HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.EndlessStart;
        var nowEnergy = BagDataControl_1.default.getInstance().getBagDataById("103").num;
        var args = { uuId: Playing_var_1.default.getInstance().uuId, bagCommon: { 103: { id: 103, num: nowEnergy - 20 } } };
        new HttpClass_1.default.HttpClass(Laya.Handler.create(this, this.reqReducePowerFinish), url, JSON.stringify(args));
    };
    EndlessManage.prototype.reqReducePowerFinish = function (e) {
        if (e.ret === 0) {
            BagDataControl_1.default.getInstance().updateBagDate_new(e);
        }
    };
    /**
     * 以下是新的无尽新添加 上面老的可能要动态的进行部分删减
     */
    /**
     * 是否满足进入条件
     */
    EndlessManage.prototype.isSatisfy = function () {
        var gameVar = Laya.Browser.window.game;
        if (gameVar.nowLevel <= 10) {
            return false;
        }
        return true;
    };
    /**
     *  创建第一次看广告选择弹窗
     */
    EndlessManage.prototype.createUpgradeShortcutByAD = function () {
        var dec = "天降鸿运,您获得了一次立即升级的机会是否立即升级？";
        Laya.Scene.open("test/popDialog.scene", false, { "txt": dec, type: 2 });
    };
    EndlessManage.prototype.createSelectSkill = function () {
        this.mainLevel == (void 0) && (this.isLookedAD = true);
        //调用打开的界面
        Laya.Scene.open("test/skillsToChoose.scene");
    };
    /**
     * 选择技能成功后的回调
     */
    EndlessManage.prototype.selectSkillBack = function (id) {
        console.error("id-----", id);
        var gameStatus = Playing_var_1.default.getInstance().gameStatus;
        if (gameStatus === "main") {
            Playing_var_1.default.getInstance().gameModel = "endless";
            PlayingSceneControl_1.default.instance.judgeLoadFinish();
        }
        else {
            //取消暂停
            Laya.timer.once(500, this, function () {
                PlayingSceneControl_1.default.instance.resumeGame();
            });
        }
        id && EndlessParseSkill_1.default.getInstance().addNewSkill(id);
    };
    EndlessManage.prototype.setLookedAdScore = function () {
        var needScore = this.weaponJson[1]["score"];
        this.scoreNum = needScore;
        this.updateMainLevel();
    };
    /**
     * 展示所获得技能的界面    需要暂停
     */
    EndlessManage.prototype.showSkills = function () {
        //调用打开技能界面
        PlayingSceneControl_1.default.instance.pauseGame();
        Laya.Scene.open("test/suspendInterface.scene", false);
    };
    /**
     * 立刻结算
     */
    EndlessManage.prototype.immediatelySettlement = function () {
        role_1.default.instance.setRoleDead();
    };
    /**
     * 检测boss战
     */
    EndlessManage.prototype.startBossFighting = function () {
        var isSatisfy = EndlessParseBoss_1.default.getInstance().toSatisfy(this.distanceNum);
        if (isSatisfy) {
            this.isBossFighting = true;
            this.createBossObject();
        }
    };
    /**
     * boss战结束
     */
    EndlessManage.prototype.endBossFighting = function () {
        var _this = this;
        PlayingSceneControl_1.default.instance.pauseGame();
        //销毁剩余的敌人
        PlayingSceneControl_1.default.instance.EnemySpite.removeChildren();
        this.isBossFighting = false;
        Laya.timer.once(1000, this, function () {
            _this.createSelectSkill();
        });
    };
    EndlessManage.prototype.upgradeOpenSelectSkill = function () {
        var _this = this;
        PlayingSceneControl_1.default.instance.pauseGame();
        Laya.timer.once(700, this, function () {
            _this.createSelectSkill();
        });
    };
    /**
     * 创建boss
     */
    EndlessManage.prototype.createBossObject = function () {
        var enemyId = EndlessParseBoss_1.default.getInstance().nowBossId;
        var enemyObj = new EnemyObject_1.default(enemyId);
        PlayingSceneControl_1.default.instance.EnemySpite.addChild(enemyObj.enmeySprite);
        this.preLoadResInBoss();
    };
    /**
     * 预加载boss战刷出来的小怪
     */
    EndlessManage.prototype.preLoadResInBoss = function () {
        var ids = EndlessParseBoss_1.default.getInstance().getTempletDateInBoss();
        var templets = SkeletonTempletManage_1.default.getInstance().templets;
        var i;
        for (i in ids) {
            var pic = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.monster, i, "pic");
            if (!templets[pic]) {
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.enemy, null, pic, true, null, null);
            }
        }
    };
    /**
     * 时间补偿
     */
    EndlessManage.prototype.setCompensateTime = function () {
        this.startTime = Date.now();
    };
    /**
     * exit endlessmodel
     */
    EndlessManage.prototype.exitEndless = function () {
        EndlessParseSkill_1.default.getInstance().deleteSkill();
        EndlessManage._instance = null;
    };
    return EndlessManage;
}());
exports.default = EndlessManage;
},{"../../GameConfig":1,"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Data/DataTables":25,"../Data/JsonEnum":26,"../playing/PlayingSceneControl":65,"../role/EnemyObject":73,"../role/role":79,"./BagDataControl":41,"./EndlessParseBoss":47,"./EndlessParseSkill":48,"./MainWeaponData":52,"./Playing_var":55,"./SkeletonTempletManage":57}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var Tool_1 = require("../Tools/Tool");
var EndlessParseBoss = /** @class */ (function () {
    function EndlessParseBoss() {
        this.TABLECONFIG = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.endless_boss);
        this.alreadyBossed = [];
    }
    ;
    EndlessParseBoss.getInstance = function () {
        if (!this._instance) {
            this._instance = new EndlessParseBoss();
        }
        return this._instance;
    };
    /**
     * 满足出boss条件?
     */
    EndlessParseBoss.prototype.toSatisfy = function (nowDis) {
        var keyArr = Object.keys(this.TABLECONFIG);
        var i = keyArr.length - 1;
        for (i; i >= 0; i--) {
            var id = keyArr[i];
            var distance = this.TABLECONFIG[id].distance;
            if (nowDis >= distance) {
                if (this.alreadyBossed.indexOf(id) >= 0) {
                    return false;
                }
                else {
                    this.alreadyBossed.push(id);
                    var bossArr = this.TABLECONFIG[id].boss.split("|");
                    this._nowBossId = Number(bossArr[0]);
                    this.initVar_monster(id);
                    return true;
                }
            }
        }
        return false;
    };
    EndlessParseBoss.prototype.initVar_monster = function (id) {
        // this.monsterInterval = 
        var timeArr = this.TABLECONFIG[id].time.split("|");
        var timeValue = Tool_1.tools.random(10000 * Number(timeArr[0]), 10000 * Number(timeArr[1]));
        this.monsterInterval = timeValue * 1000 / 10000;
        this.monsterIndex = 0;
        this.monsterIds = [];
        var monsterIdAndNum = this.TABLECONFIG[id]["monster"].split("#");
        var i = 0;
        for (i; i < monsterIdAndNum.length; i++) {
            var one = monsterIdAndNum[i].split("|");
            var j = 0;
            for (j; j < Number(one[1]); j++) {
                this.monsterIds.push(one[0]);
            }
        }
    };
    EndlessParseBoss.prototype.getMonsterId = function () {
        if (this.monsterIndex >= this.monsterIds.length) {
            this.monsterIndex = 0;
        }
        return this.monsterIds[this.monsterIndex++];
    };
    /**
     * 得到下一个boss战的时候刷的小怪ids
     */
    EndlessParseBoss.prototype.getTempletDateInBoss = function () {
        var id;
        if (this.alreadyBossed.length) {
            id = Number(this.alreadyBossed[this.alreadyBossed.length - 1]) + 1;
        }
        else {
            id = 1;
        }
        var ids = {};
        if (this.TABLECONFIG[id]) {
            var monsterIds = this.TABLECONFIG[id].monster.split("#");
            var i = 0;
            for (i; i < monsterIds.length; i++) {
                var markMonsterId = monsterIds[i].split("|")[0];
                ids[markMonsterId] = true;
            }
        }
        return ids;
    };
    /**
     * boss战中刷小怪的间隔
     */
    EndlessParseBoss.prototype.getintervalByOne = function () {
        var id = Number(this.alreadyBossed[this.alreadyBossed.length - 1]);
        var timeString = this.TABLECONFIG[id].time;
        var timeArr = timeString.split("|");
        var randomArr = timeArr.map(function (item) {
            return 10000 * Number(item);
        });
        var randomValue = Tool_1.tools.random(randomArr[0], randomArr[1]);
        return randomValue * 0.0001 * 1000;
    };
    Object.defineProperty(EndlessParseBoss.prototype, "monsterInterval", {
        get: function () {
            return this._monsterInterval;
        },
        set: function (value) {
            this._monsterInterval = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EndlessParseBoss.prototype, "nowBossId", {
        get: function () {
            return this._nowBossId;
        },
        enumerable: true,
        configurable: true
    });
    return EndlessParseBoss;
}());
exports.default = EndlessParseBoss;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../Tools/Tool":37}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var JsonEnum_1 = require("../Data/JsonEnum");
var DataTables_1 = require("../Data/DataTables");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var MainWeaponData_1 = require("./MainWeaponData");
var role_1 = require("../role/role");
var SkeletonTempletManage_1 = require("./SkeletonTempletManage");
var EndlessParseSkill = /** @class */ (function () {
    function EndlessParseSkill() {
        this._skills_endless = {};
        this.parseSkillTable();
    }
    EndlessParseSkill.getInstance = function () {
        if (!this._instance) {
            this._instance = new EndlessParseSkill();
        }
        return this._instance;
    };
    EndlessParseSkill.prototype.parseSkillTable = function () {
        this.tableConfig = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.endless_skill);
    };
    /**
     *
     * @param id
     * 是否达到上限
     */
    EndlessParseSkill.prototype.isSkillCap = function (id) {
        var num = this.skills_endless[id];
        if (num && num >= this.tableConfig[id].limit) {
            return true;
        }
        return false;
    };
    EndlessParseSkill.prototype.addNewSkill = function (id) {
        if (!this.isSkillCap(id)) {
            this.setSkills_endless(id);
            this.skillTakeEffect(Number(id));
            var roleStatuSkills = [6, 7, 8];
            if (roleStatuSkills.indexOf(Number(id)) > -1) {
                this.setSkillEffect(Number(id));
            }
        }
    };
    EndlessParseSkill.prototype.skillTakeEffect = function (skillId) {
        switch (skillId) {
            case 1:
                //增加了最大血量
                var bate = 0.01 * this.getSkillNum(skillId);
                var addHpNum = bate * MainWeaponData_1.default.getInstance().getRoleHp();
                addHpNum = Math.floor(addHpNum);
                PlayingSceneControl_1.default.instance.roleTotal = addHpNum + MainWeaponData_1.default.getInstance().getRoleHp();
                PlayingSceneControl_1.default.instance.roleHp += addHpNum;
                if (PlayingSceneControl_1.default.instance.roleHp > PlayingSceneControl_1.default.instance.roleTotal) {
                    PlayingSceneControl_1.default.instance.roleHp = PlayingSceneControl_1.default.instance.roleTotal;
                }
                role_1.default.instance.setRoleHp(0);
                break;
            case 3:
                //更新子弹 创建的速度
                PlayingSceneControl_1.default.instance.setSpeedByEndless(this.getSkillNum(skillId));
                break;
            case 5:
                //更新无敌的持续时间
                role_1.default.instance.updateWuDiKeepTime();
                break;
            case 18:
                //超强回复
                var recoverBeta = 0.01 * this.getSkillNum(skillId);
                var recoverHp = PlayingSceneControl_1.default.instance.roleTotal * recoverBeta;
                role_1.default.instance.setRoleHp(-recoverHp);
                this.setSkillEffect(18);
                break;
            default:
                break;
        }
    };
    Object.defineProperty(EndlessParseSkill.prototype, "skills_endless", {
        get: function () {
            return this._skills_endless;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EndlessParseSkill.prototype, "skillsByDate", {
        get: function () {
            if (!this._skillsByDate) {
                this._skillsByDate = [];
            }
            return this._skillsByDate;
        },
        enumerable: true,
        configurable: true
    });
    EndlessParseSkill.prototype.setSkills_endless = function (value) {
        if (this._skills_endless[value]) {
            this._skills_endless[value]++;
        }
        else {
            this._skills_endless[value] = 1;
        }
        this._skillsByDate === (void 0) && (this._skillsByDate = []);
        this._skillsByDate.push(value);
    };
    /**
     *
     * @param id
     * @param attackObjectType 攻击对象的类型 boss smallEnemy
     */
    EndlessParseSkill.prototype.getSkillNum = function (id, attackObjectType) {
        if (!this.skills_endless[id]) {
            return false;
        }
        var skillLevel = this.skills_endless[id] - 1;
        var value = null;
        if (attackObjectType && attackObjectType === "boss") {
            value = this.tableConfig[id].value2;
        }
        else {
            value = this.tableConfig[id].value1;
        }
        if (typeof (value) === "string") {
            value = value.split("|");
        }
        switch (id) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 10:
            case 13:
            case 15:
            case 16:
            case 18:
            case 19:
                value = Number(value[1]) * skillLevel + Number(value[0]);
                break;
            case 9:
                var dropHpBate = Number(value[3]) * skillLevel + Number(value[2]);
                value = [Number(value[0]), Number(value[1]), dropHpBate];
                break;
            case 11:
            case 12:
                var hurtPercent = Number(value[1]) * skillLevel + Number(value[0]);
                value = [hurtPercent, Number(value[2])];
                break;
            case 14:
                //爆头 只对小怪生效
                value = this.tableConfig[id].rate;
                break;
            case 17:
                var fireValue = Number(value[2]) * skillLevel + Number(value[1]);
                value = [Number(value[0]), fireValue];
                break;
            default:
                break;
        }
        return value;
    };
    /**
     *
     * @param id
     * 技能的触发概率
     */
    EndlessParseSkill.prototype.getSkillProbability = function (id) {
        return this.tableConfig[id].rate;
    };
    /**
     *
     * @param id
     * @param attackObjectType      现在攻击对象的类型 boss smallEnemy
     * 得到免疫的数据
     */
    EndlessParseSkill.prototype.getImmunityData = function (id, attackObjectType) {
        if (attackObjectType && attackObjectType === "boss") {
            return Number(this.tableConfig[id].immunity2);
        }
        else {
            return Number(this.tableConfig[id].immunity1);
        }
    };
    /**
     * getRandomUpgradeSkills
     */
    EndlessParseSkill.prototype.getRandomUpgradeSkills = function () {
        var idArr = Object.keys(this.tableConfig);
        var i;
        for (i in this.skills_endless) {
            var inIndex = idArr.indexOf(i);
            if (inIndex > -1 && this.isSkillCap(Number(i))) {
                idArr.splice(inIndex, 1);
            }
        }
        if (idArr.length) {
            if (idArr.length > 3) {
                var rateArr = this.getRateArr(idArr);
                var tempArr = Tool_1.tools.getArrayDifElements(rateArr, 3);
                return tempArr.map(function (item) { return Number(item); });
            }
            else {
                return idArr.map(function (item) { return Number(item); });
            }
        }
        else {
            return false;
        }
    };
    EndlessParseSkill.prototype.getRateArr = function (idArr) {
        var tempArr = [];
        var i = 0;
        for (i; i < idArr.length; i++) {
            var skillId = idArr[i];
            var rateNum = Number(this.tableConfig[skillId].rate);
            var j = 0;
            for (j; j < rateNum; j++) {
                tempArr.push(skillId);
            }
        }
        return tempArr;
    };
    /**
     *
     * @param id
     * 技能被升级过
     */
    EndlessParseSkill.prototype.isUpgraded = function (id) {
        return this.skills_endless[id];
    };
    /**
     *
     * @param id
     * 通过id获得sk name
     */
    EndlessParseSkill.prototype.getEffectNameById = function (id) {
        var config = this.tableConfig[id];
        if (!config || config.effect == -1) {
            return config[11].effect;
        }
        return config.effect;
    };
    /**
     *
     * @param skillId 技能的id
     * @param parent
     * 设置技能的特效
     */
    EndlessParseSkill.prototype.setSkillEffect = function (skillId, parent, pos) {
        return;
        var effectName = this.tableConfig[skillId].effect;
        var templets = SkeletonTempletManage_1.default.getInstance().templets;
        var skObj;
        if (templets[effectName]) {
            skObj = Laya.Pool.getItemByCreateFun(effectName, function () {
                return templets[effectName].buildArmature(0);
            }, this);
            skObj.name = effectName;
            if (!parent) {
                parent = PlayingSceneControl_1.default.instance.roleObj;
            }
            switch (skillId) {
                case 6:
                case 7:
                case 8:
                case 17:
                    //终极防御
                    skObj.play(0, true);
                    skObj.pos(parent.width / 2, (parent.height / 2) + (skillId === 17 ? 70 : 0));
                    parent.addChild(skObj);
                    break;
                case 9:
                    skObj.on(Laya.Event.STOPPED, this, this.playFinshCallBack, [skObj, skillId]);
                    var obj = parent["vars_"].propertyObj;
                    skObj.pos(obj.mark_w / 2, obj.mark_h / 2);
                    skObj.play("bz", false);
                    parent.addChild(skObj);
                    break;
                case 10:
                    if (parent.getChildByName(effectName)) {
                        skObj.play("hit", false);
                        skObj.visible = true;
                    }
                    else {
                        skObj.on(Laya.Event.STOPPED, this, this.playFinshCallBack, [skObj, skillId]);
                        var obj = parent["vars_"].propertyObj;
                        skObj.pos(obj.mark_w / 2, obj.mark_h / 2);
                        skObj.play("hit", false);
                        parent.addChild(skObj);
                    }
                    break;
                case 11:
                    //爆炸输出
                    skObj.on(Laya.Event.STOPPED, this, this.playFinshCallBack, [skObj, skillId]);
                    var obj = parent["vars_"].propertyObj;
                    skObj.pos(parent.x + obj.mark_w / 2, parent.y + obj.mark_h / 2);
                    skObj.play(0, false);
                    PlayingSceneControl_1.default.instance.effectParent.addChild(skObj);
                    break;
                case 12:
                    //冰缓
                    skObj.on(Laya.Event.STOPPED, this, this.playFinshCallBack, [skObj, skillId]);
                    var obj = parent["vars_"].propertyObj;
                    skObj.pos(obj.mark_w / 2, obj.mark_h / 2);
                    skObj.play("bdxg", true);
                    parent.addChild(skObj);
                    break;
                case 14:
                    skObj.on(Laya.Event.STOPPED, this, this.playFinshCallBack, [skObj, skillId]);
                    skObj.pos(pos.x, pos.y);
                    skObj.play(0, false);
                    PlayingSceneControl_1.default.instance.effectParent.addChild(skObj);
                    break;
                case 18:
                case 15:
                    skObj.on(Laya.Event.STOPPED, this, this.playFinshCallBack, [skObj, skillId]);
                    skObj.pos(parent.width / 2, parent.height / 2);
                    skObj.play(0, false);
                    parent.addChild(skObj);
                    break;
                default:
                    break;
            }
        }
    };
    EndlessParseSkill.prototype.playFinshCallBack = function (skObj, skillId) {
        switch (skillId) {
            case 9:
            case 12:
                skObj.visible = false;
                break;
            case 10:
                skObj.play("dcp", true);
                break;
            default:
                skObj.removeSelf();
                Laya.Pool.recover(skObj.name, skObj);
                break;
        }
    };
    EndlessParseSkill.prototype.cancalSkillEffect = function (skillId, parent) {
        var effectName = this.getEffectNameById(skillId);
        if (parent && parent.getChildByName(effectName)) {
            var obj = parent.removeChildByName(effectName);
            Laya.Pool.recover(effectName, obj);
            // obj.destroy();
        }
    };
    EndlessParseSkill.prototype.getSkillEffectIds = function () {
        var arr = [];
        var i;
        for (i in this.tableConfig) {
            var skName = this.tableConfig[i].effect;
            if (skName == -1) {
                continue;
            }
            arr.push(skName);
        }
        return arr;
    };
    EndlessParseSkill.prototype.deleteSkill = function () {
        EndlessParseSkill._instance = null;
    };
    return EndlessParseSkill;
}());
exports.default = EndlessParseSkill;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../Tools/Tool":37,"../playing/PlayingSceneControl":65,"../role/role":79,"./MainWeaponData":52,"./SkeletonTempletManage":57}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var EndlessParseSkill_1 = require("./EndlessParseSkill");
var EndlessManage_1 = require("./EndlessManage");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var EndlessChooseSkills = /** @class */ (function (_super) {
    __extends(EndlessChooseSkills, _super);
    function EndlessChooseSkills() {
        var _this = _super.call(this) || this;
        /**出现开关*/
        _this.appearSwitch = true;
        /**打开消失开关*/
        _this.vanishSwitch = false;
        _this.buttonContinue = false;
        _this.buttonSettle = false;
        return _this;
    }
    EndlessChooseSkills.prototype.onEnable = function () {
        this.initScene();
        this.listInit();
    };
    /**场景初始化*/
    EndlessChooseSkills.prototype.initScene = function () {
        this.self = this.owner;
        this.contentSet = this.owner.getChildByName('contentSet');
        this.background = this.owner.getChildByName('background');
        this.contentSet.x = -800;
        this.self.pos(0, 0);
        //列表
        this.list = this.self['m_list'];
        this.list.repeatX = 4;
        this.list.repeatY = 4;
        this.list.spaceY = 10;
        //数据表
        this.indexData = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.endless_skill);
        //已经学习的技能的id包括顺序
        this.acquiredSkills = EndlessParseSkill_1.default.getInstance().skillsByDate;
        //退出按钮
        this.But_Quit = this.self['But_Quit'];
        //继续按钮
        this.But_Continue = this.self['But_Continue'];
        //提示框
        this.explain = this.self['explain'];
        this.explain.alpha = 0;
        this.adaptive();
        this.closeButtonClick();
        Laya.timer.pause();
        this.interfaceAppear();
    };
    /**适配策略*/
    EndlessChooseSkills.prototype.adaptive = function () {
        this.contentSet.y += 10;
        this.background.height = Laya.stage.height;
        this.background.width = Laya.stage.width;
        this.contentSet.y += (Laya.stage.height - 1334) / 2;
    };
    /**界面出现动画*/
    EndlessChooseSkills.prototype.interfaceAppear = function () {
        // 内容移动
        if (this.contentSet.x >= 0) {
            this.appearSwitch = false;
        }
        else {
            this.contentSet.x += 200;
        }
        // 背景容移动
        if (this.background.alpha >= 0.8) {
            this.background.alpha += 0.8;
        }
        else {
            this.background.alpha += 0.05;
        }
    };
    /**界面消失动画*/
    EndlessChooseSkills.prototype.interfaceVanish = function (type) {
        // 内容移动
        if (this.contentSet.x <= -800) {
            this.contentSet.x = -800;
            Laya.timer.resume();
            if (type === 'continue') {
                PlayingSceneControl_1.default.instance.resumeGame();
            }
            else if (type === 'settle') {
                EndlessManage_1.default.getInstance().immediatelySettlement();
            }
            this.self.close();
        }
        else {
            this.contentSet.x -= 150;
        }
        // 背景移动
        if (this.background.alpha <= 0) {
            this.background.alpha = 0;
        }
        else {
            this.background.alpha -= 0.05;
        }
    };
    /**成就栏初始化*/
    EndlessChooseSkills.prototype.listInit = function () {
        // this.list.scrollBar.hide = true;//使用但隐藏滚动条
        // this.list.scrollBar.elasticBackTime = 200;//设置橡皮筋回弹时间。单位为毫秒。
        // this.list.scrollBar.elasticDistance = 50;//设置橡皮筋极限距离。
        this.list.selectEnable = true; //设置可选
        this.listArrayMessage();
        this.list.selectHandler = new Laya.Handler(this, this.onSelect_List);
        this.list.renderHandler = new Laya.Handler(this, this.updateItem);
    };
    /**把数据表中的数据导入list.array中*/
    EndlessChooseSkills.prototype.listArrayMessage = function () {
        var data = [];
        // 没有学习技能则不执行
        if (this.acquiredSkills.length <= 0) {
            this.list.array = [];
            return;
        }
        // 导入已经学习过的技能
        for (var i = this.acquiredSkills.length - 1; i >= 0; i--) {
            for (var key in this.indexData) {
                if (this.indexData.hasOwnProperty(key)) {
                    var element = this.indexData[key];
                    if (element.id == this.acquiredSkills[i]) {
                        data.push({
                            id: key,
                            icon: element.icon,
                            name: element.name,
                            dec: element.dec,
                            animation: true,
                        });
                    }
                }
            }
        }
        this.list.array = data;
    };
    /**list动画,翻页的时候不可以点击*/
    EndlessChooseSkills.prototype.listAnimation = function () {
        // 设置不可选
        this.list.selectEnable = false;
        // 最后一个置顶
        this.list.scrollTo(this.list.array.length);
        // 下翻到最后一个
        this.list.tweenTo(0, 1000, Laya.Handler.create(this, function () {
            // 设置不可选
            this.list.selectEnable = true;
        }, []));
    };
    /**当前触摸的box监听，触摸到之后直接把信息复制给提示框 this.explain，虽然它并不一定显示*/
    EndlessChooseSkills.prototype.onSelect_List = function (index) {
        // 解释图片下面的三个属性和这个cell一一对应
        // icon
        var id = this.list.array[index].id;
        var url = 'endlessMode' + '/' + 'icon_' + id + '.png';
        var icon = this.explain.getChildByName('icon');
        icon.loadImage(url);
        // 名字
        var name = this.explain.getChildByName('name');
        name.text = this.list.array[index].name;
        // 描述
        var decExplain = this.explain.getChildByName('describe');
        decExplain.text = this.list.array[index].dec;
    };
    /**box信息对应list赋值信息*/
    EndlessChooseSkills.prototype.updateItem = function (cell, index) {
        // cell名称
        cell.name = 'item' + index;
        // icon
        var id = this.list.array[index].id;
        var url = 'endlessMode' + '/' + 'icon_' + id + '.png';
        var icon = cell.getChildByName('icon');
        icon.loadImage(url);
        // 技能名称
        var name = cell.getChildByName('name');
        name.text = this.list.array[index].name;
        if (name.text.length >= 7) {
            name.fontSize = 20;
        }
        else {
            name.fontSize = 23;
        }
        // 可以在update里面做动画
    };
    /**继续游戏按钮和退出游戏按钮的点击事件*/
    EndlessChooseSkills.prototype.closeButtonClick = function () {
        // 继续游戏按钮
        this.But_Continue.on(Laya.Event.MOUSE_DOWN, this, this.closeButtonDOWN);
        this.But_Continue.on(Laya.Event.MOUSE_MOVE, this, this.closeButtonMOVE);
        this.But_Continue.on(Laya.Event.MOUSE_UP, this, this.But_ContinueUP);
        this.But_Continue.on(Laya.Event.MOUSE_OUT, this, this.closeButtonOUT);
        // 退出游戏
        this.But_Quit.on(Laya.Event.MOUSE_DOWN, this, this.closeButtonDOWN);
        this.But_Quit.on(Laya.Event.MOUSE_MOVE, this, this.closeButtonMOVE);
        this.But_Quit.on(Laya.Event.MOUSE_UP, this, this.But_QuitUP);
        this.But_Quit.on(Laya.Event.MOUSE_OUT, this, this.closeButtonOUT);
    };
    /**按下缩小*/
    EndlessChooseSkills.prototype.closeButtonDOWN = function () { Music_1.default.getInstance().playSound(musicToUrl.button_normal); };
    /**移动时缩小*/
    EndlessChooseSkills.prototype.closeButtonMOVE = function () { };
    /**继续按钮点击事件,关闭场景*/
    EndlessChooseSkills.prototype.But_ContinueUP = function () {
        this.vanishSwitch = true;
        this.buttonContinue = true;
        //内容先消失
    };
    /**退出按钮点击事件,切换场景*/
    EndlessChooseSkills.prototype.But_QuitUP = function () {
        this.vanishSwitch = true;
        this.buttonSettle = true;
    };
    /**出屏幕大小还原*/
    EndlessChooseSkills.prototype.closeButtonOUT = function () { };
    EndlessChooseSkills.prototype.onUpdate = function () {
        // 出现控制
        if (this.appearSwitch) {
            this.interfaceAppear();
        }
        // 消失控制
        if (this.vanishSwitch) {
            if (this.buttonContinue) {
                this.interfaceVanish('continue');
            }
            else if (this.buttonSettle) {
                this.interfaceVanish('settle');
            }
        }
    };
    EndlessChooseSkills.prototype.onDisable = function () {
    };
    return EndlessChooseSkills;
}(Laya.Script));
exports.default = EndlessChooseSkills;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/Music":53,"../playing/PlayingSceneControl":65,"./EndlessManage":46,"./EndlessParseSkill":48}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EndlessSuspend_1 = require("./EndlessSuspend");
var EndlessSuspend_explain = /** @class */ (function (_super) {
    __extends(EndlessSuspend_explain, _super);
    function EndlessSuspend_explain() {
        return _super.call(this) || this;
    }
    EndlessSuspend_explain.prototype.onEnable = function () {
        this.initScene();
    };
    /**场景初始化*/
    EndlessSuspend_explain.prototype.initScene = function () {
        this.self = this.owner;
        this.box = this.self.parent;
        this.list = this.owner.scene.m_list;
        this.contentSet = this.list.parent;
        this.selfScene = this.self.scene;
        this.explain = this.selfScene.getComponent(EndlessSuspend_1.default).explain;
        //父节点名称后面的数字和他的顺序相等
        var parentName = this.box.name;
        //截取名称后面的数字
        this.selfIndex = parentName.substring(4);
        // 长按时间
        this.longPressTime = 0;
        //长按开关
        this.pressSwitch = false;
        // 点击事件
        this.cellClick();
    };
    /**cell的点击事件*/
    EndlessSuspend_explain.prototype.cellClick = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.cellDOWN);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.cellMOVE);
        this.self.on(Laya.Event.MOUSE_UP, this, this.cellUP);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.cellOUT);
    };
    /**按下*/
    EndlessSuspend_explain.prototype.cellDOWN = function () {
        this.longPressTime = 0;
        this.pressSwitch = true;
        // 解释图片下面的三个属性和这个cell一一对应
        // icon
        var id = this.list.array[this.selfIndex].id;
        var url = 'endlessMode' + '/' + 'icon_' + id + '.png';
        var icon = this.explain.getChildByName('icon');
        icon.loadImage(url);
        // 名字
        var name = this.explain.getChildByName('name');
        name.text = this.list.array[this.selfIndex].name;
        // 描述
        var decExplain = this.explain.getChildByName('describe');
        decExplain.text = this.list.array[this.selfIndex].dec;
        // 位置变化
        var posX = this.box.x;
        if (posX >= this.list.width * 1 / 4 && posX < this.list.width * 2 / 4) {
            this.explain.x = this.contentSet.width * 3 / 4 - 50;
        }
        else if (posX >= this.list.width * 2 / 4 && posX < this.list.width * 3 / 4) {
            this.explain.x = this.contentSet.width * 1 / 4 + 50;
        }
        else {
            this.explain.x = this.contentSet.width / 2;
        }
    };
    /**移动时缩小*/
    EndlessSuspend_explain.prototype.cellMOVE = function () {
    };
    /**抬起大小还原打开场景*/
    EndlessSuspend_explain.prototype.cellUP = function () {
        this.longPressTime = 0;
        this.pressSwitch = false;
        this.explain.alpha = 0;
    };
    /**出屏幕大小还原*/
    EndlessSuspend_explain.prototype.cellOUT = function () {
        this.longPressTime = 0;
        this.pressSwitch = false;
        this.explain.alpha = 0;
    };
    /**设置显示*/
    EndlessSuspend_explain.prototype.onUpdate = function () {
        if (this.pressSwitch) {
            this.longPressTime += 1;
            if (this.longPressTime >= 0 && this.longPressTime < 20) {
                this.explain.alpha = 0;
            }
            else if (this.longPressTime >= 10) {
                this.explain.alpha = 1;
            }
        }
    };
    EndlessSuspend_explain.prototype.onDisable = function () {
    };
    return EndlessSuspend_explain;
}(Laya.Script));
exports.default = EndlessSuspend_explain;
},{"./EndlessSuspend":49}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
* 资源加载管理类(待优化丰富)
*/
var HashMap_1 = require("../Tools/HashMap");
var manage;
(function (manage) {
    var LoadManager = /** @class */ (function () {
        function LoadManager() {
            this.FixedDataTablesDir = "res/data/dataJson";
            this.hashMap = new HashMap_1.default();
        }
        LoadManager.Instance = function () {
            if (this.myselfs == null) {
                this.myselfs = new LoadManager();
            }
            return this.myselfs;
        };
        /**
         * 加载资源
         * JSON文件指向res/data/fixed_tables 可以不传路径，其他资源需要传路径
         * @param assetsList 资源列表 可以是单个资源名称，也可以是数组
         * @param complete 加载完成回调
         * @param progress 加载进度回调
         */
        LoadManager.prototype.loadAssets = function (assetsList, complete, progress) {
            var _this = this;
            if (!(assetsList instanceof Array)) {
                assetsList = [assetsList];
            }
            var loadList = [];
            assetsList.forEach(function (element) {
                // 先判断当前资源是否已经加载过
                if (!_this.hashMap.has(element)) {
                    var l = element.split('.');
                    var assetsType = _this.getAssetsType(l[l.length - 1]);
                    if (!assetsType) {
                        return false;
                    }
                    var data = {};
                    if (assetsType === Laya.Loader.JSON || (assetsType === Laya.Loader.BUFFER && l[l.length - 1] === "zip")) {
                        data = { url: _this.FixedDataTablesDir + "/" + element, type: assetsType };
                    }
                    else {
                        data = { url: element, type: assetsType };
                    }
                    loadList.push(data);
                }
            });
            if (loadList.length <= 0) {
                if (complete) {
                    complete.runWith(true);
                }
                return;
            }
            Laya.loader.load(loadList, Laya.Handler.create(this, function (a, e) {
                // 将加载的资源保存在本地
                var index = 0;
                assetsList.forEach(function (element) {
                    _this.hashMap.add(element, Laya.loader.getRes(a[index].url));
                    index++;
                });
                if (complete) {
                    complete.runWith(e);
                }
            }, [loadList]), progress);
        };
        /**
         * 释放内存资源
         * @param assetsList 资源名称 可以是数组也可以是单个字符串
         */
        LoadManager.prototype.clearAssets = function (assetsList) {
            var _this = this;
            if (!(assetsList instanceof Array)) {
                assetsList = [assetsList];
            }
            assetsList.forEach(function (element, i) {
                // 不强制销毁，比如某些正在使用的Texture调用销毁会无效
                var l = element.split('.');
                var assetsType = _this.getAssetsType(l[l.length - 1]);
                if (!assetsType) {
                    return false;
                }
                var dataUrl = '';
                if (assetsType === Laya.Loader.JSON) {
                    dataUrl = _this.FixedDataTablesDir + "/" + element;
                }
                else {
                    dataUrl = element;
                }
                Laya.loader.clearRes(dataUrl);
                _this.hashMap.remove(assetsList[i]);
            });
        };
        /**
          * 销毁Texture使用的图片资源
          * 具体用法和效果可以参考 https://ldc.layabox.com/doc/?nav=zh-as-3-2-7
          * @param assetsList 资源名称 可以是数组也可以是单个字符串
          */
        LoadManager.prototype.clearTextureRes = function (assetsList) {
            var _this = this;
            if (!(assetsList instanceof Array)) {
                assetsList = [assetsList];
            }
            assetsList.forEach(function (element) {
                var l = element.split('.');
                var assetsType = _this.getAssetsType(l[l.length - 1]);
                if (!assetsType) {
                    return false;
                }
                var dataUrl = '';
                if (assetsType === Laya.Loader.JSON) {
                    dataUrl = _this.FixedDataTablesDir + "/" + element;
                }
                else {
                    dataUrl = element;
                }
                Laya.loader.clearTextureRes(dataUrl);
            });
        };
        /**
         * 获取加载到内存的资源数据
         * @param url  加载的时候传进来的名称
         */
        LoadManager.prototype.getAssets = function (url) {
            return this.hashMap.get(url); // Laya.loader.getRes(url);
        };
        LoadManager.prototype.getAssetsType = function (suffixStr) {
            var assetsType = null;
            switch (suffixStr) {
                case 'jpg':
                case 'png':
                    assetsType = Laya.Loader.IMAGE;
                    break;
                case 'fui':
                case 'txt':
                case 'sk':
                    assetsType = Laya.Loader.BUFFER;
                    break;
                case 'json':
                    assetsType = Laya.Loader.JSON;
                    break;
                case 'atlas':
                    assetsType = Laya.Loader.ATLAS;
                    break;
                case 'xml':
                    assetsType = Laya.Loader.XML;
                    break;
                case 'mp3':
                case 'wav':
                    assetsType = Laya.Loader.SOUND;
                    break;
                case 'csv':
                    //新增加测试用
                    assetsType = "csv";
                    break;
                case 'zip':
                    //新增加 zip
                    assetsType = Laya.Loader.BUFFER;
                    break;
                default:
                    assetsType = null;
                    break;
            }
            return assetsType;
        };
        /**
         * 添加fgui资源包
         * @param resKey 	可以是字符串可以是数组
         * @param descData 	可以是字符串可以是数组
         */
        LoadManager.prototype.addPackage = function (resKey, descData) {
            if (resKey.constructor !== Array) {
                //fairygui.UIPackage.addPackage(resKey);
                return;
            }
            for (var key in resKey) {
                var element = resKey[key];
                var element2 = descData[key];
                //fairygui.UIPackage.addPackage(element, Laya.loader.getRes(element2));
            }
        };
        LoadManager.myselfs = null;
        return LoadManager;
    }());
    manage.LoadManager = LoadManager;
})(manage || (manage = {}));
exports.default = manage;
},{"../Tools/HashMap":35}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var DataJsonUrl = JsonEnum_1.default.DataType;
var Playing_var_1 = require("./Playing_var");
var EndlessParseSkill_1 = require("./EndlessParseSkill");
var MainWeaponData = /** @class */ (function () {
    function MainWeaponData() {
        this.setMainWeapon();
    }
    ;
    MainWeaponData.getInstance = function () {
        if (!MainWeaponData._instance) {
            MainWeaponData._instance = new MainWeaponData();
        }
        return MainWeaponData._instance;
    };
    MainWeaponData.prototype.setMainWeapon = function (fireLevel, speedLevel, hpLevel) {
        if (!this.game) {
            this.game = Laya.Browser.window.game;
        }
        //火力的等级
        var markFireLevel = fireLevel || this.game.mainWeapon.fireLevel /*(PlayingVar.getInstance().gameModel === "endless" ? EndlessManage.getInstance().mainLevel : this.game.mainWeapon.fireLevel)*/;
        this.fireData = FixedDataTables.getInstance().getData(DataJsonUrl.weapon, markFireLevel);
        //速度的等级
        var markspeedLevel = speedLevel || this.game.mainWeapon.speedLevel /*(PlayingVar.getInstance().gameModel === "endless" ? EndlessManage.getInstance().mainLevel : this.game.mainWeapon.speedLevel)*/;
        this.speedData = FixedDataTables.getInstance().getData(DataJsonUrl.weapon, markspeedLevel);
        //hp等级
        var markHpLevel = hpLevel || this.game.mainWeapon.hpLevel /*(PlayingVar.getInstance().gameModel === "endless" ? EndlessManage.getInstance().mainLevel : this.game.mainWeapon.hpLevel)*/;
        this.hpDate = FixedDataTables.getInstance().getData(DataJsonUrl.weapon, markHpLevel);
    };
    Object.defineProperty(MainWeaponData.prototype, "fire_gold", {
        /**
         * 火力升级需要的金币
         */
        get: function () {
            this._fire_gold = this.fireData.fire_gold;
            return this._fire_gold;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MainWeaponData.prototype, "hp_gold", {
        /**
         * 升级飞机的生命值需要的金币
         */
        get: function () {
            this._hp_gold = this.hpDate.hp_gold;
            return this._hp_gold;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MainWeaponData.prototype, "fire", {
        /**
         * 主武器的火力值
         */
        get: function () {
            this._fire = this.fireData.fire;
            return this._fire;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MainWeaponData.prototype, "speed_gold", {
        /**
         * 射速升级需要的金币
         */
        get: function () {
            this._speed_gold = this.speedData.speed_gold;
            return this._speed_gold;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MainWeaponData.prototype, "speed", {
        /**
         * 当前主武器射速值
         */
        get: function () {
            this._speed = this.speedData.speed;
            return this._speed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MainWeaponData.prototype, "bulletSpeed", {
        /**
         * 当前主武器的子弹的速度
         */
        get: function () {
            this._bulletSpeed = this.speedData.bulletSpeed;
            var gameModel = Playing_var_1.default.getInstance().gameModel;
            if (gameModel === "endless") {
                var value = 0.01 * EndlessParseSkill_1.default.getInstance().getSkillNum(3);
                this._bulletSpeed = this._bulletSpeed * (1 + value);
            }
            return this._bulletSpeed;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 展示火力值
     */
    MainWeaponData.prototype.getShowFire = function () {
        var gameModel = Playing_var_1.default.getInstance().gameModel;
        var fireLevel;
        // if (gameModel === "endless") {
        //     fireLevel = EndlessManage.getInstance().mainLevel;
        // } else {
        //     fireLevel = this.game.mainWeapon.fireLevel;
        // }
        fireLevel = this.game.mainWeapon.fireLevel;
        var fireNum = FixedDataTables.getInstance().getDataByKey(DataJsonUrl.weapon, fireLevel, "fire");
        // const skillEndless = EndlessParseSkill.getInstance();
        // let nowNum: number;
        // if (skillEndless.isUpgraded) {
        //     nowNum = fireNum + 0.01 * skillEndless.getSkillNum(2)
        // } else {
        //     nowNum = fireNum;
        // }
        return fireNum;
    };
    /**
 * 展示Hp值
 */
    MainWeaponData.prototype.getShowHp = function () {
        var hpLevel = this.game.mainWeapon.hpLevel /*PlayingVar.getInstance().gameModel !== "endless" ? this.game.mainWeapon.hpLevel : EndlessManage.getInstance().mainLevel*/;
        return FixedDataTables.getInstance().getDataByKey(DataJsonUrl.weapon, hpLevel, "hp");
    };
    /**
     * 展示速度值
     */
    MainWeaponData.prototype.getShowSpeed = function () {
        var speedLevel = this.game.mainWeapon.speedLevel /*PlayingVar.getInstance().gameModel !== "endless" ? this.game.mainWeapon.speedLevel : EndlessManage.getInstance().mainLevel*/;
        return FixedDataTables.getInstance().getDataByKey(DataJsonUrl.weapon, speedLevel, "speed");
    };
    MainWeaponData.prototype.updateMainWeapon = function (fireLevel, speedLevel, hpLevel) {
        this.setMainWeapon(fireLevel || this.game.mainWeapon.fireLevel, speedLevel || this.game.mainWeapon.speedLevel, hpLevel || this.game.mainWeapon.hpLevel);
    };
    /**
     * role 飞机的血量值
     */
    MainWeaponData.prototype.getRoleHp = function () {
        var hpLevel = this.game.mainWeapon.hpLevel /*PlayingVar.getInstance().gameModel !== "endless" ? this.game.mainWeapon.hpLevel : EndlessManage.getInstance().mainLevel*/;
        return FixedDataTables.getInstance().getDataByKey(DataJsonUrl.weapon, hpLevel, "hp");
    };
    return MainWeaponData;
}());
exports.default = MainWeaponData;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"./EndlessParseSkill":48,"./Playing_var":55}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MusicEnum_1 = require("../Data/MusicEnum");
var musicPath = MusicEnum_1.default.musicPath;
var musicToUrl = MusicEnum_1.default.musicToUrl;
var SoundManager = Laya.SoundManager;
var Music = /** @class */ (function () {
    function Music() {
        SoundManager.useAudioMusic = false;
    }
    ;
    Music.getInstance = function () {
        if (!Music.instance) {
            Music.instance = new Music();
            Laya.Browser.window.Music = Music.instance;
        }
        return Music.instance;
    };
    Object.defineProperty(Music.prototype, "musicOn", {
        get: function () {
            if (this._musicOn === undefined) {
                this._musicOn = true;
            }
            return this._musicOn;
        },
        set: function (can) {
            this._musicOn = can;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Music.prototype, "soundOn", {
        get: function () {
            if (this._soundOn == undefined) {
                this._soundOn = true;
            }
            return this._soundOn;
        },
        set: function (can) {
            this._soundOn = can;
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     * @param markType
     * 播放音乐
     */
    Music.prototype.playMusic = function (markType) {
        this.musicOn === void 0 && (this.musicOn = true);
        this.musicOn && SoundManager.playMusic(musicPath + musicToUrl[markType] + ".mp3");
    };
    /**
     * 播放音效
     * @param markType
     */
    Music.prototype.playSound = function (markType, loops) {
        this.soundOn === void 0 && (this.soundOn = true);
        this.soundOn && SoundManager.playSound(musicPath + musicToUrl[markType] + ".mp3", loops || 1);
    };
    /**
     * 音乐静音
     */
    Music.prototype.stopNowMusic = function () {
        Laya.SoundManager.stopMusic();
    };
    /**
     * 关闭音乐静音
     */
    Music.prototype.startNowMusic = function () {
        this.playMusic(musicToUrl.bg_menu);
    };
    //停止某个sound
    Music.prototype.stopOneSound = function (markType) {
        SoundManager.stopSound(musicPath + musicToUrl[markType] + ".mp3");
    };
    return Music;
}());
exports.default = Music;
},{"../Data/MusicEnum":27}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var toast_1 = require("./toast");
var OpenWx = /** @class */ (function () {
    function OpenWx() {
        this.wx = Laya.Browser.window.wx;
        if (Laya.Browser.onMiniGame) {
            this.OpenDataContext = this.wx.getOpenDataContext();
            this.listernerShareApp();
        }
    }
    OpenWx.getInstance = function () {
        if (!this._instance) {
            this._instance = new OpenWx();
        }
        return this._instance;
    };
    /**
     *
     * @param type 1展示等级 2上传数据 3展示分数
     * @param data
     */
    OpenWx.prototype.postMsg = function (type, data) {
        if (Laya.Browser.onMiniGame) {
            this.OpenDataContext.postMessage({
                type: type,
                data: data || null
            });
        }
    };
    OpenWx.prototype.listernerShareApp = function () {
        this.wx.onShareAppMessage(function () {
            //用户点击了转发
            return {
                title: "怪星大作战"
            };
        });
    };
    /**
     * 微信分享
     */
    OpenWx.prototype.setShare = function (successHandler) {
        if (Laya.Browser.onMiniGame) {
            //下次测试
            var id = "TIJXultTTbma3tdkBUVaPA==";
            var url = "https://mmocgame.qpic.cn/wechatgame/9zdKibmXJ3RtrfyRBX0IcqzBNbR07qKgdicicibTMrN3ZZujibibpsickx8BVKHDRJM6UVg/0";
            this.wx.shareAppMessage({
                imageUrlId: id,
                imageUrl: url
            });
            console.log("主动进行了转发");
        }
        else {
            toast_1.default.noBindScript("仅支持微信客户端!");
        }
    };
    /**
     * 短震动
     */
    OpenWx.prototype.vibrateShort = function () {
        Laya.Browser.onMiniGame && this.wx.vibrateShort();
    };
    /**
     * 长震动
     */
    OpenWx.prototype.vibrateLong = function () {
        Laya.Browser.onMiniGame && this.wx.vibrateLong();
    };
    return OpenWx;
}());
exports.default = OpenWx;
},{"./toast":59}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayingVar = /** @class */ (function () {
    function PlayingVar() {
        //每波10人(应该读表 暂无)
        this._enemyNumByAwave = 1;
        //每波间隔
        this._timeIntervalByOne = 10000;
        //主角是否无敌
        this._invincible = true;
        //是否根据颜色杀敌
        this._canColorKillEnemy = false;
        //1:红色
        this.enemyHp = { 1: 5, 2: 3, 3: 2 };
        //子弹速度
        this.bulletSpeed = -50;
        //子弹的
        this.bulletInterval = 100;
        //签到
        this._checkInData = { "already": false, "day": 0 };
        //游戏的模式 
        this.gameModel = "level";
    }
    /**
     * 初始化游戏初始变量
     */
    PlayingVar.prototype.updateGameVar = function (e, playerAchieve) {
        var _this = this;
        //console用
        Laya.Browser.window.playingVar = this;
        if (!Laya.Browser.window.game) {
            Laya.Browser.window.game = {};
        }
        var game = Laya.Browser.window.game;
        var propertyJson = ["enemyNumByAwave", "timeIntervalByOne", "gameStatus", "canColorKillEnemy", "roleSecondaryEquipType", "enemyHp"];
        propertyJson.forEach(function (item, index) {
            game[item] = _this[item];
        });
        //现在的关卡
        game.nowLevel = 8 || e.barrier.curBarrier || 1;
        game.mainWeapon = { fireLevel: e.mainWeapon.fireLvl, speedLevel: e.mainWeapon.shotSpeed, hpLevel: e.mainWeapon.hpLvl };
        game.secondWeapon = { selected: /*208 || */ e.curSecondaryWeaponId };
        //签到相关
        this.checkInData.already = e.signIn.signIn;
        this.checkInData.day = e.signIn.signTimes;
        this.luckyValue = e.barrier.luckyValue;
        //成就相关
        this.achieve = e.achieve;
        this.playerAchieve = playerAchieve;
        this.preResLoaded = false;
        this.preResLoaded_e = false;
    };
    PlayingVar.getInstance = function () {
        if (!PlayingVar.instance) {
            PlayingVar.instance = new PlayingVar();
        }
        return PlayingVar.instance;
    };
    Object.defineProperty(PlayingVar.prototype, "roleSecondaryEquipType", {
        get: function () {
            return this._roleSecondaryEquipType;
        },
        set: function (e) {
            this._roleSecondaryEquipType = e;
            //this.updateGameVar();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "canColorKillEnemy", {
        get: function () {
            return this._canColorKillEnemy;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "invincible", {
        get: function () {
            return this._invincible;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "enemyNumByAwave", {
        get: function () {
            return this._enemyNumByAwave;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "timeIntervalByOne", {
        get: function () {
            return this._timeIntervalByOne;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "gameStatus", {
        get: function () {
            return this._gameStatus;
        },
        set: function (status) {
            this._gameStatus = status;
            //this.updateGameVar();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "checkInData", {
        get: function () {
            return this._checkInData;
        },
        set: function (data) {
            this._checkInData = data;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "uuId", {
        get: function () {
            if (this._uuId === void 0) {
                console.error("发生了严重错误！");
            }
            return this._uuId;
        },
        set: function (id) {
            if (!id) {
                console.error("发生了严重错误！");
            }
            this._uuId = id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PlayingVar.prototype, "wecode", {
        get: function () {
            if (this._wecode === void 0) {
                console.error("发生了严重错误！");
            }
            return this._wecode;
        },
        set: function (id) {
            if (!id) {
                console.error("发生了严重错误！");
            }
            this._wecode = id;
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     * @param data
     * 更新成就相关的本地数据  {battleTopNum endlessTopScore killTopNum unlockTopNum}
     */
    PlayingVar.prototype.updateAchieve = function (data) {
        var i;
        for (i in data) {
            this.achieve[i] = data[i];
        }
    };
    /**
     * 更新领取的数据
     */
    PlayingVar.prototype.updatePlayerAchieve = function (data) {
        var i;
        for (i in data) {
            var ids = data[i];
            var j = void 0;
            for (j in ids) {
                this.playerAchieve[i][j] = ids[j];
            }
        }
    };
    /**
     * 发送给服务端的最大杀敌数
     */
    PlayingVar.prototype.getKillMaxNum = function (nowKill) {
        if (nowKill > this.achieve["killTopNum"]) {
            return nowKill;
        }
        else {
            return this.achieve["killTopNum"];
        }
    };
    /**
     * 发送给服务端的最大分数
     */
    PlayingVar.prototype.getScoresMaxNum = function (nowScore) {
        if (nowScore > this.achieve["endlessTopScore"]) {
            return nowScore;
        }
        else {
            return this.achieve["endlessTopScore"];
        }
    };
    return PlayingVar;
}());
exports.default = PlayingVar;
},{}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BagDataControl_1 = require("./BagDataControl");
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var DataType = JsonEnum_1.default.DataType;
var enemyToPerfab = JsonEnum_1.default.enemyToPerfab;
var FixedDataTables = DataTables_1.default.FixedDataTables;
var SecondWeaponData = /** @class */ (function () {
    function SecondWeaponData() {
        this.game = Laya.Browser.window.game;
        this.configNowWeapon = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, this.game.secondWeapon.selected);
    }
    SecondWeaponData.prototype.updateWeaponComfig = function () {
        this.configNowWeapon = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, this.game.secondWeapon.selected);
    };
    SecondWeaponData.getInstance = function () {
        if (!SecondWeaponData._instance) {
            SecondWeaponData._instance = new SecondWeaponData();
        }
        return SecondWeaponData._instance;
    };
    SecondWeaponData.prototype.getItemPowerLevel = function (markId) {
        return BagDataControl_1.default.getInstance().getBagDataById(markId || this.game.secondWeapon.selected).power;
    };
    SecondWeaponData.prototype.getItemFireLevel = function (markId) {
        //console.log(BagDataControl.getInstance().getBagDataById(markId || this.game.secondWeapon.selected));
        Laya.Browser.window.BagDataControl = BagDataControl_1.default;
        return BagDataControl_1.default.getInstance().getBagDataById(markId || this.game.secondWeapon.selected).fire;
    };
    /**
     *
     * @param select 选择的副武器的id
     */
    SecondWeaponData.prototype.getShowFire = function (select) {
        return this.getFire(select);
    };
    /**
     *
     * @param select 选择的副武器id
     */
    SecondWeaponData.prototype.getShowPower = function (select) {
        var markId = select || this.game.secondWeapon.selected;
        var powerLevel = this.getItemPowerLevel(markId);
        var speedConfig = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).power;
        var configArr = speedConfig.split("|");
        return Number(configArr[0]) + powerLevel * Number(configArr[1]);
    };
    SecondWeaponData.prototype.getFire = function (select) {
        var markId = select || this.game.secondWeapon.selected;
        var fireLevel = this.getItemFireLevel(markId);
        var fireConfig = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).fire;
        var configArr = fireConfig.split("|");
        return Number(configArr[0]) + fireLevel * Number(configArr[1]);
    };
    SecondWeaponData.prototype.getSpeed = function (select) {
        if (!this.game.secondWeapon.selected) {
            return 0;
        }
        var markId = select || this.game.secondWeapon.selected;
        var powerLevel = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(markId)).power;
        var speedConfig = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).speed;
        var configArr = speedConfig.split("|");
        var speedBase = Number(configArr[0]) + powerLevel * Number(configArr[1]);
        return Number(configArr[2]) - (speedBase - 9) * Number(configArr[3]);
    };
    SecondWeaponData.prototype.getFire_cost = function (select) {
        var markId = select || this.game.secondWeapon.selected;
        var fireLevel = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(markId)).fire;
        var config = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).fire_cost;
        var configArr = config.split("|");
        var cosume = Math.floor(Number(configArr[0]) + Math.pow(fireLevel / Number(configArr[1]), Number(configArr[2])));
        return cosume;
    };
    /**
     *
     * @param select 选中的副武器的id
     * 返回副武器的解锁条件 条件不同升级消耗不同
     */
    SecondWeaponData.prototype.getCostType = function (select) {
        var markId = select || this.game.secondWeapon.selected;
        var config = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).unlock.split("|");
        config.filter(function (item, index, array) { array[index] = Number(item); });
        return config;
    };
    SecondWeaponData.prototype.getspeed_cost = function (select) {
        var markId = select || this.game.secondWeapon.selected;
        var fireLevel = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(markId)).power;
        var config = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).fire_cost;
        var configArr = config.split("|");
        var consume = Number(configArr[0]) + Math.pow(fireLevel / Number(configArr[1]), Number(configArr[2]));
        return Math.floor(consume);
    };
    SecondWeaponData.prototype.getbulletSpeed = function (select) {
        var markId = select || this.game.secondWeapon.selected;
        var fireLevel = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(markId)).power;
        var data = FixedDataTables.getInstance().getData(DataType.secondaryWeapon);
        var config = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).bulletSpeed;
        var configArr = config.split("|");
        return Number(configArr[0]) + fireLevel * Number(configArr[1]);
    };
    Object.defineProperty(SecondWeaponData.prototype, "buffType", {
        /**
         * 得到buff的type
         */
        get: function () {
            // if (!this._buffType) {
            var markId = this.game.secondWeapon.selected;
            var typeConfig = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId).type;
            var typeArray = typeConfig.split("|");
            this._buffType = typeArray;
            // }
            return this._buffType;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecondWeaponData.prototype, "getIceData", {
        /**
         * 获得减缓buff的速度 持续时间
         */
        get: function () {
            if (!this._getIceSpeed) {
                this._getIceSpeed = [];
                var powerLevel = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(this.game.secondWeapon.selected)).power;
                var arr = this.configNowWeapon.type.split("|");
                this._getIceSpeed.push(this.getbulletSpeed() * Number(arr[1]) / 100);
                this._getIceSpeed.push(powerLevel * Number(arr[3]) + Number(arr[2]));
            }
            return this._getIceSpeed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecondWeaponData.prototype, "iceBate", {
        /**
         * 获得减速buff的触发的概率
         */
        get: function () {
            var powerLevel = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(this.game.secondWeapon.selected)).power;
            var arr = this.configNowWeapon.type.split("|");
            var bate = Number(arr[4]) + powerLevel * Number(arr[5]);
            return bate;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecondWeaponData.prototype, "getFlottantT", {
        /**
         * 漂浮的持续时间
         */
        get: function () {
            if (!this._getFlottantT) {
                var powerLevel = BagDataControl_1.default.getInstance().getBagDataById(JSON.stringify(this.game.secondWeapon.selected)).power;
                var arr = this.configNowWeapon.type.split("|");
                this._getFlottantT = Number(arr[1]) + powerLevel * Number(arr[2]);
            }
            return this._getFlottantT;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecondWeaponData.prototype, "bulletPrefab", {
        get: function () {
            //部分新的不使用Sprite了
            return enemyToPerfab[this.configNowWeapon.bullet] || this.configNowWeapon.bullet;
        },
        enumerable: true,
        configurable: true
    });
    SecondWeaponData.prototype.unlockCondition = function (markId) {
        var secondaryWeapon = FixedDataTables.getInstance().getData(DataType.secondaryWeapon, markId.toString());
        var unlock = !markId ? this.configNowWeapon.unlock : secondaryWeapon.unlock;
        var unlockArr = unlock.split("|");
        var strDec;
        if (unlockArr[0] === "1") {
            strDec = "通关第 " + unlockArr[1] + " 关解锁！";
        }
        else {
            strDec = "请前往商店解锁";
        }
        return strDec;
    };
    return SecondWeaponData;
}());
exports.default = SecondWeaponData;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"./BagDataControl":41}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Bullet_second_1 = require("../role/Bullet_second");
var SkeletonTempletManage = /** @class */ (function () {
    // private _tempType: templetType;
    function SkeletonTempletManage() {
        this.TEMPLETARR0 = ["buff", "diancipao", "xuanfupao", "xuhongyinqing", "liuxingpao", "mogupao", "feirenfengbao", "daodanpao", "qpbz", "fanghudun", "jiguangpao", "duye"];
        this.BOSSSKILLEFFECT = [/*"xuanfeng", "boss2_pao",*/ "baozi", "zd", "boos4texiao", "bingzhui", "boss5texiao"];
    }
    SkeletonTempletManage.getInstance = function () {
        if (!SkeletonTempletManage._instance) {
            SkeletonTempletManage._instance = new SkeletonTempletManage();
        }
        Laya.Browser.window.templets = SkeletonTempletManage._instance;
        return SkeletonTempletManage._instance;
    };
    //可拓展同时播放多个 同一模板的不同动画(后续)
    SkeletonTempletManage.prototype.play = function (type, name, templet, loop, pos, parent, compete, nick) {
        var jsons = {
            nowLoop: loop, nowPos: pos || { x: 0, y: 0 }, nowParent: parent, nowComplete: compete,
            templetName: templet, aniName: name, nick: nick, _tempType: type
        };
        this.initTemplet(jsons);
    };
    SkeletonTempletManage.prototype.initTemplet = function (arg) {
        var templetName = arg.templetName;
        var markTemplet;
        this._templets === (void 0) && (this._templets = {});
        if (!this._templets[templetName]) {
            markTemplet = new Laya.Templet();
            this._templets[templetName] = markTemplet;
            this._templets[templetName]["templetType"] = arg._tempType;
            markTemplet.on(Laya.Event.COMPLETE, this, this.parseComplete, [arg]);
            markTemplet.on(Laya.Event.ERROR, this, this.onError);
            markTemplet.loadAni("dragonbones/" + templetName + ".sk");
        }
        else {
            markTemplet = this._templets[templetName];
            this.parseComplete(arg);
        }
    };
    SkeletonTempletManage.prototype.parseComplete = function (arg) {
        var _this = this;
        var parent = arg.nowParent;
        var tempName = arg.templetName;
        var complete = arg.nowComplete;
        if (!parent) {
            console.error("加载完成~~~~", tempName);
            //只创建模板 不创建动画
            // this.nowComplete && tempName === "boss5texiao" && this.nowComplete.run();
            this.clearTextureRes(tempName);
            complete && complete.run();
            return;
        }
        var skeleton0 = Laya.Pool.getItemByCreateFun(tempName, function () {
            return _this._templets[tempName].buildArmature(0);
        }, this);
        // let skeleton0: Laya.Skeleton = this.nowTemplet.buildArmature(0);
        skeleton0.pos(arg.nowPos.x, arg.nowPos.y);
        !arg.nowLoop && skeleton0.on(Laya.Event.STOPPED, this, this.sk_listener, [skeleton0]);
        skeleton0.play(arg.aniName, arg.nowLoop);
        if (parent) {
            parent.addChild(skeleton0);
        }
        arg.nick && (skeleton0.name = arg.nick);
        //从动画模板创建动画播放对象
        arg.nowComplete && arg.nowComplete.runWith(skeleton0);
    };
    /**
     *
     * @param tname templet名字
     */
    SkeletonTempletManage.prototype.clearTextureRes = function (tname) {
        if (!tname) {
            var i_1;
            for (i_1 in this.templets) {
                var templet_1 = this.templets[i_1];
                var temp_1 = templet_1._textureDic;
                var j = void 0;
                for (j in temp_1) {
                    Laya.loader.getRes(j) && Laya.loader.clearTextureRes(j);
                }
            }
            return;
        }
        var templet = this.templets[tname];
        if (!templet) {
            return;
        }
        var temp = templet._textureDic;
        var i;
        for (i in temp) {
            Laya.loader.getRes(i) && Laya.loader.clearTextureRes(i);
        }
    };
    SkeletonTempletManage.prototype.sk_listener = function (e) {
        e.off(Laya.Event.STOPPED, this, this.sk_listener);
        e && e.removeSelf();
    };
    SkeletonTempletManage.prototype.onError = function (arg) {
        console.error("onError:", arg);
    };
    Object.defineProperty(SkeletonTempletManage.prototype, "templets", {
        get: function () {
            return this._templets;
        },
        set: function (value) {
            this._templets = value;
        },
        enumerable: true,
        configurable: true
    });
    SkeletonTempletManage.prototype.createSkByTemplet = function (resName) {
        var _this = this;
        if (this.templets[resName]) {
            var sk = Laya.Pool.getItemByCreateFun(resName, function () {
                var temp = _this.templets[resName].buildArmature(0);
                temp.addComponent(Bullet_second_1.default);
                return temp;
            }, this);
            return sk;
        }
        else {
            console.error("不存在的templets---", resName);
        }
    };
    /**
 * 释放骨骼模板 的纹理
 */
    SkeletonTempletManage.prototype.releaseTempletTexture = function (tempKeyName) {
        if (this.templets[tempKeyName]) {
            this.templets[tempKeyName].destroy();
            this.templets[tempKeyName] = null;
        }
    };
    /**
     * 释放所有的骨骼模板的纹理
     */
    SkeletonTempletManage.prototype.releaseAllTemplet = function () {
        var i;
        for (i in this.templets) {
            this.templets[i].destroy();
            this.templets[i] = null;
        }
        this.templets = {};
        console.error("已经释放了所有骨骼模板的纹理");
    };
    SkeletonTempletManage.prototype.xxx = function () {
        var xxx = Laya.Pool["_poolDic"].monster;
        var i = 0;
        for (i; i < xxx.length; i++) {
            xxx[i].destroy(true);
        }
    };
    return SkeletonTempletManage;
}());
exports.default = SkeletonTempletManage;
},{"../role/Bullet_second":71}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var toast_1 = require("./toast");
var WeiXinAD = /** @class */ (function () {
    function WeiXinAD() {
        if (Laya.Browser.onMiniGame) {
            this.wx = Laya.Browser.window.wx;
            this.adStatus = true;
            this.initAdComponent();
        }
        //现在强制关闭 因为广告暂未开放
        //  this.adStatus = false;
    }
    WeiXinAD.getInstance = function () {
        if (!this._instance) {
            this._instance = new WeiXinAD();
        }
        return this._instance;
    };
    /**
     * 初始化广告组件
     */
    WeiXinAD.prototype.initAdComponent = function () {
        var _this = this;
        this.adInstance = this.wx.createRewardedVideoAd({ adUnitId: 'adunit-7e1acfe8314a0542' });
        this.adInstance.onLoad(function () {
            console.log("广告拉取成功！");
            _this.pullAdSuc = true;
        });
        this.adInstance.onError(function (err) {
            console.error("广告拉取失败:", err);
            _this.pullAdSuc = false;
            //失败再去拉去一次
            _this.adInstance.load();
        });
        this.adInstance.onClose(function (res) {
            if (res && res.isEnded || res === undefined) {
                //播放结束
                _this.handleBack && _this.handleBack.runWith(1);
            }
            else {
                //播放中途退出
                _this.handleBack && _this.handleBack.runWith(0);
            }
        });
    };
    WeiXinAD.prototype.addVideoAD = function (e) {
        var _this = this;
        if (!this.pullAdSuc) {
            toast_1.default.noBindScript("获取广告失败！");
            Laya.Dialog.hideLoadingPage();
            return;
        }
        this.handleBack = e;
        // 用户触发广告后，显示激励视频广告
        this.adInstance.show().catch(function () {
            // 失败重试
            _this.adInstance.load()
                .then(function () { return _this.adInstance.show(); })
                .catch(function (err) {
                console.log('激励视频 广告显示失败');
                toast_1.default.noBindScript("获取广告失败！");
                Laya.Dialog.hideLoadingPage();
            });
        });
        // this.adInstance.show().then(() => {
        //     console.log("激励广告,广告显示！");
        // }).catch((err) => {
        //     console.log("拉取广告失败(catch):", err);
        //     this.adInstance.load().then(() => {
        //         this.adInstance.show();
        //     });
        // });;
    };
    Object.defineProperty(WeiXinAD.prototype, "adStatus", {
        get: function () {
            return this._adStatus;
        },
        set: function (statu) {
            if (statu != void 0) {
                this._adStatus = statu;
            }
            else {
                this._adStatus = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    return WeiXinAD;
}());
exports.default = WeiXinAD;
},{"./toast":59}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var toast = /** @class */ (function (_super) {
    __extends(toast, _super);
    function toast() {
        return _super.call(this) || this;
    }
    toast.prototype.onEnable = function () {
        var self = this.owner;
        self.alpha = 0.5;
        //通用tips已经改成渐隐藏
        Laya.Tween.to(self, { y: self.y - 320 + 120, alpha: 1 }, 500, null /*Laya.Ease.elasticOut*/, Laya.Handler.create(this, this.removeSelf));
    };
    toast.prototype.removeSelf = function () {
        var _this = this;
        Laya.timer.once(800, this, function () {
            _this.owner.removeSelf();
        });
    };
    toast.prototype.onDisable = function () {
        Laya.Pool.recover("toast", this.owner);
        // this.owner.destroy();
    };
    /**
     * 非挂载的toast的创建
     * @param txt toast文本
     */
    toast.noBindScript = function (txt, parent, pos) {
        var toast = Laya.loader.getRes("prefab/toastSprite.json");
        var toastSprite = toast.create() /*Laya.Pool.getItemByCreateFun("toast", toast.create, toast)*/;
        toastSprite.zOrder = 3005;
        var label = toastSprite.getChildByName("showText");
        if (!label) {
            return;
        }
        label.text = txt;
        if (pos) {
            toastSprite.pos(Laya.stage.width / 2 - label.width / 2, pos.y);
        }
        else {
            toastSprite.pos(Laya.stage.width / 2 - label.width / 2, (Laya.stage.height / 2) + 250 - 250);
        }
        if (parent) {
            parent.addChild(toastSprite);
        }
        else {
            Laya.stage.addChild(toastSprite);
        }
    };
    return toast;
}(Laya.Script));
exports.default = toast;
},{}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var Tool_1 = require("../Tools/Tool");
var Playing_var_1 = require("../manage/Playing_var");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var BattleParse = /** @class */ (function () {
    function BattleParse() {
        //当前所在波
        this.nowInWave = 0;
        //所在当前波的位置
        this.nowInWaveIndex = 0;
        //本关目前已经杀死的敌人
        this._killEnemyS = 0;
        /**
         * 计算关卡怪物总数
         */
        this.waveJson = { 0: [], 1: [] };
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            this._nowLevel = 1;
        }
        else {
            this.gameVar = Laya.Browser.window.game;
            this._nowLevel = this.gameVar.nowLevel;
        }
        this._goldInLevel = 0;
        this.initWaveData();
    }
    Object.defineProperty(BattleParse.prototype, "nowLevel", {
        get: function () {
            return this._nowLevel;
        },
        set: function (level) {
            this._nowLevel = level;
        },
        enumerable: true,
        configurable: true
    });
    BattleParse.prototype.initWaveData = function () {
        // this.waveDataInLevel = FixedDataTables.getInstance().getData(Data2.DataType.battle, this.nowLevel);
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            var data = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.endless);
            this.waveMonsterInLevel = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.endless, this.nowLevel, "troop").split(";");
        }
        else {
            this.waveMonsterInLevel = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.battle, this.nowLevel, "troop").split(";");
        }
        this.getEnemyTotalNum();
    };
    BattleParse.getInstance = function () {
        if (!this.instance) {
            this.instance = new BattleParse();
        }
        return this.instance;
    };
    BattleParse.deleteInstance = function () {
        delete this.instance;
    };
    /**
     * 返回下个应该创建的怪物的id
     * 如果本关的怪物已经出完返回false
     */
    BattleParse.prototype.getNextMonsterData = function () {
        if (this.nowInWave === 1 && this.nowInWaveIndex >= this.waveJson[this.nowInWave].length) {
            if (Playing_var_1.default.getInstance().gameModel === "endless") {
                this.endlessSetNextData();
                return this.getNextMonsterData();
            }
            else {
                return false;
            }
        }
        else {
            if (this.nowInWave === 0) {
                if (this.nowInWaveIndex >= this.waveJson[this.nowInWave].length) {
                    this.nowInWaveIndex = 0;
                    this.nowInWave++;
                    // PlayingSceneControl.instance.setLastTimeCreateAWave(Date.now());
                    PlayingSceneControl_1.default.instance.setLastByCreateTime(this.nowInWave);
                    return this.getNextMonsterData();
                }
                else {
                    (this.nowInWaveIndex === (this.waveJson[this.nowInWave].length - 1)) && PlayingSceneControl_1.default.instance.setLastTimeCreateAWave(Date.now());
                    return this.waveJson[this.nowInWave][this.nowInWaveIndex++];
                }
            }
            else {
                return this.waveJson[this.nowInWave][this.nowInWaveIndex++];
            }
        }
    };
    /**
     * 无尽模式 每个编号跑完后下个编号
     */
    BattleParse.prototype.endlessSetNextData = function () {
        this.nowInWave = 0;
        this.nowInWaveIndex = 0;
        this.nowLevel++;
        this.waveJson[0].length = 0;
        this.waveJson[1].length = 0;
        this.initWaveData();
        if (this.nowLevel >= 3) {
            var arr = this.getTempletDateInLevel(null, this.nowLevel - 3);
            this.clearLastLevelRes(arr);
        }
        PlayingSceneControl_1.default.instance.preLoadResInPlaying(true);
    };
    BattleParse.prototype.clearLastLevelRes = function (json) {
        var i;
        for (i in json) {
            var name_1 = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.monster, i, "pic");
            SkeletonTempletManage_1.default.getInstance().clearTextureRes(name_1);
        }
    };
    /**
     * 当前波是否出完所有怪
     */
    BattleParse.prototype.judgeFinishNowWave = function () {
        if (this.waveJson[this.nowInWave] && this.nowInWaveIndex >= this.waveJson[this.nowInWave].length) {
            return true;
        }
        return false;
    };
    /**
     * 判断下一个怪物释放是boss
     */
    BattleParse.prototype.judgeNextIsBoss = function () {
        if (this.waveJson[this.nowInWave + 1] && this.waveJson[this.nowInWave + 1][0]) {
            var markId = this.waveJson[this.nowInWave + 1][0];
            var type = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.monster, markId, "type");
            if (type === 2) {
                return true;
            }
            else {
                return false;
            }
        }
        return true;
    };
    BattleParse.prototype.getEnemyTotalNum = function () {
        var waveMonsterInLevel = this.waveMonsterInLevel;
        var nums = 0;
        var i = 0;
        for (i = 0; i < waveMonsterInLevel.length; i++) {
            var poArr = waveMonsterInLevel[i].split("#");
            var j = 0;
            for (j; j < poArr.length; j++) {
                var markArr = poArr[j].split("|");
                nums += Number(markArr[1]);
                var markId = JSON.parse(markArr[0]);
                var sameArr = Tool_1.tools.fillArray(markId, Number(markArr[1]));
                this.waveJson[i] = this.waveJson[i].concat(sameArr);
            }
        }
        this.totalNums = nums;
    };
    /**
     *  得到当前关卡的所有怪物的sk 模板 复用~
     */
    BattleParse.prototype.getTempletDateInLevel = function (isNext, markLevel) {
        var idsJson = {};
        var waveMonsterInLevel;
        if (isNext) {
            waveMonsterInLevel = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.endless, this.nowLevel + 1, "troop").split(";");
        }
        else {
            if (markLevel) {
                waveMonsterInLevel = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.endless, markLevel, "troop").split(";");
            }
            else {
                waveMonsterInLevel = this.waveMonsterInLevel;
            }
        }
        var i = 0;
        for (i; i < waveMonsterInLevel.length; i++) {
            var poArr = waveMonsterInLevel[i].split("#");
            var j = 0;
            for (j; j < poArr.length; j++) {
                var markArr = poArr[j].split("|");
                idsJson[markArr[0]] = true;
            }
        }
        return idsJson;
    };
    /**
     *
     * @param itemId 怪物id
     * @param bate 金币加成
     */
    BattleParse.prototype.calKillOneGold = function (itemId, bate) {
        var gold = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.monster, itemId, "gold");
        gold = gold * ((typeof (bate) === "number" ? bate : 1) || 1);
        this._goldInLevel += gold;
    };
    Object.defineProperty(BattleParse.prototype, "goldsInLevel", {
        get: function () {
            if (!this._goldsInLevel) {
                this.goldsInLevel = this._goldInLevel /*this.calKillAllGold()*/;
            }
            return this._goldsInLevel;
        },
        set: function (golds) {
            this._goldsInLevel = golds;
        },
        enumerable: true,
        configurable: true
    });
    BattleParse.prototype.getTotalNums = function () {
        return this.totalNums;
    };
    Object.defineProperty(BattleParse.prototype, "killEnemyS", {
        get: function () {
            return this._killEnemyS;
        },
        set: function (num) {
            this._killEnemyS += 1;
        },
        enumerable: true,
        configurable: true
    });
    return BattleParse;
}());
exports.default = BattleParse;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../Tools/Tool":37,"../manage/Playing_var":55,"../manage/SkeletonTempletManage":57,"../playing/PlayingSceneControl":65}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var BuffControl = /** @class */ (function (_super) {
    __extends(BuffControl, _super);
    //private regidbody: Laya.RigidBody;
    function BuffControl() {
        return _super.call(this) || this;
    }
    BuffControl.prototype.onEnable = function () {
        this.self = this.owner;
        this.proppertyObj = this.self["propertyObj"];
        this.buffId = this.proppertyObj.buffId;
        this.self.visible = true;
    };
    BuffControl.prototype.onUpdate = function () {
        if (!this.self.visible) {
            return;
        }
        this.setMove();
        this.hitCollision();
        this.collisionLeaveSceen();
    };
    BuffControl.prototype.collisionLeaveSceen = function () {
        if (this.self.y > (Laya.stage.height + this.proppertyObj.mark_h / 2)) {
            this.self.removeSelf();
        }
    };
    BuffControl.prototype.setMove = function () {
        this.self.y += 2;
    };
    BuffControl.prototype.hitCollision = function () {
        var w = this.proppertyObj.mark_w;
        var h = this.proppertyObj.mark_h;
        var rect0 = { x: this.self.x - w / 2, y: this.self.y - h / 2, w: w, h: h };
        var role_w = PlayingSceneControl_1.default.instance.role_w;
        var role_h = PlayingSceneControl_1.default.instance.role_h;
        var mainPlane = PlayingSceneControl_1.default.instance.mainPlane;
        var mainPlanePoint = new Laya.Point(mainPlane.x - role_w / 2, mainPlane.y - role_w / 2);
        mainPlane.localToGlobal(mainPlanePoint);
        var roleRect = { x: mainPlanePoint.x, y: mainPlanePoint.y, w: role_w, h: role_h };
        var isCollision = Tool_1.default.rectangleCollisions(rect0, roleRect);
        if (isCollision) {
            PlayingSceneControl_1.default.instance.setBuff(this.proppertyObj);
            this.self.removeSelf();
            Music_1.default.getInstance().playSound(musicToUrl.get_item);
        }
    };
    BuffControl.prototype.onDisable = function () {
        this.self.visible = false;
        Laya.Pool.recover("buff", this.self);
    };
    BuffControl.prototype.onDestroy = function () {
        debugger;
    };
    return BuffControl;
}(Laya.Script));
exports.default = BuffControl;
},{"../Data/MusicEnum":27,"../Tools/Tool":37,"../manage/Music":53,"../playing/PlayingSceneControl":65}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayingSceneControl_1 = require("./PlayingSceneControl");
var JsonEnum_1 = require("../Data/JsonEnum");
var Tool_1 = require("../Tools/Tool");
var Playing_var_1 = require("../manage/Playing_var");
var role_1 = require("../role/role");
var Bullet_boss = /** @class */ (function (_super) {
    __extends(Bullet_boss, _super);
    function Bullet_boss() {
        var _this = _super.call(this) || this;
        /**
         * boss1的普通子弹移动
         */
        _this.delta = 0;
        _this.radius = 0;
        return _this;
    }
    Bullet_boss.prototype.onEnable = function () {
        var _this = this;
        this.self = this.owner;
        this.propertyObj = this.self["vars_"].propertyObj;
        this.bossType = this.propertyObj.fromNick;
        this.delta = 0;
        this.radius = 0;
        this.timeBaoZi_boss1 = Date.now();
        this.baoZiStatus = "shot";
        this.self.visible = true;
        if ((this.bossType === JsonEnum_1.default.enemyToPerfab.boss2 && this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.ion) || this.bossType === JsonEnum_1.default.enemyToPerfab.boss4) {
            var lastRolePos = { x: PlayingSceneControl_1.default.instance.roleObj.x + 60, y: PlayingSceneControl_1.default.instance.roleObj.y + 55 };
            this.movePointVector = new Laya.Point(this.self.x - lastRolePos.x, this.self.y - lastRolePos.y);
            this.movePointVector.normalize();
        }
        else if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss3) {
            Laya.timer.once(4000, this, function () {
                _this.self.visible && _this.self.removeSelf() && (_this.self.visible = false);
            }, null);
        }
        else if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss5) {
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common2 && !this.propertyObj["isBomb"]) {
                this.startTimeB2_boss5 = Date.now();
            }
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common) {
                this.lastChangeType = "create";
                //子弹1
                this.lasChangeTime_boss5 = 0 /*Date.now()*/;
                if (!this.propertyObj["circleDotObj"]) {
                    this.self.alpha = 0;
                    this.notCanCreateNext_boss5 = false;
                }
                else {
                    this.notCanCreateNext_boss5 = true;
                }
            }
        }
    };
    Bullet_boss.prototype.onUpdate = function () {
        if (PlayingSceneControl_1.default.instance.isGamePause) {
            return;
        }
        if (!this.self.visible) {
            return;
        }
        this.hitDetect();
        //是否出屏幕   boss3的普通子弹实时跟随role的暂不 出屏幕销毁
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss4) {
            if (this.self.x < 0 || this.self.y > Laya.stage.height || this.self.x > (Laya.stage.width + this.propertyObj.hitRadius.w * 2) || this.self.y < (-this.propertyObj.hitRadius.h * 2)) {
                this.self.visible = false;
                this.self.removeSelf();
            }
            if (this.self.visible && this.self.y < 100) {
                this.self.visible = false;
                this.self.removeSelf();
            }
        }
        else if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss2) {
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill) {
                if (this.self.x <= 0 || this.self.x >= (Laya.stage.width - 178)) {
                    this.propertyObj.directType = 180 - this.propertyObj.directType;
                }
                if (this.self.y > Laya.stage.height) {
                    this.self.visible = false;
                    this.self.removeSelf();
                }
            }
            else {
                if (this.self.x < 0 || this.self.y > Laya.stage.height || this.self.x > (Laya.stage.width + this.propertyObj.hitRadius.w * 2) || this.self.y < (-this.propertyObj.hitRadius.h * 2)) {
                    this.self.visible = false;
                    this.self.removeSelf();
                }
            }
        }
        else if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss1 || this.bossType === JsonEnum_1.default.enemyToPerfab.boss3 || this.bossType === JsonEnum_1.default.enemyToPerfab.boss4) {
            if (this.self.x < -100 || this.self.x > Laya.stage.width || this.self.y > Laya.stage.height || this.self.y < -100) {
                this.self.visible = false;
                this.self.removeSelf();
            }
        }
        else if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss5) {
            if (this.propertyObj["isBomb"]) {
                if (this.self.x < -100 || this.self.x > Laya.stage.width || this.self.y > Laya.stage.height || this.self.y < -100) {
                    this.self.visible = false;
                    this.self.removeSelf();
                }
            }
            else {
                if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common) {
                }
                else if (this.self.y > (Laya.stage.height + 50)) {
                    this.self.visible = false;
                    this.self.removeSelf();
                }
            }
        }
        else {
            //其它boss通用出屏幕销毁
            if (this.self.x < -100 || this.self.x > Laya.stage.width || this.self.y > Laya.stage.height || this.self.y < -100) {
                this.self.visible = false;
                this.self.removeSelf();
            }
        }
    };
    Bullet_boss.prototype.moveBoss1 = function () {
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss1) {
            var selfAngle = this.propertyObj.directType;
            var defaultSpeed = this.propertyObj.defaultSpeedY;
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common) {
                var markSpeedXY = Tool_1.default.speedLabelByAngle(selfAngle, defaultSpeed, 0.5);
            }
            else if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.display) {
                var markSpeedXY = Tool_1.default.speedLabelByAngle(selfAngle, defaultSpeed, 0.5);
            }
            else if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill2) {
                var markSpeedXY = Tool_1.default.speedLabelByAngle(selfAngle, defaultSpeed, 0.7);
            }
            else {
                var markSpeedXY = Tool_1.default.speedLabelByAngle(selfAngle, defaultSpeed, 0.3);
            }
            this.self.x += markSpeedXY.x;
            this.self.y += markSpeedXY.y;
        }
    };
    Bullet_boss.prototype.calRealDelta = function (delta) {
        if (delta > 360) {
            return 360 - (delta - 360 * Math.floor(delta / 360));
        }
        return 360 - delta;
    };
    Bullet_boss.prototype.moveBoss2 = function () {
        if (this.bossType == JsonEnum_1.default.enemyToPerfab.boss2) {
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common) {
                //普通子弹
                var speedAngle = this.propertyObj.directType * (360 / 30);
                if (speedAngle % 90 === 0) {
                    switch (speedAngle) {
                        case 0:
                        case 360:
                            this.self.x += this.propertyObj.defaultSpeedY * 0.5;
                            break;
                        case 90:
                            this.self.y += this.propertyObj.defaultSpeedY * 0.5;
                            break;
                        case 180:
                            this.self.x -= this.propertyObj.defaultSpeedY * 0.5;
                            break;
                        case 270:
                            this.self.y -= this.propertyObj.defaultSpeedY * 0.5;
                            break;
                        default:
                            console.error("are you kidding me?");
                            break;
                    }
                }
                else {
                    var speedXY = Tool_1.default.speedXYByAngle(speedAngle, this.propertyObj.defaultSpeedY);
                    if (speedAngle > 0 && speedAngle < 180) {
                        this.self.y += Math.abs(speedXY.y) * 0.5;
                    }
                    else if (speedAngle > 180 && speedAngle < 360) {
                        this.self.y -= Math.abs(speedXY.y) * 0.5;
                    }
                    if (speedAngle > 90 && speedAngle < 270) {
                        this.self.x -= Math.abs(speedXY.x) * 0.5;
                    }
                    else {
                        this.self.x += Math.abs(speedXY.x) * 0.5;
                    }
                }
            }
            else if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.ion) {
                //离子炮
                if (this.self.y >= (Laya.stage.height / 3)) {
                    this.self.x -= this.propertyObj.defaultSpeedY * this.movePointVector.x * 0.5 * 0.5;
                    this.self.y -= this.propertyObj.defaultSpeedY * this.movePointVector.y * 0.5 * 0.5;
                }
                else {
                    this.self.x -= this.propertyObj.defaultSpeedY * this.movePointVector.x * 0.5;
                    this.self.y -= this.propertyObj.defaultSpeedY * this.movePointVector.y * 0.5;
                }
            }
            else {
                //龙卷风
                if (this.propertyObj.directType !== 90) {
                    var speedX = Tool_1.default.speedByAngle(this.propertyObj.directType, { y: this.propertyObj.defaultSpeedY }).x;
                    this.self.x += speedX * 0.3;
                }
                this.self.y += this.propertyObj.defaultSpeedY * 0.3;
            }
        }
    };
    Bullet_boss.prototype.moveBoss3 = function () {
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss3) {
            var selfAngle = this.propertyObj.directType;
            var defaultSpeed = this.propertyObj.defaultSpeedY;
            var markSpeedXY = Tool_1.default.speedLabelByAngle(selfAngle, defaultSpeed, 0.3);
            this.self.x += markSpeedXY.x;
            this.self.y += markSpeedXY.y;
            // if (this.propertyObj.bossBulletType === Data.bossBulletType.common) {
            //     //跟随玩家  玩家可以打掉
            //     const markPoint = new Laya.Point(this.self.x - PlayingSceneControl.instance.roleObj.x, this.self.y - PlayingSceneControl.instance.roleObj.y);
            //     markPoint.normalize();
            //     this.self.x -= this.propertyObj.defaultSpeedY * markPoint.x;
            //     this.self.y -= this.propertyObj.defaultSpeedY * markPoint.y;
            // }
        }
    };
    /**
     * 左右手冰怪移动
     */
    Bullet_boss.prototype.moveBoss4 = function () {
        if (this.bossType == JsonEnum_1.default.enemyToPerfab.boss4) {
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common) {
                // this.self.x -= this.propertyObj.defaultSpeedY * this.movePointVector.x;
                this.self.y += this.propertyObj.defaultSpeedY * 0.6;
            }
            else if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common2) {
                var defaultSpeed = this.propertyObj.defaultSpeedY;
                var direct = this.propertyObj.directType;
                // if (direct + 0.5 >= 360) {
                //     direct = (direct + 0.5) - 360;
                // } else {
                //     direct += 0.5;
                // }
                this.self.rotation = direct - 90;
                var markSpeedXY = Tool_1.default.speedLabelByAngle(direct, defaultSpeed, 0.5);
                this.self.x += markSpeedXY.x;
                this.self.y += markSpeedXY.y;
                // this.propertyObj.directType = direct;
            }
            else if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill2) {
                var selfAngle = this.propertyObj.directType;
                var defaultSpeed = this.propertyObj.defaultSpeedY;
                var markSpeedXY = Tool_1.default.speedLabelByAngle(selfAngle, defaultSpeed, 0.3);
                this.self.x += markSpeedXY.x;
                this.self.y += markSpeedXY.y;
            }
            else {
                var rolePos = this.propertyObj.directType;
                this.self.x -= rolePos.x;
                this.self.y -= rolePos.y;
            }
        }
    };
    Bullet_boss.prototype.moveBoss5 = function () {
        if (this.bossType == JsonEnum_1.default.enemyToPerfab.boss5) {
            switch (this.propertyObj.bossBulletType) {
                case JsonEnum_1.default.bossBulletType.common:
                    // this.self.y += this.propertyObj.defaultSpeedY * 0.2;
                    var angle = this.propertyObj.directType;
                    var r = 60 || this.propertyObj["ridus"];
                    var circleDotObj = this.propertyObj["circleDotObj"] || { x: Laya.stage.width / 6, y: 388 };
                    if (this.propertyObj["nowStep"] === 1) {
                        //散开的子弹
                        var speedXy = Tool_1.default.speedLabelByAngle(angle, this.propertyObj.defaultSpeedY, 0.1);
                        this.self.y += speedXy.y;
                        this.self.x += speedXy.x;
                        if (Math.abs(this.self.x - circleDotObj.x) >= r || Math.abs(this.self.y - circleDotObj.y) >= r) {
                            this.propertyObj["canCreateChild"] = true;
                            // switch (angle) {
                            //     case 0:
                            //         this.self.x = circleDotObj.x + r;
                            //         break;
                            //     case 90:
                            //         this.self.y = circleDotObj.y + r;
                            //         break;
                            //     case 180:
                            //         this.self.x = circleDotObj.x - r;
                            //         break;
                            //     case 270:
                            //         this.self.y = circleDotObj.y - r;
                            //         break;
                            //     default:
                            //         break;
                            // }
                            this.propertyObj["ridus"] = Math.abs(this.self.y - circleDotObj.y) || Math.abs(this.self.x - circleDotObj.x);
                            this.propertyObj["nowStep"] = 2;
                        }
                    }
                    else if (this.propertyObj["nowStep"] === 2) {
                        // return;
                        if (--angle) {
                            if (angle < 0) {
                                angle += 360;
                            }
                        }
                        this.propertyObj.directType = angle;
                        var nowSelfPos = Tool_1.default.getRoundPos(this.propertyObj.directType, this.propertyObj["ridus"], circleDotObj);
                        this.self.x = nowSelfPos.x;
                        this.self.y = nowSelfPos.y;
                        if (this.propertyObj["canCreateChild"] && this.propertyObj["createIndex"] < 6 && (++this.lasChangeTime_boss5) % 10 === 0) {
                            this.lasChangeTime_boss5 = 0;
                            this.propertyObj["canCreateChild"] = false;
                            this.propertyObj["createIndex"]++;
                            var markFunc = this.propertyObj["createOneBullet1_boss5"];
                            var nextAngle = this.propertyObj.directType + 20;
                            if (nextAngle > 360) {
                                nextAngle = nextAngle - 360;
                            }
                            var createPos = Tool_1.default.getRoundPos(nextAngle, this.propertyObj["ridus"], circleDotObj);
                            markFunc && markFunc.call(this.propertyObj["functionThis"], createPos, circleDotObj, nextAngle, this.propertyObj["createIndex"], this.self.parent);
                        }
                    }
                    break;
                    if (Date.now() - this.lasChangeTime_boss5 >= 0.02 * 1000) {
                        this.lasChangeTime_boss5 = Date.now();
                        if (this.propertyObj["circleDotObj"]) {
                            if (this.lastChangeType === "create") {
                                this.self.scale(this.self.scaleX * 0.8, this.self.scaleY * 0.8);
                                this.lastChangeType = "scale";
                                if (this.self.scaleX <= Math.pow(0.8, 5)) {
                                    this.self.visible = false;
                                    this.self.removeSelf();
                                }
                            }
                            else {
                                this.lastChangeType = "create";
                                if (this.notCanCreateNext_boss5) {
                                    this.notCanCreateNext_boss5 = false;
                                    var markFunc = this.propertyObj["createOneBullet1_boss5"];
                                    var centerPos = this.propertyObj["circleDotObj"];
                                    //调用createOneBullet1_boss5
                                    var nextAngle = this.propertyObj.directType - 6;
                                    if (nextAngle < 0) {
                                        this.propertyObj.directType = 360 + nextAngle;
                                    }
                                    var nextPos = Tool_1.default.getRoundPos(this.propertyObj.directType, 50 /**103.944**/, centerPos);
                                    markFunc && markFunc.call(this.propertyObj["functionThis"], nextPos.x, nextPos.y, centerPos, nextAngle);
                                }
                            }
                        }
                    }
                    break;
                case JsonEnum_1.default.bossBulletType.common2:
                    if (this.self.scaleX != 1 || this.self.scaleY != 1) {
                        console.error("得到放大倍数X:", this.self.scaleX, "得到放大倍数Y:", this.self.scaleY);
                    }
                    if (this.propertyObj["isBomb"]) {
                        var angle_1 = this.propertyObj.directType;
                        //散开的子弹
                        var speedXy = Tool_1.default.speedLabelByAngle(angle_1, this.propertyObj.defaultSpeedY, 0.3);
                        this.self.x += speedXy.x;
                        this.self.y += speedXy.y;
                    }
                    else {
                        //还未散开
                        this.self.y += this.propertyObj.defaultSpeedY * 0.3;
                        if (Date.now() - this.startTimeB2_boss5 >= 1500) {
                            var markFunc = this.propertyObj["createSpreadB_boss5"];
                            markFunc && markFunc.call(this.propertyObj["functionThis"], this.self.x, this.self.y);
                            this.self.removeSelf();
                        }
                    }
                    break;
                case JsonEnum_1.default.bossBulletType.skill:
                    this.self.y += (this.propertyObj.defaultSpeedY * 0.8);
                    console.log("技能1的y坐标-----", this.self.y, "技能1的x坐标-----", this.self.x);
                    break;
                case JsonEnum_1.default.bossBulletType.skill2:
                    var speedXY = this.propertyObj.directType;
                    this.self.x += speedXY["x"];
                    this.self.y += speedXY["y"];
                    speedXY["y"] += 0.5;
                    console.log("技能2的y坐标-----", this.self.y);
                    break;
                default:
                    break;
            }
        }
    };
    /**
     * hitAndRole
     * 检测和主角的碰撞
     */
    Bullet_boss.prototype.hitDetect = function () {
        if (Playing_var_1.default.getInstance().gameStatus !== "playing") {
            return;
        }
        var roleX = PlayingSceneControl_1.default.instance.roleObj.x + 60;
        var roleY = PlayingSceneControl_1.default.instance.roleObj.y + 55;
        //和role的碰撞
        if ( /*this.bossType !== Data.enemyToPerfab.boss5 && */this.self.visible && Math.abs(roleX - this.self.x - this.propertyObj.hitRadius.w) < (this.propertyObj.hitRadius.w + 60) && Math.abs(roleY - this.self.y - this.propertyObj.hitRadius.h) < (this.propertyObj.hitRadius.h + 55)) {
            if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss3 && this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill) {
                //玩家将会被控制1s
                // toast.noBindScript("已被控制~!");
                // PlayingSceneControl.instance.setRoleControled();
                if (this.propertyObj["setBossFollowVar"]) {
                    this.propertyObj["setBossFollowVar"].call(this.propertyObj["functionThis"]);
                }
            }
            else {
                if (!role_1.default.instance.noHurt) {
                    role_1.default.instance.setRoleHp(this.propertyObj.hurtValue, "子弹");
                    // let nowHp = PlayingSceneControl.instance.roleHp - this.propertyObj.hurtValue;
                    // if (nowHp <= 0) {
                    //     nowHp = 0;
                    //     role.instance.setRoleDead();
                    // }
                    // //现在子弹打到role不无敌
                    // // else {
                    // //     role.instance.startRoleNoHurt();
                    // // }
                    // PlayingSceneControl.instance.roleHp = nowHp;
                    // const mark_graphics = PlayingSceneControl.instance.hpBar.mask.graphics;
                    // mark_graphics.clear();
                    // const markWidth = 49 + (213 / PlayingSceneControl.instance.roleTotal) * nowHp;
                    // mark_graphics.drawRect(0, 0, markWidth, 44, "#ff0000");
                    // PlayingSceneControl.instance.delayHpBar2(markWidth);
                }
            }
            this.self.visible = false;
            this.self.removeSelf();
        }
        else {
            if (this.self.visible) {
                this.moveBoss1();
                this.moveBoss2();
                this.moveBoss3();
                this.moveBoss4();
                this.moveBoss5();
                if (this.propertyObj.isWFboss) {
                    this.bossSet();
                }
                if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss3 || this.bossType === JsonEnum_1.default.enemyToPerfab.boss4) {
                    this.hitDetect_mainBullet();
                }
            }
        }
    };
    // 其余boss综合测试
    Bullet_boss.prototype.bossSet = function () {
        var fromNick = this.owner['vars_'].propertyObj.fromNick;
        switch (fromNick) {
            case "nanguawangzi":
                this.owner["nanGuaWangZi_bullet"].nanGuaWangZi_Move();
                break;
            case "maoWangHou":
                this.owner["maoWangHou_bullet"].maoWangHou_Move();
                break;
            case "dashuren":
                this.owner["daShuRen_bullet"].daShuRen_Move();
                break;
            case "shitoujuren":
                this.owner["shitoujuren_bullet"].shiTouJuRen_Move();
                break;
            case "bingqilinzuhe":
                this.owner["bingqilinzuhe_bullet"].bingQiLinZuHe_Move();
                break;
            case "bingtouxiang":
                this.owner["bingtouxiang_bullet"].bingTouXiang_Move();
                break;
            case "jibaobao":
                this.owner["jibaobao_bullet"].jibaobao_Move();
                break;
            case "zhangyunvhuang":
                this.owner["zhangyunvhuang_bullet"].zhangyunvhuang_Move();
                break;
            case "MediumEnemy_Move":
                this.owner["MediumEnemy_bullet"].bullet_Move();
                break;
            default:
                break;
        }
    };
    /**
     * 检测和主武器子弹的碰撞
     */
    Bullet_boss.prototype.hitDetect_mainBullet = function () {
        //return;
        var bulletParent = PlayingSceneControl_1.default.instance.bulletParent;
        var bulletArray = PlayingSceneControl_1.default.instance.bulletParent._children;
        var i = 0;
        //和主武器（副武器稍后  因为每个副武器的判断半径都不一样）
        for (i; i < bulletArray.length; i++) {
            var bullet = bulletArray[i];
            var bulletX = bullet.x + 14.5;
            var bulletY = bullet.y + 50;
            if (bullet.visible && Math.abs(bulletX - this.self.x - this.propertyObj.hitRadius.w) < (this.propertyObj.hitRadius.w + 14.5) && Math.abs(bulletY - this.self.y - this.propertyObj.hitRadius.h) < (this.propertyObj.hitRadius.h + 50)) {
                this.self.removeSelf();
                bullet.removeSelf();
                break;
            }
        }
    };
    Bullet_boss.prototype.onDisable = function () {
        Laya.timer.clearAll(this);
        this.self.visible = false;
        this.markDirect = null;
        this.self.scale(1, 1);
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss2 && this.propertyObj.bossBulletType !== JsonEnum_1.default.bossBulletType.common) {
            // let recoverName = this.propertyObj.bossBulletType === Data.bossBulletType.skill ? "xuanfeng" : "boss2_pao";
            // Laya.Pool.recover(recoverName, this.self.removeChildAt(this.self.numChildren - 1));
        }
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss1) {
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill) {
                Laya.Pool.recover("zd", this.self.removeChildAt(this.self.numChildren - 1));
            }
            else if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.common2) {
                Laya.Pool.recover("boss2_pao", this.self.removeChildAt(this.self.numChildren - 1));
            }
            this.backSelfImagAndRotation();
        }
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss4) {
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill) {
                Laya.Pool.recover("bingzhui", this.self.removeChildByName("sk"));
            }
            this.backSelfImagAndRotation();
        }
        // if (this.bossType === Data.enemyToPerfab.boss4 || this.bossType === Data.enemyToPerfab.boss5) {
        //     this.backSelfImagAndRotation();
        // }
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss5) {
            if (this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill || this.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill2) {
                Laya.Pool.recover("boss5texiao", this.self.removeChildAt(this.self.numChildren - 1));
                this.backSelfImagAndRotation();
            }
            else {
                this.self.alpha = 1;
                this.notCanCreateNext_boss5 = null;
                //清理部分变量
                var circleDotObj = this.self["vars_"].propertyObj["circleDotObj"];
                circleDotObj && (this.self["vars_"].propertyObj["circleDotObj"] = null);
                var markFunc = this.self["vars_"].propertyObj["createOneBullet1_boss5"];
                markFunc && (this.self["vars_"].propertyObj["createOneBullet1_boss5"] = null);
                var markThat = this.self["vars_"].propertyObj["functionThis"];
                markThat && (this.self["vars_"].propertyObj["functionThis"] = null);
                var isBomb = this.self["vars_"].propertyObj["isBomb"];
                isBomb && (this.self["vars_"].propertyObj["isBomb"] = null);
                var canCreateChild = this.self["vars_"].propertyObj["canCreateChild"];
                canCreateChild && (this.self["vars_"].propertyObj["canCreateChild"] = null);
                var createIndex = this.self["vars_"].propertyObj["createIndex"];
                createIndex && (this.self["vars_"].propertyObj["createIndex"] = null);
            }
        }
        if (this.bossType === JsonEnum_1.default.enemyToPerfab.boss3) {
            this.backSelfImagAndRotation();
        }
        this.backSelfImagAndRotation();
        Laya.Pool.recover(this.propertyObj.nick, this.self);
        // if (PlayingVar.getInstance().gameStatus === "playing") {
        //     Laya.Pool.recover(this.propertyObj.nick, this.self);
        // } else {
        //     Laya.timer.frameOnce(5, this, () => {
        //         this.self.destroy();
        //     });
        // }
    };
    /**
     * 还原img 和 rotation
     */
    Bullet_boss.prototype.backSelfImagAndRotation = function () {
        this.self.rotation = 0;
        var img = this.self.getChildByName("img");
        img.skin = "face/BOSS子弹_01.png";
        img.visible = true;
    };
    Bullet_boss.prototype.onDestroy = function () {
        debugger;
    };
    return Bullet_boss;
}(Laya.Script));
exports.default = Bullet_boss;
},{"../Data/JsonEnum":26,"../Tools/Tool":37,"../manage/Playing_var":55,"../role/role":79,"./PlayingSceneControl":65}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainWeaponData_1 = require("../manage/MainWeaponData");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Bullet_face = /** @class */ (function (_super) {
    __extends(Bullet_face, _super);
    // private propertyObj: BulletCommon;
    function Bullet_face() {
        return _super.call(this) || this;
    }
    Bullet_face.prototype.onEnable = function () {
        this.self = this.owner;
        this.plane = PlayingSceneControl_1.default.instance.mainPlane;
        this.propertyObj = this.self["property"];
        this.bulletSpeed = this.propertyObj.bulletSpeed;
        this.self.scaleX = 1;
        this.self.scaleY = 1;
        this.tail = this.self.getChildByName("tail");
        this.tail.visible = false;
        if (this.propertyObj.BuffType && this.propertyObj.BuffType === 4) {
            this.canMove = false;
            this.calBulletShotSpeed();
            Laya.timer.once(400, this, this.bulletShotType4);
        }
        else if (this.propertyObj.BuffType && this.propertyObj.BuffType === 3) {
            if (this.propertyObj.fireBuffType === 2) {
                //火力增强的导弹
                this.canMove = false;
                this.self.scaleX = 0.4;
                this.self.scaleY = 0.4;
                this.tail.visible = true;
                this.tail.x = this.self.getChildByName("img_pic").x + 1 - 7;
                this.tail.scaleY = 0;
                this.bulletShotFire();
            }
            else if (!this.propertyObj.fireBuffType) {
                this.self.rotation = this.propertyObj.angle - 90 + 180;
                this.canMove = true;
            }
            else {
                this.canMove = true;
            }
        }
        else {
            this.self.rotation = this.propertyObj.angle - 90 + 180;
            this.canMove = true;
        }
    };
    Bullet_face.prototype.calBulletShotSpeed = function () {
        var newPoint = new Laya.Point(this.plane.x, this.plane.y);
        PlayingSceneControl_1.default.instance.roleObj.localToGlobal(newPoint);
        // const pointObj = new Laya.Point(this.self.x - this.plane.x, this.self.y - this.plane.y);
        var pointObj = new Laya.Point(this.self.x - newPoint.x, this.self.y - newPoint.y);
        var mainSpeed = MainWeaponData_1.default.getInstance().bulletSpeed;
        pointObj.normalize();
        this.bulletSpeed.x = mainSpeed * pointObj.x;
        this.bulletSpeed.y = mainSpeed * pointObj.y;
    };
    Bullet_face.prototype.bulletShotFire = function () {
        this.isLeft = this.propertyObj.angle < 0;
        this.self.rotation = this.propertyObj.angle;
        if (this.propertyObj.angle === 30 || this.propertyObj.angle === -30) {
            this.isMissionIn = true;
        }
        else {
            this.isMissionIn = false;
        }
        if (!Laya.Browser.window.daodan) {
            Laya.Browser.window.daodan = [];
        }
        Laya.Browser.window.daodan.push(this.self);
    };
    Bullet_face.prototype.bulletShotType4 = function () {
        var _this = this;
        // this.calBulletShotSpeed();
        Laya.timer.clear(this, this.bulletShotType4);
        this.canMove = true;
        Laya.timer.once(3100, this, function () {
            _this.self.removeSelf();
        });
    };
    Bullet_face.prototype.onTriggerEnter = function (other, self) {
        this.nextFrameCheckTrigger = true;
        var otherSprite = other.owner;
        var propertyObj = otherSprite.vars_ && otherSprite.vars_.propertyObj;
        if (!otherSprite.visible) {
            return;
        }
        if (!otherSprite.parent) {
            return;
        }
        if (propertyObj && propertyObj.prefabType && propertyObj.prefabType === JsonEnum_1.default.prefabType.boss && this.self && this.self["vars_"] && this.self["vars_"].propertyObj && this.self["vars_"].propertyObj.prefabType === JsonEnum_1.default.prefabType.bullletBoss) {
            return;
        }
        if (this.self["vars_"] && this.self["vars_"].disAbleRemove) {
            return;
        }
        if (this.self["vars_"].type && this.self["vars_"].type === 4) {
            // console.log("");
        }
        this.owner.removeSelf();
    };
    Bullet_face.prototype.onUpdate = function () {
        if (PlayingSceneControl_1.default.instance.isGamePause) {
            return;
        }
        if (!this.self.visible) {
            return;
        }
        if (!this.canMove && this.propertyObj.BuffType === 4) {
            // this.propertyObj.markX + PlayingSceneControl.instance.roleObj.x = this.self.x;
            this.self.x = this.propertyObj.markX + PlayingSceneControl_1.default.instance.roleObj.x;
            this.self.y = this.propertyObj.markY + PlayingSceneControl_1.default.instance.roleObj.y;
        }
        if (this.canMove) {
            if (this.propertyObj.BuffType !== 4) {
                if ((this.self.x + this.propertyObj.w) < 0 || this.self.x > Laya.stage.width || (this.self.y + this.self.height / 2) < 0) {
                    this.self.removeSelf();
                    return;
                }
            }
            this.setBulletMove();
        }
        if (!this.canMove && this.propertyObj.BuffType === 3 && this.propertyObj.fireBuffType === 2) {
            var scaleValue = (this.self.scaleX + 0.1) > 1 ? 1 : (this.self.scaleX + 0.1);
            this.self.scaleX = scaleValue;
            var tailScaleValue = (this.tail.scaleY + 0.15) > 1 ? 1 : (this.tail.scaleY + 0.15);
            this.tail.scaleY = tailScaleValue;
            if (this.isLeft) {
                if (this.isMissionIn) {
                    this.self.x -= 10;
                }
                else {
                    this.self.x -= 7;
                }
                this.self.y -= 3 + 3;
                this.self.rotation += 2 + 2;
                if (this.self.rotation >= 0) {
                    this.canMove = true;
                    this.self.rotation = 0;
                    this.self.scaleX = 1;
                    this.self.scaleY = 1;
                    this.tail.scaleY = 1;
                }
            }
            else {
                if (this.isMissionIn) {
                    this.self.x += 10;
                }
                else {
                    this.self.x += 7;
                }
                this.self.y -= 3 + 3;
                this.self.rotation -= 2 + 2;
                if (this.self.rotation <= 0) {
                    this.canMove = true;
                    this.self.rotation = 0;
                    this.self.scaleX = 1;
                    this.self.scaleY = 1;
                    this.tail.scaleY = 1;
                }
            }
        }
    };
    Bullet_face.prototype.setBulletMove = function () {
        if (this.canMove) {
            this.self.x += PlayingSceneControl_1.default.instance.bSpeedRateByBuff2 * this.bulletSpeed.x;
            this.self.y += PlayingSceneControl_1.default.instance.bSpeedRateByBuff2 * this.bulletSpeed.y;
        }
    };
    Bullet_face.prototype.onDisable = function () {
        this.self.getChildByName("img_pic").skin = "face/普通子弹.png";
        this.self.visible = false;
        this.propertyObj = null;
        Laya.Pool.recover(this.owner.name, this.owner);
    };
    return Bullet_face;
}(Laya.Script));
exports.default = Bullet_face;
},{"../Data/JsonEnum":26,"../manage/MainWeaponData":52,"../playing/PlayingSceneControl":65}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("../Tools/Tool");
var Playing_var_1 = require("../manage/Playing_var");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var toast_1 = require("../manage/toast");
var JsonEnum_1 = require("../Data/JsonEnum");
var BattleParse_1 = require("../playing/BattleParse");
var Bullet_second_1 = require("../role/Bullet_second");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var secondSkill = JsonEnum_1.default.secondSkill;
var DropHpStatus = JsonEnum_1.default.dropHpStatus;
var random = Tool_1.default.random;
var rectangleCollisions = Tool_1.default.rectangleCollisions;
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var role_1 = require("../role/role");
var LYpoint = Laya.Point;
var LYTween = Laya.Tween;
var LYImage = Laya.Image;
var BulletInterface_1 = require("../Bullet/BulletInterface");
var BulletType = BulletInterface_1.Bullet.BulletType;
var OpenWx_1 = require("../manage/OpenWx");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var BaoZha_1 = require("../role/BaoZha");
var EndlessManage_1 = require("../manage/EndlessManage");
var EndlessParseSkill_1 = require("../manage/EndlessParseSkill");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        var _this = _super.call(this) || this;
        //初始x上的速度
        _this._speedX = 6;
        _this.attackedStopInterval = 50;
        _this.wuDiInterval = 750;
        _this.shadowOffset = { x: -120 + 90 + 50, y: 140 + 10 + 50 };
        _this.shadowOffset_boss = { x: -160 + 80, y: 240 };
        /**
         * 蛇皮走位
         */
        _this.snakeIndex = 0;
        _this.snakeLikeVar = [];
        return _this;
    }
    Enemy.prototype.onEnable = function () {
        var _this = this;
        // this.markHpArr = 0;
        this.self = this.owner;
        this.self["markScript"] = this;
        this.propertyObj = this.self["vars_"].propertyObj;
        this.wuDiStartTime = Date.now();
        this.propertyObj.setHpBarShowStatus(false);
        this.defaultSpeedY = this.propertyObj.defaultSpeedY;
        this.markSk = this.propertyObj.enmeySprite.getChildByName("EnemySK");
        if (this.markSk) {
            this.markSk.playbackRate(1);
        }
        else {
            var boss_sk = this.self.getChildByName(this.self.name);
            if (boss_sk) {
                boss_sk.playbackRate(1);
            }
        }
        this.childLabel = this.self.getChildAt(0);
        this.childLabel.text = this.propertyObj.hp.toString();
        if (this.propertyObj.e_type !== 2) {
            if (Tool_1.default.random(0, 1) === 0) {
                this._steering = "left";
            }
            else {
                this._steering = "right";
            }
            // this.propertyObj.way && this.initSpecialMove();
        }
        else {
            Laya.timer.frameOnce(2, this, function () {
                _this.propertyObj.playAction(JsonEnum_1.default.bossDragonAction.stand);
            });
        }
        this.self.pos(random(0, Laya.stage.width - this.propertyObj.mark_w - 5), random(-30 - this.propertyObj.mark_h, -5 - this.propertyObj.mark_h));
        this.stopped = false;
        this.secondAttacked = false;
        this.createShadow();
        this.self.visible = true;
        this.secondType = Number(SecondWeaponData_1.default.getInstance().buffType[0]);
        this.effectObj = null;
        //无尽模式技能相关
        this.gameMode = Playing_var_1.default.getInstance().gameModel;
        this.palsyStatus = null;
        this.slowDownStatus = null;
        this.isRollBack_endless = null;
        this.isTriggerDropHp = null;
        this.isImmunityTui_endless = null;
        this.isRollBack_endless = null;
    };
    Enemy.prototype.onUpdate = function () {
        if (PlayingSceneControl_1.default.instance.isGamePause) {
            return;
        }
        if (!this.self.visible) {
            return;
        }
        this.shadow && this.shadow.pos(this.self.x + (this.propertyObj.e_type === 2 ? this.shadowOffset_boss.x : this.shadowOffset.x), this.self.y + (this.propertyObj.e_type === 2 ? this.shadowOffset_boss.y : this.shadowOffset.y));
        if (this.propertyObj.dropHpStatus === DropHpStatus.second8) {
            return;
        }
        this.setMove();
        this.setColliteWall();
        this.checkCollisionRole();
        if (!this.self.visible) {
            return;
        }
        if (this.propertyObj.dropHpStatus === DropHpStatus.born) {
            this.judgeWudiStatus();
        }
        else {
            this.checkCollisionBullet();
        }
        this.setKeepDropHp();
        this.keepDropHp_endless();
        this.palsy_endless();
        this.slowDown_endless();
    };
    Enemy.prototype.createShadow = function () {
        var nowShadowObj = Laya.Pool.getItemByCreateFun("enemyShadow", this.getShadowobj, this);
        nowShadowObj.name = "shadow";
        var parent = PlayingSceneControl_1.default.instance.owner["Clouds"];
        parent.addChild(nowShadowObj);
        var pos = { x: 0, y: 0 };
        if (this.propertyObj.e_type === 2) {
            pos.x = this.shadowOffset_boss.x;
            pos.y = this.shadowOffset_boss.y;
            nowShadowObj.scale(1.5, 1.5);
        }
        else {
            pos.x = this.shadowOffset.x;
            pos.y = this.shadowOffset.y;
            nowShadowObj.scale(0.5, 0.5);
        }
        nowShadowObj.pos(this.self.x + pos.x, this.self.y + pos.y);
        this.shadow = nowShadowObj;
    };
    Enemy.prototype.getShadowobj = function () {
        var img = new LYImage("face/enemy_shadow.png");
        return img;
    };
    Enemy.prototype.judgeWudiStatus = function () {
        if (Date.now() - this.wuDiStartTime >= this.wuDiInterval) {
            this.propertyObj.dropHpStatus = DropHpStatus.ordinary;
            this.propertyObj.setHpBarShowStatus(true);
        }
    };
    /**
     * 非boss碰到墙反向
     */
    Enemy.prototype.setColliteWall = function () {
        if (this.propertyObj.e_type !== 2 && !this.propertyObj.way) {
            //不超过边缘
            if (this.self.x >= (Laya.stage.width - this.propertyObj.mark_w)) {
                this._steering = 'left';
            }
            else if (this.self.x < 0) {
                this._steering = 'right';
            }
        }
        //漂浮技能
        // if (this.self["vars_"].skillType && this.self["vars_"].skillType === secondSkill.flottant) {
        //     if (this.self.y < 0) {
        //         this.self.getComponent(Laya.RigidBody).setVelocity({ x: 0, y: 0 });
        //         return;
        //     }
        // }
        if (this.self.y >= (Laya.stage.height + this.propertyObj.mark_h + 10)) {
            //到底部后再次回到屏幕的上方
            if (this.gameMode === "endless") {
                this.self.removeSelf();
            }
            else {
                this.self.pos(random(0, Laya.stage.width - this.propertyObj.mark_w - 5), random(-30 - this.propertyObj.mark_h, -5 - this.propertyObj.mark_h));
                this.initSpecialMove();
            }
        }
    };
    /**
     * 检测碰撞
     */
    Enemy.prototype.checkCollisionRole = function () {
        if (!this.self.visible) {
            return;
        }
        var role_w = PlayingSceneControl_1.default.instance.role_w;
        var role_h = PlayingSceneControl_1.default.instance.role_h;
        var para = { x: this.self.x, y: this.self.y, w: this.propertyObj.mark_w, h: this.propertyObj.mark_h };
        var mainPlane = PlayingSceneControl_1.default.instance.mainPlane;
        var mainPlanePoint = new LYpoint(mainPlane.x - role_w / 2, mainPlane.y - role_w / 2);
        mainPlane.localToGlobal(mainPlanePoint);
        var roleRect = { x: mainPlanePoint.x, y: mainPlanePoint.y, w: role_w, h: role_h };
        //role和enemy
        var isCollision = rectangleCollisions(para, roleRect);
        if (isCollision) {
            this.setDeadEffect();
            role_1.default.instance.setRoleHp(this.propertyObj.hurtValue, "敌人");
            //无尽计算分数
            EndlessManage_1.default.getInstance().getScore(this.propertyObj.e_type, this.propertyObj.enemyLevel);
            this.self.removeSelf();
        }
    };
    /**
     * 检测碰撞子弹
     */
    Enemy.prototype.checkCollisionBullet = function () {
        if (!this.self.visible || this.propertyObj.dropHpStatus === DropHpStatus.second8) {
            return;
        }
        //子弹和enemey
        var para = { x: this.self.x, y: this.self.y, w: this.propertyObj.mark_w, h: this.propertyObj.mark_h };
        var bullets = PlayingSceneControl_1.default.instance.bulletParent._children;
        var i = 0;
        for (i; i < bullets.length; i++) {
            var oneBullet = bullets[i];
            if (!oneBullet.visible) {
                continue;
            }
            var propertyObj = oneBullet["property"];
            if (!propertyObj.canHitCollision) {
                continue;
            }
            var bulletRect = { x: oneBullet.x, y: oneBullet.y, w: propertyObj.w, h: propertyObj.h };
            var isCollision = rectangleCollisions(para, bulletRect);
            if (isCollision) {
                if (propertyObj.secondType === 8) {
                    this.propertyObj.dropHpStatus = DropHpStatus.second8;
                    this.setDropInEddy(oneBullet);
                    return;
                }
                i--;
                // if (propertyObj.bType === BulletType.roleMainBullet) {
                //     console.error("主武器的子弹的伤害为:", propertyObj.hurtValue);
                // }
                var startHurt = propertyObj.hurtValue;
                // const hurtValue_enhance = this.enhanceFire(startHurt);
                // const hurtValue_endless = this.spike_endless(hurtValue_enhance);
                var hurtValue_endless = this.changeHurtBySkillInEndless(startHurt);
                // if (this.propertyObj.e_type === 2) {
                // debugger
                //}
                this.setEnemyHp(hurtValue_endless, propertyObj.buffValue, oneBullet);
                this.initDropHp_endless();
                this.intiPalsy_endless();
                oneBullet.removeSelf();
                this.initRollBack_endless();
                this.bombFire_endless(startHurt);
                this.initSlowDown_endless();
            }
        }
    };
    Enemy.prototype.setEnemyHp = function (value, buffValue, oneBullet) {
        if (!this.self.visible) {
            return;
        }
        if (this.propertyObj.hp - value <= 0) {
            this.setDeadEffect();
            PlayingSceneControl_1.default.instance.setScreenShake();
            this.setGetBuff(buffValue);
            //无尽计算分数
            EndlessManage_1.default.getInstance().getScore(this.propertyObj.e_type, this.propertyObj.enemyLevel);
            this.self.removeSelf();
            this.vampire_endless();
        }
        else {
            this.propertyObj.hp = this.propertyObj.hp - value;
            this.propertyObj.changeHpProgress();
            oneBullet && this.setHurtEffect();
            oneBullet && this.setAttackedStatus(oneBullet);
        }
        oneBullet && this.initSecondSeven(oneBullet);
    };
    /**
     * 持续掉血的skill (无尽模式技能9)
     */
    Enemy.prototype.keepDropHp_endless = function () {
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            if (this.isTriggerDropHp) {
                if (Date.now() - this.dropHpStartTime >= this.dropHpKeepTime) {
                    this.isTriggerDropHp = false;
                }
                else {
                    if (Date.now() - this.lastDropHpTime >= this.dropHpInterval) {
                        this.lastDropHpTime = Date.now();
                        this.keepDropHpPlayEffect();
                        this.setEnemyHp(this.dropHpValue, null, null);
                    }
                }
            }
        }
    };
    Enemy.prototype.keepDropHpPlayEffect = function () {
        var effectName = EndlessParseSkill_1.default.getInstance().getEffectNameById(9);
        var effectObj = this.self.getChildByName(effectName);
        if (effectObj) {
            effectObj.play("hit", false);
            effectObj.visible = true;
        }
    };
    Enemy.prototype.initDropHp_endless = function () {
        if (!this.self.visible) {
            return;
        }
        var skillInstance = EndlessParseSkill_1.default.getInstance();
        if (Playing_var_1.default.getInstance().gameModel === "endless" && skillInstance.isUpgraded(9) && !this.isTriggerDropHp) {
            this.isTriggerDropHp = true;
            this.dropHpStartTime = Date.now();
            this.lastDropHpTime = Date.now();
            var arg = this.propertyObj.e_type === 2 ? "boss" : "smallEnemy";
            var hurtArr = skillInstance.getSkillNum(9, arg);
            this.dropHpKeepTime = 1000 * hurtArr[0];
            this.dropHpInterval = 1000 * hurtArr[1];
            this.dropHpValue = this.propertyObj.startHp * 0.01 * hurtArr[2];
            var effectName = EndlessParseSkill_1.default.getInstance().getEffectNameById(9);
            if (this.self.getChildByName(effectName)) {
                var skObj = this.self.getChildByName(effectName);
                skObj.play("bz", false);
                skObj.visible = true;
            }
            else {
                EndlessParseSkill_1.default.getInstance().setSkillEffect(9, this.self);
            }
        }
    };
    /**
     * 麻痹敌人
     */
    Enemy.prototype.palsy_endless = function () {
        if (!this.self.visible) {
            return;
        }
        if (this.gameMode === "endless") {
            if (this.palsyStatus === "麻痹中") {
                if (Date.now() - this.palsyStartTime >= this.palsyKeepTime) {
                    this.palsyStatus = "免疫中";
                    this.palsyImmunityStartTime = Date.now();
                    EndlessParseSkill_1.default.getInstance().cancalSkillEffect(10, this.self);
                }
            }
            else if (this.palsyStatus === "免疫中") {
                if (Date.now() - this.palsyImmunityStartTime >= this.palsyImmunityKeepTime) {
                    this.palsyStatus = "无状态";
                }
            }
        }
    };
    Enemy.prototype.intiPalsy_endless = function () {
        if (!this.self.visible) {
            return;
        }
        var skillInstance = EndlessParseSkill_1.default.getInstance();
        if (this.gameMode === "endless" && skillInstance.isUpgraded(10) && (this.palsyStatus === "无状态" || !this.palsyStatus)) {
            this.palsyStatus = "麻痹中";
            this.palsyStartTime = Date.now();
            var from = this.propertyObj.e_type === 2 ? "boss" : "smallEnemy";
            this.palsyKeepTime = 1000 * skillInstance.getSkillNum(10, from);
            this.palsyImmunityKeepTime = 1000 * skillInstance.getImmunityData(10, from);
            EndlessParseSkill_1.default.getInstance().setSkillEffect(10, this.self);
        }
    };
    /**
     * 冰缓敌人
     */
    Enemy.prototype.slowDown_endless = function () {
        if (this.gameMode === "endless") {
            if (this.slowDownStatus === "冰缓中") {
                if (Date.now() - this.slowDownStartTime >= this.slowDownKeepTime) {
                    if (this.sdImmunityKeepTime) {
                        this.slowDownStatus = "免疫中";
                        this.sdImmunityStartTime = Date.now();
                    }
                    else {
                        this.slowDownStatus = null;
                    }
                    //取消冰缓
                    EndlessParseSkill_1.default.getInstance().cancalSkillEffect(12, this.self);
                }
            }
            else if (this.slowDownStatus === "免疫中") {
                if (Date.now() - this.sdImmunityStartTime >= this.sdImmunityKeepTime) {
                    this.slowDownStatus = null;
                }
            }
        }
    };
    Enemy.prototype.initSlowDown_endless = function () {
        if (!this.self.visible) {
            return;
        }
        var skillInstance = EndlessParseSkill_1.default.getInstance();
        if (this.gameMode === "endless" && skillInstance.isUpgraded(12) && (!this.slowDownStatus || this.slowDownStatus === "无状态")) {
            this.slowDownStatus = "冰缓中";
            this.slowDownStartTime = Date.now();
            var from = this.propertyObj.e_type === 2 ? "boss" : "smallEnemy";
            var value = skillInstance.getSkillNum(12, from);
            this.sdPecentValue = (100 - value[0]) * 0.01;
            this.slowDownKeepTime = 1000 * value[1];
            this.sdImmunityKeepTime = skillInstance.getImmunityData(12, from);
            var effectName = EndlessParseSkill_1.default.getInstance().getEffectNameById(12);
            var sk = this.self.getChildByName(effectName);
            if (sk) {
                sk.play("bingshuan", true);
                sk.visible = true;
            }
            else {
                EndlessParseSkill_1.default.getInstance().setSkillEffect(12, this.self);
            }
            if (from === "boss") {
                this.self.getChildByName(effectName).scale(1.3, 1.3);
            }
            else {
                this.self.getChildByName(effectName).scale(1, 1);
            }
        }
    };
    /**
     * 根据技能改变伤害
     */
    Enemy.prototype.changeHurtBySkillInEndless = function (value) {
        var skillInstance = EndlessParseSkill_1.default.getInstance();
        if (this.gameMode === "endless") {
            var addHurt = 0;
            //威力
            if (skillInstance.isUpgraded(2)) {
                var temp = EndlessParseSkill_1.default.getInstance().getSkillNum(2);
                addHurt += value * temp * 0.01;
            }
            //大幅度增强火力
            if (skillInstance.isUpgraded(17)) {
                var valueArr = skillInstance.getSkillNum(17);
                var nowHp = PlayingSceneControl_1.default.instance.roleHp;
                var roleTotal = PlayingSceneControl_1.default.instance.roleTotal;
                if ((nowHp / roleTotal) < 0.3) {
                    addHurt += value * valueArr[1] * 0.01;
                    this.createEnhanceFireEffect();
                }
            }
            //爆头
            if (skillInstance.isUpgraded(14) && this.propertyObj.e_type !== 2) {
                var bate = skillInstance.getSkillProbability(14);
                var randomValue = Tool_1.tools.random(1, 100);
                if (randomValue <= bate) {
                    var pos = { x: this.self.x, y: this.self.y };
                    EndlessParseSkill_1.default.getInstance().setSkillEffect(14, null, pos);
                    addHurt += 10000;
                }
            }
            return value + addHurt;
        }
        return value;
    };
    Enemy.prototype.createEnhanceFireEffect = function () {
        var skName = EndlessParseSkill_1.default.getInstance().getEffectNameById(17);
        var skObj = PlayingSceneControl_1.default.instance.roleObj.getChildByName(skName);
        if (!skObj) {
            EndlessParseSkill_1.default.getInstance().setSkillEffect(17);
        }
    };
    /**
     * 吸血
     */
    Enemy.prototype.vampire_endless = function () {
        var skillInstance = EndlessParseSkill_1.default.getInstance();
        if (this.gameMode === "endless" && skillInstance.isUpgraded(15)) {
            var hp = skillInstance.getSkillNum(15);
            role_1.default.instance.setRoleHp(-hp);
            EndlessParseSkill_1.default.getInstance().setSkillEffect(15);
        }
    };
    /**
     * 重击，击退
     */
    Enemy.prototype.initRollBack_endless = function () {
        var _this = this;
        if (!this.self.visible) {
            return;
        }
        if (this.propertyObj.e_type !== 2 && this.gameMode === "endless") {
            var skillInstance = EndlessParseSkill_1.default.getInstance();
            if (skillInstance.isUpgraded(13) && !this.isRollBack_endless && !this.isImmunityTui_endless) {
                this.rollBackDistance_endless = skillInstance.getSkillNum(13);
                this.immunityTuiInterval_endless = skillInstance.getImmunityData(13, "smallEnemy");
                this.isRollBack_endless = true;
                Laya.Tween.to(this.self, { x: this.self.x, y: this.self.y - this.rollBackDistance_endless }, 400 / 3, Laya.Ease.circOut, Laya.Handler.create(this, function () {
                    _this.isRollBack_endless = false;
                    _this.immunityTuiStartTime_endless = Date.now();
                    _this.isImmunityTui_endless = true;
                    Laya.timer.once(_this.immunityTuiInterval_endless * 1000, _this, function () {
                        _this.isImmunityTui_endless = false;
                    });
                }));
            }
        }
    };
    /**
     * 爆炸伤害
     */
    Enemy.prototype.bombFire_endless = function (value) {
        if (!this.self.visible) {
            return;
        }
        if (this.gameMode === "endless") {
            var skillInstance = EndlessParseSkill_1.default.getInstance();
            if (skillInstance.isUpgraded(11) && !this.isImmunityBomb_endless) {
                this.bombImmunityStartTime_endless = Date.now();
                var from = this.propertyObj.e_type === 2 ? "boss" : "smallEnemy";
                this.bombImmunityInterval_endless = skillInstance.getImmunityData(11, from);
                if (this.bombImmunityInterval_endless) {
                    this.isImmunityBomb_endless = true;
                }
                var arr = skillInstance.getSkillNum(11);
                this.bombValue_endless = value * 0.01 * arr[0];
                this.bombR_endless = arr[1];
                this.startRangeBomb();
                EndlessParseSkill_1.default.getInstance().setSkillEffect(11, this.self);
            }
        }
    };
    Enemy.prototype.startRangeBomb = function () {
        var explosionHurt = this.bombValue_endless;
        var explosionR = this.bombR_endless;
        var enemyArr = PlayingSceneControl_1.default.instance.EnemySpite._children;
        var markNowPoint = new LYpoint(this.self.x, this.self.y);
        var i = 0;
        for (i; i < enemyArr.length; i++) {
            var obj = enemyArr[i];
            var distance = markNowPoint.distance(obj.x, obj.y);
            if (distance < explosionR * 10) {
                if (!obj.visible) {
                    continue;
                }
                var markScript = obj.markScript;
                markScript.setEnemyHp(explosionHurt, null, null);
            }
        }
    };
    /**
     *
     * @param oneBullet 漩涡子弹
     * enemy掉进漩涡
     */
    Enemy.prototype.setDropInEddy = function (oneBullet) {
        var _this = this;
        Laya.Tween.to(this.self, { x: oneBullet.x, y: oneBullet.y, scaleX: 0.1, scaleY: 0.1 }, 500, Laya.Ease.expoInOut, Laya.Handler.create(this, function () {
            _this.setDeadEffect();
            PlayingSceneControl_1.default.instance.setScreenShake();
            _this.setGetBuff(null);
            _this.self.removeSelf();
            _this.self.scale(1, 1);
        }));
    };
    /**
     *
     * @param oneBullet
     * 类型为7的副武器  连环爆炸
     */
    Enemy.prototype.initSecondSeven = function (oneBullet) {
        var propertyObj = oneBullet["property"];
        var bType = propertyObj.bType;
        var secondType = propertyObj.secondType;
        if (bType === BulletType.roleSecondBullet && secondType === 7) {
            var configArr = SecondWeaponData_1.default.getInstance().buffType;
            var powerLevel = SecondWeaponData_1.default.getInstance().getItemPowerLevel();
            var explosionHurt = propertyObj.hurtValue * 0.01 * (Number(configArr[1]) + Number(configArr[2]) * powerLevel);
            var explosionR = powerLevel * Number(configArr[4]) + Number(configArr[3]);
            var enemyArr = PlayingSceneControl_1.default.instance.EnemySpite._children;
            var markNowPoint = new LYpoint(this.self.x, this.self.y);
            var i = 0;
            for (i; i < enemyArr.length; i++) {
                var obj = enemyArr[i];
                var distance = markNowPoint.distance(obj.x, obj.y);
                if (distance < explosionR * 10) {
                    if (!obj.visible) {
                        continue;
                    }
                    var markScript = obj.markScript;
                    markScript.setEnemyHp(explosionHurt, null, null);
                    this.setMissileEffect(obj);
                }
            }
        }
    };
    Enemy.prototype.setAttackedStatus = function (oneBullet) {
        var propertyObj = oneBullet["property"];
        var bType = propertyObj.bType;
        var secondType = propertyObj.secondType;
        if (bType === BulletType.roleMainBullet) {
            this.stopped = true;
        }
        else if (bType === BulletType.roleSecondBullet && !this.secondAttacked) {
            var randomNum = Tool_1.tools.random(1, 100);
            switch (secondType) {
                case 1:
                    if (!propertyObj.affectBate) {
                        console.error("击退的概率有问题需要查看~");
                    }
                    if (propertyObj.affectBate <= randomNum) {
                        var configArr = SecondWeaponData_1.default.getInstance().buffType;
                        var powerLevel = SecondWeaponData_1.default.getInstance().getItemPowerLevel();
                        //击退 
                        this.fightBackDistance = Number(configArr[1]) + powerLevel * Number(configArr[2]);
                        this.secondAttacked = true;
                        this.setBackDistance();
                    }
                    break;
                case 3:
                    //冰缓
                    this.secondWeaponInterval = propertyObj.keepTimeValue;
                    this.setIceSlowEffect(propertyObj);
                    this.secondAttacked = true;
                    break;
                case 4:
                    //激光炮
                    break;
                case 5:
                    //漂浮
                    this.secondWeaponInterval = propertyObj.keepTimeValue;
                    this.setFloatEffect();
                    this.secondAttacked = true;
                    break;
                case 6:
                    //电磁炮会导致麻痹
                    if (!propertyObj.affectBate) {
                        console.error("电磁炮麻痹概率有问题,需要查看~");
                        propertyObj.affectBate = 50;
                    }
                    if (propertyObj.affectBate <= randomNum) {
                        this.secondWeaponInterval = propertyObj.keepTimeValue;
                        this.secondAttacked = true;
                        this.setParalysis();
                    }
                    break;
                case 9:
                    //飞刃
                    this.propertyObj.dropHpStatus = DropHpStatus.second9;
                    this.secondWeaponInterval = propertyObj.keepTimeValue;
                    this.secondAttacked = true;
                    break;
                case 10:
                    //蘑菇炮 概率中毒 持续掉血
                    if (!propertyObj.affectBate) {
                        console.error("蘑菇炮麻痹概率有问题,需要查看~");
                        propertyObj.affectBate = 50;
                    }
                    if (propertyObj.affectBate <= randomNum) {
                        this.propertyObj.dropHpStatus = DropHpStatus.second10;
                        this.secondWeaponInterval = propertyObj.keepTimeValue;
                        this.secondAttacked = true;
                    }
                    break;
                default:
                    break;
            }
            this.attackedTime = Date.now();
        }
    };
    /**
     * 判断是的被攻击
     */
    Enemy.prototype.judgeAttacked = function () {
        if (this.secondAttacked) {
            var secondb_type = Number(SecondWeaponData_1.default.getInstance().buffType[0]);
            //是持续的
            var isNotKeepArr = [1, 7];
            if (!(isNotKeepArr.indexOf(secondb_type) > -1)) {
                if (Date.now() - this.attackedTime >= this.secondWeaponInterval * 1000) {
                    this.secondAttacked = false;
                    this.cancelEffect();
                }
            }
        }
        if (this.stopped) {
            if (Date.now() - this.attackedTime >= this.attackedStopInterval) {
                this.stopped = false;
            }
        }
    };
    Enemy.prototype.setDeadEffect = function () {
        Music_1.default.getInstance().playSound(musicToUrl.bomb);
        this.createEffectInEneny(JsonEnum_1.default.baozhaAni.gwbaozha);
        this.propertyObj.clearTimes();
        BattleParse_1.default.getInstance().killEnemyS++;
        PlayingSceneControl_1.default.instance.setProgressBar();
        OpenWx_1.default.getInstance().vibrateShort();
        Laya.SoundManager.playSound("sound/destroy.wav");
    };
    Enemy.prototype.setHurtEffect = function () {
        Music_1.default.getInstance().playSound(musicToUrl.bullet_normal);
        this.createEffectInEneny(JsonEnum_1.default.baozhaAni.baozha);
    };
    Enemy.prototype.setGetBuff = function (buffValue) {
        //buff是否产出buff
        PlayingSceneControl_1.default.instance.createBuff(this.propertyObj.buffProbabilit, this.self.x, this.self.y);
        // this.createDropGoldIcon();
        this.addGoldMark(buffValue);
    };
    /**
     * 设置移动
     */
    Enemy.prototype.setMove = function () {
        if (this.secondAttacked && this.secondType === 1) {
            //击退不需要移动
            return;
        }
        if (this.isRollBack_endless) {
            //无尽模式击退中
            return;
        }
        if (this.propertyObj.way) {
            // this.specialMove();
            return;
        }
        if (this.palsyStatus === "麻痹中") {
            return;
        }
        this.judgeAttacked();
        var nowSpeed = this.calNowSpeed();
        //无尽模式的冰缓技能
        if (this.gameMode === "endless" && this.slowDownStatus && this.slowDownStatus === "冰缓中") {
            nowSpeed.x = this.sdPecentValue * nowSpeed.x;
            nowSpeed.y = this.sdPecentValue * nowSpeed.y;
        }
        this.self.x += nowSpeed.x;
        this.self.y += nowSpeed.y;
    };
    /**
     * 持续掉血的副武器攻击
     */
    Enemy.prototype.setKeepDropHp = function () {
        if (!this.self.visible) {
            return;
        }
        if (this.secondAttacked) {
            switch (this.propertyObj.dropHpStatus) {
                case DropHpStatus.second10:
                case DropHpStatus.second9:
                    var bArr = SecondWeaponData_1.default.getInstance().buffType;
                    var intervalT = 1000 * Number(bArr[3]);
                    if (Date.now() - this.attackedTime >= intervalT) {
                        this.attackedTime = Date.now();
                        var dropHp = void 0;
                        var hurtValue = Number(SecondWeaponData_1.default.getInstance().getFire());
                        dropHp = Number(bArr[0]) === 9 ? hurtValue * Number(bArr[4]) * 0.01 : this.propertyObj.startHp * Number(bArr[4]) * 0.01;
                        if (this.propertyObj.dropHpStatus === DropHpStatus.second9) {
                            this.setFlyKnife();
                        }
                        else {
                            this.setMushroomEffect();
                        }
                        this.setEnemyHp(dropHp, null, null);
                    }
                    break;
                default:
                    break;
            }
        }
    };
    Enemy.prototype.calNowSpeed = function () {
        var spx = this._speedX;
        var spy = this.defaultSpeedY;
        var speedXy = { x: this._speedX, y: this.defaultSpeedY };
        var secondTypeToAction = { 6: this.getParalysisSpeed, 3: this.getIceSpeed, 5: this.getFloatSpeed };
        if (this.secondAttacked && secondTypeToAction[this.secondType]) {
            return secondTypeToAction[this.secondType].call(this);
        }
        else {
            if (this.stopped) {
                speedXy.y = spy * 0.5;
                if (this._steering === "left") {
                    speedXy.x = -spx * 0.3;
                }
                else {
                    speedXy.x = spx * 0.3;
                }
            }
            else {
                speedXy.y = spy;
                if (this._steering === "left") {
                    speedXy.x = -spx;
                }
                else {
                    speedXy.x = spx;
                }
            }
        }
        if (!PlayingSceneControl_1.default.instance.fighting && this.gameMode === "level") {
            speedXy.x = speedXy.x * PlayingSceneControl_1.default.instance.gameSlowBate;
            speedXy.y = speedXy.y * PlayingSceneControl_1.default.instance.gameSlowBate;
        }
        return speedXy;
    };
    Enemy.prototype.getFloatSpeed = function () {
        var spx = this._speedX;
        var spy = this.defaultSpeedY;
        var speedXy = { x: this._speedX, y: this.defaultSpeedY };
        speedXy.y = this.stopped ? -spy * (0.1 + 0.1 * 0.5) : -spy * 0.1;
        if (this.self.y <= 0) {
            speedXy.y = 0;
        }
        if (this._steering === "left") {
            speedXy.x = -0.1 * spx;
        }
        else {
            speedXy.x = 0.1 * spx;
        }
        return speedXy;
    };
    // getLightSpeed() {
    //     const spx = this._speedX;
    //     const spy = this.defaultSpeedY;
    //     let speedXy = { x: this._speedX, y: this.defaultSpeedY };
    //     if (this.stopped) {
    //         speedXy.y = spy * 0.5;
    //         if (this._steering === "left") {
    //             speedXy.x = -spx * 0.5;
    //         } else {
    //             speedXy.x = spx * 0.5;
    //         }
    //     } else {
    //         speedXy.y = spy;
    //         if (this._steering === "left") {
    //             speedXy.x = -spx;
    //         } else {
    //             speedXy.x = spx;
    //         }
    //     }
    //     return speedXy;
    // }
    Enemy.prototype.getIceSpeed = function () {
        var spx = this._speedX;
        var spy = this.defaultSpeedY;
        var speedXy = { x: this._speedX, y: this.defaultSpeedY };
        speedXy.y = this.stopped ? (0.5 + 0.5 * 0.5) * spy : 0.5 * spy;
        if (this._steering === "left") {
            speedXy.x = -0.5 * spx;
        }
        else {
            speedXy.x = 0.5 * spx;
        }
        return speedXy;
    };
    Enemy.prototype.getParalysisSpeed = function () {
        return { x: 0, y: 0 };
    };
    Enemy.prototype.initSpecialMove = function () {
        this.snakeIndex = 0;
        this.snakeLikeVar = [];
        this.isTracking = null;
        this.trackTween && LYTween.clear(this.trackTween);
        this.isCrashing = null;
        this.crashTween0 && LYTween.clear(this.crashTween0);
        this.crashTween1 && LYTween.clear(this.crashTween1);
        this.crashTween2 && LYTween.clear(this.crashTween2);
    };
    /**
     * 特殊移动怪物
     */
    Enemy.prototype.specialMove = function () {
        switch (this.propertyObj.way) {
            case 1:
                this.snakeLikeMobile();
                break;
            case 2:
                // if (!this.isTracking) {
                this.wirelessTracking();
                // console.error("无限跟踪~~~~~~~~~~~");
                // }
                break;
            case 3:
                if (!this.isCrashing) {
                    this.fixedCrash();
                }
                break;
            default:
                break;
        }
    };
    Enemy.prototype.snakeLikeMobile = function () {
        this.initSnakeLikeMobile(this.snakeIndex);
        var bate = 4;
        if (!PlayingSceneControl_1.default.instance.fighting) {
            bate = bate * PlayingSceneControl_1.default.instance.gameSlowBate;
        }
        this.self.y += this.snakeLikePointObj.y * this.defaultSpeedY * bate;
        if (this.snakeIndex % 2 === 0) {
            if (this.snakeLikePointObj.x > 0) {
                this.self.x += this.snakeLikePointObj.x * this.defaultSpeedY * bate;
            }
            else {
                this.self.x -= this.snakeLikePointObj.x * this.defaultSpeedY * bate;
            }
            if (this.self.x >= (Laya.stage.width - this.propertyObj.mark_w)) {
                this.snakeIndex++;
            }
        }
        else {
            if (this.snakeLikePointObj.x > 0) {
                this.self.x -= this.snakeLikePointObj.x * this.defaultSpeedY * bate;
            }
            else {
                this.self.x += this.snakeLikePointObj.x * this.defaultSpeedY * bate;
            }
            if (this.self.x <= 0) {
                this.snakeIndex++;
            }
        }
    };
    Enemy.prototype.initSnakeLikeMobile = function (index) {
        if (this.snakeLikeVar.indexOf(index) === -1) {
            var stageW = Laya.stage.width;
            var stageH = Laya.stage.height;
            this.snakeLikePointObj = new LYpoint((index % 2 === 0 ? stageW : 0) - this.self.x, (stageH / 4) * (index + 1) - this.self.y);
            this.snakeLikePointObj.normalize();
            this.snakeLikeVar.push(index);
        }
    };
    Enemy.prototype.wirelessTracking = function () {
        var roleObj = PlayingSceneControl_1.default.instance.roleObj;
        var speedXy = 5;
        if (!PlayingSceneControl_1.default.instance.fighting) {
            speedXy = speedXy * PlayingSceneControl_1.default.instance.gameSlowBate;
        }
        var point = new Laya.Point(roleObj.x - this.self.x, roleObj.y - this.self.y); //算出长宽差值
        point.normalize(); //归一化成比例便于控制缩放
        this.self.x += point.x * speedXy;
        this.self.y += point.y * speedXy;
        // //放大这个比例
        // this.trackTween = Laya.Tween.to(this.self, { x: this.self.x + point.x * 3, y: this.self.y + point.y * 3 }, 10, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
        //     this.wirelessTracking();
        // }, []), 0);
    };
    Enemy.prototype.fixedCrash = function () {
        var owner = this.owner; //自己节点
        var roleObj = PlayingSceneControl_1.default.instance.roleObj;
        this.crashTween0 = LYTween.to(owner, { x: owner.x, y: Laya.stage.height / 4 }, 2000, Laya.Ease.elasticInOut, Laya.Handler.create(this, this.fixedCrash1));
    };
    Enemy.prototype.fixedCrash1 = function () {
        var roleObj = PlayingSceneControl_1.default.instance.roleObj;
        this.crashTween1 = LYTween.to(this.self, { x: roleObj.x, y: roleObj.y }, 500, Laya.Ease.sineIn, Laya.Handler.create(this, this.fixedCrash2), 0);
    };
    Enemy.prototype.fixedCrash2 = function () {
        this.crashTween2 = LYTween.to(this.self, { x: this.self.x, y: Laya.stage.height }, 1000, Laya.Ease.sineIn, null, 0);
    };
    //碰撞过后，延迟一帧
    // private nextFrameCheckTrigger: boolean;
    // private markHpArr: number;
    // onTriggerEnter(other: any, self: any) {
    //     //if (!this.nextFrameCheckTrigger) {
    //     const otherSprite: Laya.Sprite = other.owner;
    //     const otherPropertyObj = otherSprite["vars_"] && otherSprite["vars_"].propertyObj;
    //     if (otherPropertyObj && otherPropertyObj.prefabType === Data2.prefabType.enemy) {
    //         if (!this.self.visible) {
    //             return;
    //         }
    //         //console.error("自身碰撞~~~~");
    //         if (!otherPropertyObj.way) {
    //             if (this._steering === "left") {
    //                 this._steering = "right"
    //             } else {
    //                 this._steering = "left"
    //             }
    //             // this.setSpeedRecover();
    //         }
    //         return;
    //     }
    //     if (!otherPropertyObj) {
    //         return;
    //     }
    //     if (otherPropertyObj.e_type === 2) {
    //         return;
    //     }
    //     if (otherPropertyObj.prefabType === Data2.prefabType.bulletSkill && this.propertyObj.enmeySprite.y < (-this.propertyObj.mark_h)) {
    //         return;
    //     }
    //     if (this.propertyObj.e_type !== 2 && otherPropertyObj.prefabType === Data2.prefabType.bulletSkill && otherSprite.y >= otherSprite.getComponent(Laya.BoxCollider).height) {
    //         this.secondBulletHandler(other, self);
    //     }
    //     if (this.propertyObj.prefabType === Data2.prefabType.boss) {
    //         this.propertyObj.playAction(Data2.bossDragonAction.attacked);
    //     }
    //     this.nextFrameCheckTrigger = true;
    //     let xxx = PlayingVar.getInstance().canColorKillEnemy;
    //     if (!PlayingVar.getInstance().canColorKillEnemy) {
    //         if (otherPropertyObj.prefabType === Data2.prefabType.role) {
    //             Music.getInstance().playSound(musicToUrl.bomb);
    //             this.createEffectInEneny(Data2.baozhaAni.gwbaozha);
    //             this.propertyObj.clearTimes();
    //             this.self.removeSelf();
    //             BattleParse.getInstance().killEnemyS++;
    //             PlayingControl.instance.setProgressBar();
    //             Laya.SoundManager.playSound("sound/destroy.wav");
    //             return;
    //         }
    //         if (this.propertyObj.hp - otherPropertyObj.hurtValue == this.markHpArr) {
    //             debugger;
    //         }
    //         this.propertyObj.hp -= otherPropertyObj.hurtValue * 0.15 / 0.15;
    //         this.markHpArr = this.propertyObj.hp;
    //         // console.error("子弹的伤害：", otherPropertyObj.hurtValue);
    //         if (this.propertyObj.hp <= 0) {
    //             // Music.getInstance().playSound(musicToUrl.bullet_normal);
    //             Music.getInstance().playSound(musicToUrl.bomb);
    //             this.createEffectInEneny(Data2.baozhaAni.gwbaozha);
    //             this.propertyObj.clearTimes();
    //             //buff是否产出buff
    //             PlayingControl.instance.createBuff(this.propertyObj.buffProbabilit, this.self.x, this.self.y);
    //             this.createDropGoldIcon();
    //             this.addGoldMark(otherSprite["vars_"].buffValue);
    //             this.self.removeSelf();
    //             //杀死的数量增加
    //             BattleParse.getInstance().killEnemyS++;
    //             PlayingControl.instance.setProgressBar();
    //             Laya.SoundManager.playSound("sound/destroy.wav");
    //         } else {
    //             // Music.getInstance().playSound(musicToUrl.bomb);
    //             this.createEffectInEneny(Data2.baozhaAni.baozha);
    //             this.childLabel.text = this.propertyObj.hp.toString();
    //             this.propertyObj.changeHpProgress();
    //         }
    //     } else {
    //         Laya.timer.frameOnce(1, this, () => {
    //             self.owner.getComponent(Laya.RigidBody).setVelocity({ x: 0, y: 0 });
    //         });
    //     }
    //     /* 
    //  } else {
    //      Laya.timer.frameOnce(1, this, () => {
    //          this.nextFrameCheckTrigger = false;
    //      });
    //  }
    //  */
    //     //console.log("敌人发生了碰撞");
    // }
    Enemy.prototype.addGoldMark = function (value) {
        BattleParse_1.default.getInstance().calKillOneGold(this.propertyObj.enemyId, value || null);
    };
    /**
     * 怪物被子弹攻击后的效果
     * @param type 是被子弹攻击  还是死亡
     */
    Enemy.prototype.createEffectInEneny = function (type) {
        // return;
        if (type === JsonEnum_1.default.baozhaAni.gwbaozha) {
            if (this.owner["vars_"].propertyObj.e_type && this.owner["vars_"].propertyObj.e_type === 2) {
                var baozhaSprite = Laya.Pool.getItemByCreateFun("sign_boss_baozha", this.createBossBaoZha, this);
                baozhaSprite.aniName = "baozha2";
                baozhaSprite.prefabName = "boss_baozha";
            }
            else {
                var baozhaPrefab = Laya.loader.getRes("prefab/xg_baozha.json");
                var baozhaSprite = Laya.Pool.getItemByCreateFun("xg_baozha", baozhaPrefab.create, baozhaPrefab);
                baozhaSprite.aniName = "baozha1";
                baozhaSprite.prefabName = "xg_baozha";
            }
        }
        else {
            var baozhaPrefab = Laya.loader.getRes("prefab/zidan.json");
            var baozhaSprite = Laya.Pool.getItemByCreateFun("zidan", baozhaPrefab.create, baozhaPrefab);
            baozhaSprite.aniName = type;
            baozhaSprite.prefabName = "zidan";
        }
        var offX = random(this.propertyObj.mark_w / 4, this.propertyObj.mark_w * 3 / 4 - 5);
        var offy = random(this.propertyObj.mark_h * 3 / 4 - 30, this.propertyObj.mark_h - 30);
        var posX = this.self.x + offX;
        var posY = this.self.y + offy;
        baozhaSprite.pos(posX, posY);
        PlayingSceneControl_1.default.instance.effectParent.addChild(baozhaSprite);
    };
    Enemy.prototype.createBossBaoZha = function () {
        var templets = SkeletonTempletManage_1.default.getInstance().templets;
        var boss_baoZha = templets["boss_baozha"];
        var sk = boss_baoZha.buildArmature(0);
        sk.addComponent(BaoZha_1.default);
        return sk;
    };
    /**
     *
     * @param name .sk的name
     */
    Enemy.prototype.baoZhaGragonCreate = function (name) {
        return;
    };
    Enemy.prototype.onDisable = function () {
        this.self.visible = false;
        var mainInstance = PlayingSceneControl_1.default.instance;
        this.shadow && Laya.Pool.recover("enemyShadow", this.shadow.removeSelf());
        this.shadow && (this.shadow.visible = false);
        EndlessParseSkill_1.default.getInstance().cancalSkillEffect(9, this.self);
        EndlessParseSkill_1.default.getInstance().cancalSkillEffect(10, this.self);
        //取消冰缓
        EndlessParseSkill_1.default.getInstance().cancalSkillEffect(12, this.self);
        this.isTriggerDropHp = null;
        var markSK = this.self.getChildByName("EnemySK") || this.self;
        markSK && markSK.stop && markSK.stop();
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this.self);
        this.self["vars_"].skillType = null;
        var markSine = this.propertyObj.nick;
        this.cancelEffect();
        if (this.self.getChildByName("Boss_hp")) {
            this.self.getChildByName("Boss_hp").destroy(true);
        }
        if (this.propertyObj && this.propertyObj.e_type && this.propertyObj.e_type === 2) {
            //螃蟹怪 的警告
            var focusRoleObj = mainInstance.roleObj.getChildByName("focusRole");
            if (focusRoleObj) {
                focusRoleObj.removeSelf();
                Laya.Pool.recover("focusRole", focusRoleObj);
            }
            Laya.Pool.recover(markSine, this.self);
            this.propertyObj.clearBossRes();
            if (this.gameMode === "endless" && EndlessManage_1.default.getInstance().isBossFighting) {
                //打死了无尽boss
                if (mainInstance.roleHp > 0) {
                    EndlessManage_1.default.getInstance().endBossFighting();
                }
            }
        }
        else {
            Laya.Pool.recover(markSine, this.self);
        }
        this.propertyObj.clearTimes();
        this.propertyObj = null;
    };
    /**
     * 每杀死一个敌人掉落金币icon
     */
    Enemy.prototype.createDropGoldIcon = function () {
        var goldIcon = Laya.loader.getRes("prefab/DropGold.json");
        var goldObj = Laya.Pool.getItemByCreateFun("DropGold", goldIcon.create, goldIcon);
        goldObj.pos(this.self.x + this.propertyObj.mark_w / 2 - goldObj.width / 2, this.self.y + this.propertyObj.mark_h / 2 - goldObj.height / 2, true);
        PlayingSceneControl_1.default.instance.dropGoldParent.addChild(goldObj);
    };
    /**
     * 设置反向速度
     */
    Enemy.prototype.setSpeedReverse = function () {
        // this.selfRigidBody.setVelocity({ x: 0, y: -this.defaultSpeedY });
    };
    Enemy.prototype.setIceSlowEffect = function (propertyObj) {
        var bate = Math.random();
        var iceBate = propertyObj.affectBate / 100;
        // console.error("冰概率:------", iceBate, "bate:-----", bate);
        if (iceBate > bate) {
            return;
        }
        if (!this.effectObj) {
            var prafabName = JsonEnum_1.default.muzzlePrefabEnemy[SecondWeaponData_1.default.getInstance().buffType[0]];
            var markPrefab = Laya.loader.getRes("prefab/" + prafabName + ".json");
            var prefabObj = Laya.Pool.getItemByCreateFun(prafabName, markPrefab.create, markPrefab);
            this.effectObj = prefabObj;
            prefabObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h / 2);
            this.self.addChild(prefabObj);
            this.markSk && this.markSk.playbackRate(0.01);
        }
    };
    Enemy.prototype.setFloatEffect = function () {
        if (!this.effectObj) {
            this.markSk && this.markSk.playbackRate(0.01);
            this.effectObj = SkeletonTempletManage_1.default.getInstance().createSkByTemplet("xuanfupao");
            this.effectObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h / 2);
            this.effectObj.scale(1, 1);
            this.effectObj.play("pp", true);
            this.self.addChild(this.effectObj);
            // toast.noBindScript("触发麻痹效果~q");
        }
    };
    Enemy.prototype.cancelEffect = function () {
        // if (this.gameMode === "level") {
        if (this.effectObj) {
            this.effectObj.removeSelf();
            this.effectObj = null;
        }
        this.markSk && this.markSk.playbackRate(1);
        this.propertyObj.dropHpStatus = DropHpStatus.ordinary;
        // }
    };
    Enemy.prototype.secondBulletHandler = function (other, self) {
        if (this.self["vars_"] && this.self["vars_"].skillType) {
            Laya.timer.clear(this, this.flottantCall);
            this.self.removeChildByName("paopao");
        }
        var bullet_second = other.owner.getComponent(Bullet_second_1.default);
        var prafabName = JsonEnum_1.default.muzzlePrefabEnemy[SecondWeaponData_1.default.getInstance().buffType[0]];
        var markPrefab = Laya.loader.getRes("prefab/" + prafabName + ".json");
        var prefabObj = Laya.Pool.getItemByCreateFun(prafabName, markPrefab.create, markPrefab);
        this.self.addChild(prefabObj);
        switch (bullet_second.bulletType) {
            case 3:
                prefabObj.name = "paopao";
                prefabObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h / 2);
                // toast.noBindScript("受到了减缓效果!", this.self);
                this.setIce(other, bullet_second);
                break;
            case 4:
                prefabObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h / 2);
                break;
            case 5:
                prefabObj.name = "paopao";
                prefabObj.pos(this.propertyObj.mark_w - this.propertyObj.mark_w / 2, this.propertyObj.mark_h);
                // toast.noBindScript("受到了漂浮效果效果!", this.self);
                this.setFlottant(other, bullet_second);
                break;
            default:
                break;
        }
    };
    /**
     * 冰缓
     */
    Enemy.prototype.setIce = function (other, bullet_second) {
        Laya.timer.once(bullet_second.iceTS[0] * 1000, this, this.iceCall, null, true);
        this.self["vars_"].skillType = secondSkill.ice;
        // this.setSpeedValue(null, bullet_second.iceTS[1]);
        console.error("冰缓~~~");
    };
    Enemy.prototype.iceCall = function () {
        this.self["vars_"].skillType = null;
        this.self.removeChildByName("paopao");
        Laya.timer.clear(this, this.iceCall);
        // this.setSpeedRecover();
    };
    /**
     * 激光
     */
    Enemy.prototype.setLaser = function (other) {
    };
    /**
     * 漂浮
     */
    Enemy.prototype.setFlottant = function (other, bullet_second) {
        this.self["vars_"].skillType = secondSkill.flottant;
        /*
        const img: Laya.Image = Laya.Pool.getItemByCreateFun("flottantCircle", this.createFlottantCircle, this);
        img.pos(this.imgPic.x + (this.imgPic.width / 2) - img.width / 2, this.imgPic.y + (this.imgPic.height / 2) - img.height / 2, true);
        img.name = "paopao";
        this.self.addChild(img);
        console.log(bullet_second.flottantT);
        */
        Laya.timer.once(bullet_second.flottantT * 1000, this, this.flottantCall, null, true);
        this.setSpeedReverse();
        console.log("漂浮~~~");
    };
    Enemy.prototype.flottantCall = function () {
        this.self["vars_"].skillType = null;
        this.self.removeChildByName("paopao");
        Laya.timer.clear(this, this.flottantCall);
        // this.setSpeedRecover();
    };
    /**
     * 创建捆包敌人的圈圈 piaofu
     */
    Enemy.prototype.createFlottantCircle = function () {
        var img = new Laya.Image("secondWeapon/悬浮炮子弹.png");
        img.onDisable = this.imgDisable;
        return img;
    };
    Enemy.prototype.imgDisable = function () {
        console.error("进入了泡泡disable的事件");
        Laya.Pool.recover("flottantCircle", this);
    };
    /**
     * 电磁炮麻痹麻痹
     */
    Enemy.prototype.setParalysis = function () {
        this.markSk && this.markSk.playbackRate(0.01);
        this.effectObj = SkeletonTempletManage_1.default.getInstance().createSkByTemplet("diancipao");
        this.effectObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h / 2);
        this.effectObj.play(1, true);
        this.self.addChild(this.effectObj);
        toast_1.default.noBindScript("触发麻痹效果~q");
    };
    Enemy.prototype.setBackDistance = function () {
        var _this = this;
        this.markSk && this.markSk.playbackRate(0.01);
        this.effectObj = SkeletonTempletManage_1.default.getInstance().createSkByTemplet("liuxingpao");
        this.effectObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h);
        this.effectObj.play(1, true);
        this.self.addChild(this.effectObj);
        var nowY = this.self.y;
        this.backDistanceTween = LYTween.to(this.self, { x: this.self.x, y: this.self.y - this.fightBackDistance }, 100, Laya.Ease.circOut, Laya.Handler.create(this, function () {
            _this.secondAttacked = false;
            _this.cancelEffect();
        }));
    };
    /**
     * 设置蘑菇特效
     */
    Enemy.prototype.setMushroomEffect = function () {
        this.effectObj = SkeletonTempletManage_1.default.getInstance().createSkByTemplet("mogupao");
        this.effectObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h / 2);
        this.effectObj.play(1, false);
        this.effectObj.zOrder = -1;
        this.self.addChild(this.effectObj);
        toast_1.default.noBindScript("触发中毒效果~q");
    };
    /**
     * 设置飞刃的效果
     */
    Enemy.prototype.setFlyKnife = function () {
        this.effectObj = SkeletonTempletManage_1.default.getInstance().createSkByTemplet("feirenfengbao");
        this.effectObj.pos(this.propertyObj.mark_w / 2, this.propertyObj.mark_h / 2);
        this.effectObj.play(1, false);
        this.self.addChild(this.effectObj);
        toast_1.default.noBindScript("触发飞刃效果~q");
    };
    Enemy.prototype.setMissileEffect = function (obj) {
        this.effectObj = SkeletonTempletManage_1.default.getInstance().createSkByTemplet("daodanpao");
        var w = obj.vars_.propertyObj.mark_w;
        var h = obj.vars_.propertyObj.mark_h;
        this.effectObj.pos(w / 2, h / 2);
        this.effectObj.play(1, false);
        obj.addChild(this.effectObj);
        toast_1.default.noBindScript("触发导弹效果~q");
    };
    return Enemy;
}(Laya.Script));
exports.default = Enemy;
},{"../Bullet/BulletInterface":19,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../Tools/Tool":37,"../manage/EndlessManage":46,"../manage/EndlessParseSkill":48,"../manage/Music":53,"../manage/OpenWx":54,"../manage/Playing_var":55,"../manage/SecondWeaponData":56,"../manage/SkeletonTempletManage":57,"../manage/toast":59,"../playing/BattleParse":60,"../playing/PlayingSceneControl":65,"../role/BaoZha":66,"../role/Bullet_second":71,"../role/role":79}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Tool_1 = require("./../Tools/Tool");
var Playing_var_1 = require("../manage/Playing_var");
var EquipUpdate_1 = require("../main/EquipUpdate");
var Buff_1 = require("../role/Buff");
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var BattleParse_1 = require("./BattleParse");
var BitmapFontMananage_1 = require("../manage/BitmapFontMananage");
var MainWeaponData_1 = require("../manage/MainWeaponData");
var BagDataControl_1 = require("../manage/BagDataControl");
var EnemyObject_1 = require("../role/EnemyObject");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var secondWeaponMuzzlePos = JsonEnum_1.default.secondWeaponMuzzlePos;
var secondWeaponPos = JsonEnum_1.default.secondWeaponPos;
var DataType = JsonEnum_1.default.DataType;
var FixedDataTables = DataTables_1.default.FixedDataTables;
var LYstage = Laya.stage;
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var BuffBulletInitialization_1 = require("../role/BuffBulletInitialization");
var toast_1 = require("../manage/toast");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var FireBossBullet1_1 = require("../role/FireBossBullet1");
var OpenWx_1 = require("../manage/OpenWx");
var BulletMain_1 = require("../Bullet/BulletMain");
var BulletInterface_1 = require("../Bullet/BulletInterface");
var BulletType = BulletInterface_1.default.BulletType;
var UpBlackEffect_1 = require("../Effect/UpBlackEffect");
var role_1 = require("../role/role");
var AdaptScene_1 = require("../manage/AdaptScene");
var EndlessManage_1 = require("../manage/EndlessManage");
var EndlessParseSkill_1 = require("../manage/EndlessParseSkill");
var EndlessParseBoss_1 = require("../manage/EndlessParseBoss");
var GameConfig_1 = require("../../GameConfig");
var PlayingControl = /** @class */ (function (_super) {
    __extends(PlayingControl, _super);
    function PlayingControl() {
        var _this = _super.call(this) || this;
        //主飞机的w h,判断 碰撞区域使用
        _this.role_w = 120;
        _this.role_h = 110;
        //是否是攻击状态
        _this._fighting = false;
        _this.enemyCreateTime = 200;
        _this.changeBulletTypeBtn = {};
        // 速度
        _this._moveSpeed = 3;
        _this._weaponDistance = 100;
        //松开 减慢的速率
        _this.gameSlowBate = 0.1;
        _this.canClickBtn = true;
        //上一波已经完全被打完
        _this.lastDestroyAllEnemy = false;
        _this.isABigWave = true;
        /**
         * buff2 子弹的飞行速度
         */
        _this.bSpeedRateByBuff2 = 1;
        _this.enerenergyInterval = 8000;
        _this.canUpdateEnergy = true;
        _this.CREATE_CYCLE_INTERVAL = 100;
        _this.signToTimeAndNum = { "monster": { time: null, num: 30 }, "Bullet_boss": { time: null, num: 60 } };
        _this.cycleIndex = 0;
        Laya.MouseManager.multiTouchEnabled = false;
        PlayingControl.instance = _this;
        _this.game = Laya.Browser.window.game;
        //初始化背包数据(副武器和钻石体力~)
        BagDataControl_1.default.getInstance();
        _this.bulletSpeed = (0.15 - (MainWeaponData_1.default.getInstance().speed - 9) * 0.00075) * 1000;
        // const secondSpeed = SecondWeaponData.getInstance().getSpeed();
        // if (secondSpeed) {
        //     this.bulletSpeedSecond = secondSpeed * 1000/*(0.5 - (SecondWeaponData.getInstance().getSpeed() - 9) * 0.001) * 1000*/;
        // } else {
        //     this.bulletSpeedSecond = 0;
        // }
        _this.updateBulletSpeedSecond();
        return _this;
    }
    PlayingControl.prototype.onAwake = function () {
        AdaptScene_1.default.getInstance().setSceneAdaptHeight();
        AdaptScene_1.default.getInstance().setBG_top(this.owner["hurted_img"]);
    };
    PlayingControl.prototype.onEnable = function () {
        // Laya.Scene.gc();
        Laya.Browser.window.markScene = this;
        this.clearSceneChildRes(GameConfig_1.default.startScene, true);
        // this.sendHttp();
        this.initSomeVarObj();
        this.playMusicAndSound(0, MusicEnum_1.default.musicToUrl.bg_menu);
        Playing_var_1.default.getInstance().gameStatus = "main";
        Playing_var_1.default.getInstance().gameModel = "level";
        this.lastShotTime = Date.now();
        this.lastShotTimeSecond = Date.now();
        this.roleObj.on(Laya.Event.DRAG_MOVE, this, this.listernerDrag);
        //多点触控开启
        //Laya.MouseManager.multiTouchEnabled = true;
        for (var i_1 = 0; i_1 < this.selectModelBtn._children.length; i_1++) {
            var markBtns = this.selectModelBtn.getChildAt(i_1);
            if (i_1 === 1) {
                markBtns.on(Laya.Event.MOUSE_UP, this, this.touchStartEndless);
            }
            else {
                markBtns.on(Laya.Event.CLICK, this, this.touchStartGameBtn);
            }
            markBtns.on(Laya.Event.MOUSE_UP, this, this.touchStartGameBtn);
            markBtns.on(Laya.Event.MOUSE_DOWN, this, this.touchStartGameBtn);
        }
        //money位置的调整
        this.initMoneyPos();
        this.setMoneyData();
        //商店
        this.owner["shopBtn"].on(Laya.Event.CLICK, this, this.openShop);
        Laya.Browser.window.shopBtn = this.owner["shopBtn"];
        //排行
        this.self["rankingBtn"].on(Laya.Event.CLICK, this, this.showRanking);
        Laya.Browser.window.rankingBtn = this.self["rankingBtn"];
        //分享
        this.self["shareBtn"].on(Laya.Event.CLICK, this, this.startShare);
        //暂停
        this.self["pauseBtn"].on(Laya.Event.CLICK, this, this.pauseListerer);
        //签到
        this.self["checkInBtn"].on(Laya.Event.CLICK, this, function () {
            Laya.Scene.open("test/CheckIn_dialog.scene");
        });
        Laya.timer.once(800, this, this.openCheckIn);
        // this.openCheckIn();
        //副武器初始化
        this.setEquipType();
        //初始化间隔时间变量
        this.setTimeIntervalByOne();
        this.initProgressBarAndNum();
        //背景图现在每关都可能不一样
        this.changeBgByLevel();
        //兑换 监听
        var btnArr = ["btn_exchangePower", "btn_exchangeGold", "btn_exchangeDiamond"];
        var i = 0;
        for (i; i < btnArr.length; i++) {
            this.self[btnArr[i]].on(Laya.Event.CLICK, this, this.exchangeGoldAndStone, [i]);
        }
        this.adapteByWX();
        //主武器和副武器 是否可升级 如果升级的话 有升级特效
        this.ckeckCanUpdate();
        //预解析部分关卡用到的龙骨的数据
        this.parseTemplate();
        //预加载部分可能战斗场景需要用到的资源~
        this.preLoadResInPlaying();
        this.preLoadResInPlaying(null, 1);
        this.openRanking();
        Laya.stage.on(Laya.Event.RESIZE, this, this.onResize);
        this.self["startSence"].play(0, false);
        console.error("进入主场景==============================");
    };
    /**
     * 针对微信小游戏，调整屏幕右上角的显示
     */
    PlayingControl.prototype.adapteByWX = function () {
        var _this = this;
        // if (!Laya.Browser.onMiniGame) {
        //     return;
        // }
        var diamondStrs = ["img_progressPlane", "progressLeftLabel", "progressRightLabel", "progressBarEnemyNum", "progressLevel"];
        diamondStrs.forEach(function (item, index) {
            _this.self[item].y += 60;
        });
    };
    PlayingControl.prototype.onResize = function (arg) {
        console.log("onResize----:", arg, "stage.height", Laya.stage.height);
    };
    PlayingControl.prototype.updateBulletSpeedSecond = function () {
        var secondSpeed = SecondWeaponData_1.default.getInstance().getSpeed();
        if (secondSpeed) {
            this.bulletSpeedSecond = secondSpeed * 1000 /*(0.5 - (SecondWeaponData.getInstance().getSpeed() - 9) * 0.001) * 1000*/;
        }
        else {
            this.bulletSpeedSecond = 0;
        }
        console.error("选择:" + Laya.Browser.window.game.secondWeapon.selected + "副武器的速度为:", this.bulletSpeedSecond);
    };
    /**
     * 设置loading界面
     */
    PlayingControl.prototype.setLoadingScene = function () {
        Laya.Scene.open("test/ReqLoading.scene", false, null, Laya.Handler.create(this, function (loading) {
            AdaptScene_1.default.getInstance().setBg(loading["blackSprite"]);
            loading.close();
            loading.zOrder = 3500;
            Laya.Scene.setLoadingPage(loading);
        }));
    };
    /**
     * 更新微信排行榜的数据
     */
    PlayingControl.prototype.wxUserDateUpdate = function () {
        if (Laya.Browser.onMiniGame) {
            var args = { type: 2, data: { level: Laya.Browser.window.game.nowLevel, scores: Playing_var_1.default.getInstance().achieve["endlessTopScore"] } };
            OpenWx_1.default.getInstance().postMsg(args.type, args.data);
        }
    };
    /**
     * 初始化role血量
     */
    PlayingControl.prototype.initRoleHp = function () {
        this.roleHp = MainWeaponData_1.default.getInstance().getRoleHp() || 20;
        this.roleTotal = this.roleHp || 20;
        console.error("飞机总的血量~~~~", this.roleTotal);
        this.label_hpNum.text = this.roleHp + "/" + this.roleTotal;
    };
    // private PlayingVar.getInstance().preResLoaded: boolean;
    PlayingControl.prototype.parseTemplate = function () {
        // SkeletonTempletManage.getInstance().play("buff", "buff", false, null, null);
        var templets = SkeletonTempletManage_1.default.getInstance().templets;
        var templetArr0 = SkeletonTempletManage_1.default.getInstance().TEMPLETARR0 /*["buff", "diancipao", "xuanfupao", "xuhongyinqing", "liuxingpao", "mogupao", "feirenfengbao", "daodanpao", "qpbz", "fanghudun", "jiguangpao", "duye"]*/;
        var templetArr1 = EndlessParseSkill_1.default.getInstance().getSkillEffectIds();
        var templetArr = templetArr0.concat(templetArr1);
        var i = 0;
        for (i; i < templetArr.length; i++) {
            if (!templets || !templets[templetArr[i]]) {
                this.preResNum++;
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, templetArr[i], templetArr[i], true, null, null, Laya.Handler.create(this, this.loadTempletFinish));
            }
        }
        //boss爆炸
        if (!templets || !templets["boss_baozha"]) {
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "boss_baozha", "boss_baozha", true, null, null);
        }
        var bossSkillEffect = SkeletonTempletManage_1.default.getInstance().BOSSSKILLEFFECT /*["xuanfeng", "boss2_pao", "baozi", "zd", "boos4texiao", "bingzhui", "boss5texiao"]*/;
        i = 0;
        for (i; i < bossSkillEffect.length; i++) {
            if (!templets || !templets[bossSkillEffect[i]]) {
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, bossSkillEffect[i], bossSkillEffect[i], true, null, null);
            }
        }
        return;
        switch (Laya.Browser.window.game.nowLevel) {
            case 4:
                //5级得时候触
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "xuanfeng", "xuanfeng", false, null, null);
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "pao", "boss2_pao", false, null, null);
                break;
            case 16:
                //10级别
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "baozha", "baozi", false, null, null);
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "zd", "zd", false, null, null);
                Laya.Pool.clearBySign("boss2_pao");
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "pao", "boss2_pao", false, null, null);
                break;
            case 28:
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "wuqi", "boos4texiao", false, null, null);
                break;
            case 30:
                //20级别
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "bzhui", "bingzhui", false, null, null);
                break;
            case 60:
                //25 级别 火怪 boss5
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "huozhu", "boss5texiao", false, null, null, Laya.Handler.create(this, this.testSk));
                break;
            default:
                break;
        }
        // this.testSk();
    };
    PlayingControl.prototype.loadTempletFinish = function () {
        if (++this.preResIndex === this.preResNum) {
            Playing_var_1.default.getInstance().preResLoaded = true;
            console.error("加载完成11111111111111-------------------");
        }
    };
    // private PlayingVar.getInstance().preResLoaded_e: boolean;
    PlayingControl.prototype.loadTempletFinish_enemy = function () {
        if (++this.preResIndex_e === this.preResNum_e) {
            Playing_var_1.default.getInstance().preResLoaded_e = true;
            // Laya.timer.once(4000, this, () => {
            // })
            console.error("加载完成222222222222222------------------");
        }
    };
    /**
     * 预加载部分战斗中里面需要用到的资源
     */
    PlayingControl.prototype.preLoadResInPlaying = function (loadNext, markLevel) {
        /**
         * 预加载敌人sk模板数据
         */
        var ids = BattleParse_1.default.getInstance().getTempletDateInLevel(loadNext, markLevel);
        var templets = SkeletonTempletManage_1.default.getInstance().templets;
        var i;
        var idsNum = Object.keys(ids).length;
        var names = {};
        for (i in ids) {
            var pic = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.monster, i, "pic");
            if (!templets[pic]) {
                this.preResNum_e++;
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.enemy, null, pic, true, null, null, Laya.Handler.create(this, this.loadTempletFinish_enemy));
            }
            names[pic] = true;
        }
        //销毁不需要的templet纹理   无尽模式的templet存在可优化~
        if (!loadNext && false) {
            for (i in templets) {
                if (templets[i].templetType && templets[i].templetType === JsonEnum_1.default.templetType.enemy) {
                    if (!names[i]) {
                        templets[i].destroy();
                        delete templets[i];
                    }
                }
            }
        }
        // Laya.Browser.window.templets = SkeletonTempletManage.getInstance().templets;
    };
    /**
     * 测试sk的时候使用
     */
    PlayingControl.prototype.testSk = function () {
        //创建放着防止被回收
        //SkeletonTempletManage.getInstance().play("huoqiu", "boss5texiao", true, { x: -80, y: 450 }, Laya.stage, null, "sk");
    };
    PlayingControl.prototype.changeBgByLevel = function () {
        var gameLevel = Laya.Browser.window.game.nowLevel;
        var bgPathName = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.battle, gameLevel, "bg");
        var pngPath = "face/" + bgPathName + ".jpg";
        this.bg_img1.skin = pngPath;
        this.bg_img2.skin = pngPath;
        this.bg_img3.skin = pngPath;
        this.clearBgRes(bgPathName);
    };
    PlayingControl.prototype.clearBgRes = function (bgName) {
        var nameNum = Number(bgName.split("_")[1]);
        if (nameNum > 10) {
            var i = 10;
            while (i < nameNum) {
                var needClearName = "face/" + "bg_" + i + ".png";
                var textureMark = Laya.loader.getRes(needClearName);
                if (textureMark) {
                    Laya.loader.clearRes(textureMark);
                }
                i += 10;
            }
        }
    };
    /**
     * 测试
     */
    PlayingControl.prototype.sendHttp = function () {
        var args = { uuId: Playing_var_1.default.getInstance().uuId, itemID: 104, itemNum: 1 };
        new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
            console.error(e);
        }), HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.ShopItem, JSON.stringify(args));
    };
    PlayingControl.prototype.completeHandler = function (e) {
        console.error(e);
    };
    PlayingControl.prototype.errorHandler = function (e) {
        console.error("错误:", e);
    };
    PlayingControl.prototype.processHandler = function (e) {
        console.error("进程:", e);
    };
    /**
     *
     * @param type muic 还是sound
     * @param soundType 播放的地址
     */
    PlayingControl.prototype.playMusicAndSound = function (type, soundType) {
        if (type) {
            //sound
            Music_1.default.getInstance().playSound(soundType);
        }
        else {
            //musci
            Music_1.default.getInstance().playMusic(soundType);
        }
    };
    PlayingControl.prototype.initSomeVarObj = function () {
        this.self = this.owner;
        this.dropBuffParent = this.self["dropBuffParent"];
        this.bg_img1 = this.owner["bg_01"];
        this.bg_img2 = this.owner["bg_02"];
        this.bg_img3 = this.owner["bg_03"];
        this.cloud_01 = this.owner["cloud_01"];
        this.cloud_02 = this.owner["cloud_02"];
        this.bulletParent = this.self.getChildByName("bulletParent");
        //血量值
        this.label_hpNum = this.self["label_hpNum"];
        //boss子弹的父节点
        this.bulletParent_enemy = this.self["bulletParent_enemy"];
        this.bulletParentUp_enmey = this.self["bulletParentUp_enmey"];
        this.buffProgressParent = this.self["buffProgress"];
        this.EnemySpite = this.self.getChildByName("EnemySpite");
        this.roleObj = this.self.getChildByName("role_name");
        Laya.Browser.window.roleObj = this.roleObj;
        this.roleStatus = null;
        this.secondRoleObj = this.self["secondWeapon"];
        // Laya.Browser.window.secondRoleObj = this.secondRoleObj;
        this.secondRoleObj.visible = this.game.secondWeapon.selected ? true : false;
        this.mainPlane = this.roleObj.getChildAt(0);
        //飞机sk
        this.mainPlane_sk = this.mainPlane.getChildAt(0);
        this.mainPlane_pic = this.self["pic_plane"];
        this.leftSecondWeapon = this.owner["leftSecondWeapon"];
        this.rightSecondWeapon = this.owner["rightSecondWeapon"];
        // this.changeBulletTypeBtn.blue = this.owner.getChildByName("btn_blue") as LYSprite;
        // this.changeBulletTypeBtn.yellow = this.owner.getChildByName("btn_yellow") as LYSprite;
        // this.changeBulletTypeBtn.red = this.owner.getChildByName("btn_red") as LYSprite;
        this.arrowSprite = this.owner.getChildByName("arrow");
        this.selectModelBtn = this.owner.getChildByName("selectModelBtn");
        this.mainLayer = this.owner.getChildByName("main_layer");
        this.playing_layer = this.owner.getChildByName("playing_layer");
        this.moneySprite = this.owner.getChildByName("moneySprite");
        this.dropGoldParent = this.owner["goldDrop"];
        this.hpBar = this.owner["hpBar"];
        this.hpBar2 = this.owner["hpBar2"];
        this.redDot_checkInBtn = this.owner["redDot_checkInBtn"];
        this.img_progressPlane = this.owner["img_progressPlane"];
        this.effectParent = this.owner["effectParent"];
        //buff子弹创建类初始化
        this.buffBulletInit = new BuffBulletInitialization_1.default();
        // Laya.Browser.window.hpBar = this.hpBar;
        this.touchUpEffct = UpBlackEffect_1.default.getInstance();
        this.preResIndex = 0;
        this.preResNum = 0;
        // this.PlayingVar.getInstance().preResLoaded = false;
        this.preResIndex_e = 0;
        this.preResNum_e = 0;
        // this.PlayingVar.getInstance().preResLoaded_e = false;
    };
    /**
     * role拖动的监听
     * @param e
     */
    PlayingControl.prototype.listernerDrag = function () {
        var point = new Laya.Point(this.roleObj.x - this.secondRoleObj.x, this.roleObj.y - this.secondRoleObj.y); //算出长宽差值
        point.normalize(); //归一化成比例便于控制缩放
        var weaponPoint = new Laya.Point(this.secondRoleObj.x, this.secondRoleObj.y);
        var distance = weaponPoint.distance(this.roleObj.x, this.roleObj.y);
        if (distance > this._weaponDistance) {
            this.secondRoleObj.x = this.roleObj.x - point.x * this._weaponDistance;
            this.secondRoleObj.y = this.roleObj.y - point.y * this._weaponDistance;
        }
        this.weaponRegression();
        this.mainPlane_sk.visible && this.mainPlane_sk.play("fly", true);
    };
    PlayingControl.prototype.weaponRegression = function () {
        Laya.Tween.clearAll(this.secondRoleObj);
        Laya.Tween.to(this.secondRoleObj, { x: this.roleObj.x, y: this.roleObj.y }, 100, null, Laya.Handler.create(this, function () {
        }, []), 0, null, true);
    };
    PlayingControl.prototype.initProgressBarAndNum = function () {
        var self = this.owner;
        this.progressBar = self["progressBarEnemyNum"];
        this.progressLeftLabel = self["progressLeftLabel"];
        this.progressRightLabel = self["progressRightLabel"];
        this.haveEnemy = self["haveEnemy"];
        var game = Laya.Browser.window.game;
        this.progressBar.value = 0;
        this.progressLeftLabel.text = JSON.stringify(game.nowLevel);
        this.progressRightLabel.text = JSON.stringify(game.nowLevel + 1);
        this.setProgressBar();
    };
    PlayingControl.prototype.setProgressBar = function () {
        var killEnemyS = BattleParse_1.default.getInstance().killEnemyS;
        var totalNums = BattleParse_1.default.getInstance().getTotalNums();
        var bate = killEnemyS / totalNums;
        this.progressBar.value = bate;
        this.haveEnemy.value = "" + (totalNums - killEnemyS);
        if (bate <= 0.1) {
            this.img_progressPlane.y = 343;
        }
        else if (bate >= 0.97) {
            this.img_progressPlane.y = 90;
        }
        else {
            this.img_progressPlane.y = 343 - (343 - 90) * (bate - 0.1);
        }
    };
    PlayingControl.prototype.openShop = function () {
        if (!this.canClickBtn) {
            return;
        }
        this.setCanTouchVar();
        this.playMusicAndSound(1, musicToUrl.button_normal);
        // toast.noBindScript("稍后开启！");
        // return;
        Laya.Scene.open("test/ShopDialog.scene", false);
    };
    PlayingControl.prototype.setCanTouchVar = function () {
        var _this = this;
        this.canClickBtn = false;
        Laya.timer.once(800, this, function () {
            _this.canClickBtn = true;
        });
    };
    PlayingControl.prototype.showRanking = function () {
        if (!this.canClickBtn) {
            return;
        }
        this.setCanTouchVar();
        this.playMusicAndSound(1, musicToUrl.button_normal);
        if (Laya.Browser.onMiniGame) {
            Laya.Scene.open("test/Ranking.scene", false);
        }
        else {
            toast_1.default.noBindScript("仅支持微信客户端!");
        }
    };
    PlayingControl.prototype.startShare = function () {
        OpenWx_1.default.getInstance().setShare();
    };
    PlayingControl.prototype.openRanking = function () {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            Laya.loader.load(["res/atlas/ranking.atlas"], Laya.Handler.create(this, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/ranking.atlas");
                Laya.timer.once(1000, _this, function () {
                    Laya.Scene.open("test/Ranking.scene", false, null, Laya.Handler.create(_this, function (scene) {
                        scene.close();
                    }));
                    _this.wxUserDateUpdate();
                });
            }));
        }
    };
    PlayingControl.prototype.openCheckIn = function () {
        if (!Playing_var_1.default.getInstance().firstTouchPlay && !Playing_var_1.default.getInstance().checkInData.already) {
            Laya.Scene.open("test/CheckIn_dialog.scene", false);
        }
        this.setRedDotStatus();
    };
    PlayingControl.prototype.setRedDotStatus = function () {
        this.redDot_checkInBtn.visible = !Playing_var_1.default.getInstance().checkInData.already;
    };
    PlayingControl.prototype.openSetting = function () {
        this.playMusicAndSound(1, musicToUrl.button_normal);
        Laya.Scene.open("test/Set.scene", false);
    };
    PlayingControl.prototype.initMoneyPos = function () {
        this.bodyPower = this.self["fc_power"];
        this.gold = this.self["fc_gold"];
        this.diamond = this.self["fc_diamond"];
    };
    PlayingControl.prototype.exchangeGoldAndStone = function (e) {
        this.playMusicAndSound(1, musicToUrl.button_normal);
        if (e === 2) {
            //打开福利~
            toast_1.default.noBindScript("暂未开放!");
        }
        else {
            Laya.Scene.open("test/ExchangeDialog.scene", false, e);
        }
    };
    /**
    * @param type 设置武器的类型
    */
    PlayingControl.prototype.setEquipType = function (type) {
        //let secondEquipUrl = PlayingVar.getInstance().roleSecondaryEquipType ? "face/副武器2.png" : "face/副武器1.png";
        var picCongig = DataTables_1.default.FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.secondaryWeapon, type || this.game.secondWeapon.selected);
        var pic = picCongig.pic;
        this.leftSecondWeapon.skin = "face/" + pic + ".png";
        this.rightSecondWeapon.skin = "face/" + pic + ".png";
        var picNameShadow = "face/" + picCongig.splane_shadow + ".png";
        this.self["shadow_left"].skin = picNameShadow;
        this.self["shadow_right"].skin = picNameShadow;
        this.secondRoleObj.visible = this.game.secondWeapon.selected ? true : false;
        SecondWeaponData_1.default.getInstance().updateWeaponComfig();
        this.setMainWeaponType();
    };
    /**
     * 副武器改变  主武器也会改变
     */
    PlayingControl.prototype.setMainWeaponType = function (type) {
        var markId = type || this.game.secondWeapon.selected;
        var pic = DataTables_1.default.FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.secondaryWeapon, markId, "fly");
        if (!this.mainPlane_sk.templet) {
            Laya.timer.frameLoop(1, this, this.setPlaneSk, [pic]);
        }
        else {
            this.setPlaneSk(pic);
            this.self["shadow_main"].skin = "face/" + pic + "_shadow.png";
        }
        this.mainPlane_pic.visible = false;
        return;
        var skArr = [201, 202, 203];
        if (skArr.indexOf(Number(markId)) > -1) {
            if (!this.mainPlane_sk.templet) {
                Laya.timer.frameLoop(1, this, this.setPlaneSk, [pic]);
            }
            else {
                this.setPlaneSk(pic);
            }
            this.mainPlane_sk.visible = true;
            this.mainPlane_pic.visible = false;
        }
        else {
            this.mainPlane_pic.skin = "face/" + pic + ".png";
            this.mainPlane_sk.visible = false;
            this.mainPlane_pic.visible = true;
        }
    };
    PlayingControl.prototype.setPlaneSk = function (skName) {
        if (this.mainPlane_sk.templet) {
            this.mainPlane_sk.url = "dragonbones/" + skName + ".sk";
            Laya.timer.clear(this, this.setPlaneSk);
        }
    };
    /**
     * 初始化钱币的数值
     */
    PlayingControl.prototype.setMoneyData = function () {
        var power = BagDataControl_1.default.getInstance().getBagDataById("103").num;
        var gold = BagDataControl_1.default.getInstance().getBagDataById("101").num;
        var diamond = BagDataControl_1.default.getInstance().getBagDataById("102").num;
        this.bodyPower.value = Tool_1.default.converteNum(power);
        this.gold.value = Tool_1.default.converteNum(gold);
        this.diamond.value = Tool_1.default.converteNum(diamond);
    };
    PlayingControl.prototype.touchStartEndless = function (e) {
        e.stopPropagation();
        if (!this.canClickBtn) {
            return;
        }
        this.setCanTouchVar();
        if (EquipUpdate_1.default.instance().listVisile()) {
            EquipUpdate_1.default.instance().hideAllList();
            return;
        }
        if (Laya.Browser.window.game.nowLevel < 10) {
            toast_1.default.noBindScript("关卡模式达到10关开启！");
            return;
        }
        this.playMusicAndSound(0, musicToUrl.bg_fight);
        if (!this.judgeEnergyEnough("endless")) {
            // toast.noBindScript("体力不足！");
            var dec = "消耗的物品数量不足,是否前往获得？";
            Laya.Scene.open("test/popDialog.scene", false, { "txt": dec, type: 0 });
            return;
        }
        // if (!EndlessManage.getInstance().isSatisfy()) {
        //     toast.noBindScript("关卡模式通关第十关开启！");
        //     return;
        // }
        // EndlessManage.getInstance().createBuyItemPop();
        BattleParse_1.default.deleteInstance();
        EndlessManage_1.default.getInstance().createUpgradeShortcutByAD();
    };
    PlayingControl.prototype.waitingLoad = function () {
        if (this.isWaiting) {
            if ( /*(Date.now() - this.waitingStartTime >= 5000) || */(Playing_var_1.default.getInstance().preResLoaded && Playing_var_1.default.getInstance().preResLoaded_e)) {
                Laya.Dialog.hideLoadingPage();
                if (Playing_var_1.default.getInstance().gameModel === "endless") {
                    // EndlessManage.getInstance().createBuyItemPop();
                    this.enterEndless();
                }
                else {
                    this.startEnterPlaying();
                }
                this.isWaiting = null;
                Laya.Dialog.hideLoadingPage();
            }
        }
    };
    PlayingControl.prototype.judgeLoadFinish = function () {
        if (!Playing_var_1.default.getInstance().preResLoaded || !Playing_var_1.default.getInstance().preResLoaded_e) {
            this.waitingStartTime = Date.now();
            Laya.Dialog.showLoadingPage();
            this.isWaiting = true;
        }
        else {
            if (Playing_var_1.default.getInstance().gameModel === "endless") {
                this.enterEndless();
            }
            else {
                this.startEnterPlaying();
            }
        }
    };
    PlayingControl.prototype.enterEndless = function () {
        //预加载
        this.preLoadResInPlaying(true);
        // this.sendKillEnergy();
        this.self["endSence"].play(0, false);
        this.playing_layer.visible = true;
        //初始化 无尽模式管理类
        EndlessManage_1.default.getInstance().initEndless();
        if (Playing_var_1.default.getInstance().firstTouchPlay) {
            Laya.Physics.I.start();
        }
        else {
            Playing_var_1.default.getInstance().firstTouchPlay = true;
        }
        //血量初始化
        this.initRoleHp();
        Playing_var_1.default.getInstance().gameStatus = "playing";
    };
    PlayingControl.prototype.touchStartGameBtn = function (e) {
        e.stopPropagation();
        if (e.type === Laya.Event.CLICK) {
            if (!this.canClickBtn) {
                return;
            }
            this.setCanTouchVar();
            if (this.game.nowLevel > 60) {
                toast_1.default.noBindScript("后续关卡暂未开放~");
                return;
            }
            if (EquipUpdate_1.default.instance().listVisile()) {
                EquipUpdate_1.default.instance().hideAllList();
                return;
            }
            if (!this.judgeEnergyEnough()) {
                // toast.noBindScript("体力不足！");
                var dec = "消耗的物品数量不足,是否前往获得？";
                Laya.Scene.open("test/popDialog.scene", false, { "txt": dec, type: 0 });
                return;
            }
            this.playMusicAndSound(1, musicToUrl.button_normal);
            Playing_var_1.default.getInstance().gameModel = "level";
            this.judgeLoadFinish();
        }
    };
    PlayingControl.prototype.startEnterPlaying = function () {
        this.self["endSence"].play(0, false);
        this.playing_layer.visible = true;
        if (Playing_var_1.default.getInstance().firstTouchPlay) {
            Laya.Physics.I.start();
        }
        else {
            Playing_var_1.default.getInstance().firstTouchPlay = true;
        }
        //血量初始化
        this.initRoleHp();
        Playing_var_1.default.getInstance().gameStatus = "playing";
        this.playMusicAndSound(0, musicToUrl.bg_fight);
        this.updateBulletSpeedSecond();
    };
    PlayingControl.prototype.onDisable = function () {
        this.buffBulletInit = null;
    };
    PlayingControl.prototype.onStageMouseDown = function (e) {
        if (e.touches && e.touches.length >= 2) {
            if (e.touchId !== this.markDragTouchId) {
                PlayingControl.roleDragCan = false;
                return;
            }
        }
        else {
            this.markDragTouchId = e.touchId;
        }
        //Laya.stage.mouseX
        //鼠标按下就开始发射子弹
        if (Playing_var_1.default.getInstance().gameStatus !== "playing" && Playing_var_1.default.getInstance().gameStatus !== "preSettlement") {
            return;
        }
        if (this.isGamePause) {
            return;
        }
        this._fighting = true;
        Playing_var_1.default.getInstance().gameModel === "level" && this.touchUpEffct.setHide();
        //增加区域
        if (!this.dragArea) {
            //拖动区域的限制
            this.dragArea = new Laya.Rectangle(0, 0, Laya.stage.width - this.roleObj.width, Laya.stage.height - 150 / 2);
        }
        this.roleObj.startDrag(this.dragArea, false, 0);
        // (this.mainPlane.getChildAt(0) as Laya.Skeleton).play("fly", true);
    };
    PlayingControl.prototype.onStageMouseUp = function (e) {
        //鼠标松开,子弹停止
        if (this.markDragTouchId && this.markDragTouchId != e.touchId) {
            PlayingControl.roleDragCan = true;
            return;
        }
        this.mainPlane_sk.templet && this.mainPlane_sk.play("stand", true);
        //射击声音 停止
        if (this._fighting) {
            Music_1.default.getInstance().stopOneSound(musicToUrl.bullet_normal);
            // PlayingVar.getInstance().gameModel === "level" && this.touchUpEffct.setShow();
        }
        Playing_var_1.default.getInstance().gameModel === "level" && (this._fighting = false);
    };
    PlayingControl.prototype.onStageClick = function (e) {
        if (Playing_var_1.default.getInstance().gameStatus === "main") {
            if (Laya.stage.mouseY < EquipUpdate_1.default.instance().getPosition().y) {
                EquipUpdate_1.default.instance().hideAllList();
            }
        }
        //射击声音
        if (this._fighting) {
            Music_1.default.getInstance().playSound(musicToUrl.bullet_normal, 0);
        }
    };
    PlayingControl.prototype.onUpdate = function () {
        this.updateEnerenergy();
        this.preCreateCycleObject();
        if (!this.isGamePause && this._fighting) {
            if ((Date.now() - this.lastShotTime) >= (this.bulletSpeed)) {
                this.lastShotTime = Date.now();
                this.createBullet();
            }
            this.buffBulletInit.onUpdate();
            //const judgeBuffEnhance = this.judgeBuffEnhance();
            if (Playing_var_1.default.getInstance().gameModel === "level" && this.bulletSpeedSecond && (Date.now() - this.lastShotTimeSecond) >= this.bulletSpeedSecond) {
                this.lastShotTimeSecond = Date.now();
                this.createBulletSecond_muzzle();
            }
            this.setRoleControl();
        }
        //创建敌人和鼠标按下和松开没有关系
        if (!this.isGamePause && Playing_var_1.default.getInstance().gameStatus === "playing") {
            this.createEnemy();
            this.lastDestroyAllEnemy = this.EnemySpite._children.length ? false : true;
            this.countDown_buff();
        }
        else if (Playing_var_1.default.getInstance().gameStatus === "main") {
            this.secondRoleObj.x = this.roleObj.x;
            this.secondRoleObj.y = this.roleObj.y;
        }
        //结算
        if (Playing_var_1.default.getInstance().gameStatus === "settlement") {
            this.secondRoleObj.x = this.roleObj.x;
            this.secondRoleObj.y = this.roleObj.y;
        }
        this.setBgUpdate();
        this.setCloudUpdate();
        EndlessManage_1.default.getInstance().getDistance();
        this.waitingLoad();
    };
    Object.defineProperty(PlayingControl.prototype, "fighting", {
        get: function () {
            return this._fighting;
        },
        set: function (value) {
            this._fighting = value;
        },
        enumerable: true,
        configurable: true
    });
    PlayingControl.prototype.setCloudUpdate = function () {
        if (this.isGamePause) {
            return;
        }
        this.cloud_01.y += this._moveSpeed;
        this.cloud_02.y += this._moveSpeed;
        if (this.cloud_01.y > 0) {
            this.cloud_02.y = this.cloud_01.y - Laya.stage.height;
        }
        if (this.cloud_02.y > 0) {
            this.cloud_01.y = this.cloud_02.y - Laya.stage.height;
        }
    };
    PlayingControl.prototype.setBgUpdate = function () {
        if (this.isGamePause || Playing_var_1.default.getInstance().gameStatus === "settlement" || EndlessManage_1.default.getInstance().isBossFighting) {
            return;
        }
        var bg_imgs = [this.bg_img1, this.bg_img2, this.bg_img3];
        this.bg_img1.y += 1;
        this.bg_img2.y += 1;
        this.bg_img3.y += 1;
        if (this.bg_img2.y > 0) {
            if (this.bg_img1.y > this.bg_img2.y && this.bg_img3.y > this.bg_img2.y) {
                if (this.bg_img1 > this.bg_img3) {
                    this.bg_img1.y = this.bg_img2.y - this.bg_img2.height;
                }
                else {
                    this.bg_img3.y = this.bg_img2.y - this.bg_img2.height;
                }
            }
        }
        if (this.bg_img1.y > 0) {
            if (this.bg_img2.y > this.bg_img1.y && this.bg_img3.y > this.bg_img1.y) {
                if (this.bg_img2.y > this.bg_img3.y) {
                    this.bg_img2.y = this.bg_img1.y - this.bg_img1.height;
                }
                else {
                    this.bg_img3.y = this.bg_img1.y - this.bg_img1.height;
                }
            }
        }
        if (this.bg_img3.y > 0) {
            if (this.bg_img1.y > this.bg_img3.y && this.bg_img2.y > this.bg_img3.y) {
                if (this.bg_img2.y > this.bg_img1.y) {
                    this.bg_img2.y = this.bg_img3.y - this.bg_img3.height;
                }
                else {
                    this.bg_img1.y = this.bg_img3.y - this.bg_img3.height;
                }
            }
        }
        if (!LYstage) {
            return;
        }
        var i = 0;
        for (i = 0; i < bg_imgs.length; i++) {
            if (bg_imgs[i].y > LYstage.height || bg_imgs[i].y < 0) {
                bg_imgs[i].visible = false;
            }
            else {
                bg_imgs[i].visible = true;
            }
        }
    };
    PlayingControl.prototype.createEnemy = function () {
        var gameModel = Playing_var_1.default.getInstance().gameModel;
        var nowWaveFinish = BattleParse_1.default.getInstance().judgeFinishNowWave();
        if (gameModel !== "endless" && this.isABigWave && nowWaveFinish && !BattleParse_1.default.getInstance().judgeNextIsBoss()) {
            this.isABigWave = false;
            this.createWaveEffect();
            return;
        }
        // let judge1: boolean = !nowWaveFinish && (Date.now() - this.lastTimeCreateOne) >= this.timeIntervalByCreate;
        // let judge2: boolean = nowWaveFinish && (Date.now() - this.lastTimeCreateAWave) >= this.timeIntervalByOne;
        // let judge3: boolean = nowWaveFinish && this.lastDestroyAllEnemy;
        var canContinueCreate = this.judgeCanContinueCreate(nowWaveFinish);
        if ((!this.lastTimeCreateOne || ( /*false && */canContinueCreate)) && this.fighting) {
            if (!this.lastTimeCreateAWave) {
                this.lastTimeCreateAWave = Date.now();
            }
            var enemyId = this.calNeedCreateId();
            if (enemyId && !this.stopCreateEnemy) {
                this.lastTimeCreateOne = Date.now();
                this.lastDestroyAllEnemy = false;
                var e_type = FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.monster, enemyId, "type");
                var enemyObj = new EnemyObject_1.default(enemyId);
                this.EnemySpite.addChild(enemyObj.enmeySprite);
            }
            else {
                this.stopCreateEnemy = true;
                //本关怪物全部创建完了
                if (this.lastDestroyAllEnemy) {
                    //BattleParse.deleteInstance();
                    //本关结算
                    Playing_var_1.default.getInstance().gameStatus = "preSettlement";
                    this.removeBulletInStage();
                    Laya.timer.once(1500, this, this.setSuccess);
                }
            }
        }
    };
    PlayingControl.prototype.judgeCanContinueCreate = function (waveFinish) {
        var gameModel = Playing_var_1.default.getInstance().gameModel;
        if (gameModel === "endless" && EndlessManage_1.default.getInstance().isBossFighting) {
            var interval = EndlessParseBoss_1.default.getInstance().getintervalByOne();
            var judge = (Date.now() - this.lastTimeCreateOne) >= interval;
            return judge;
        }
        else {
            var judge1 = !waveFinish && (Date.now() - this.lastTimeCreateOne) >= this.timeIntervalByCreate;
            var judge2 = waveFinish && (Date.now() - this.lastTimeCreateAWave) >= this.timeIntervalByOne;
            var judge3 = waveFinish && this.lastDestroyAllEnemy;
            return judge1 || judge2 || judge3;
        }
    };
    PlayingControl.prototype.calNeedCreateId = function () {
        var gameModel = Playing_var_1.default.getInstance().gameModel;
        var id;
        if (gameModel === "endless" && EndlessManage_1.default.getInstance().isBossFighting) {
            id = EndlessParseBoss_1.default.getInstance().getMonsterId();
        }
        else {
            id = BattleParse_1.default.getInstance().getNextMonsterData();
        }
        return id;
    };
    PlayingControl.prototype.setSuccess = function () {
        var _this = this;
        Playing_var_1.default.getInstance().gameStatus = "settlement";
        this.fighting = false;
        Laya.Browser.window.game.overLevel = true;
        this.roleObj.stopDrag();
        this.setRoleSuccess();
        UpBlackEffect_1.default.getInstance().setHide();
        setTimeout(function () {
            new BitmapFontMananage_1.default.BitmapManage("bitmapFont/settlement_number.fnt", "settlement_number", Laya.Handler.create(_this, function () {
                Laya.Scene.open("test/Settlement_dialog.scene", false);
            }));
            _this.clearObjParent();
            _this.clearObjectPool();
            _this.clearStageSprite();
        }, 1200 + 800);
    };
    /**
     * role胜利后飞出屏幕外
     */
    PlayingControl.prototype.setRoleSuccess = function () {
        var _this = this;
        Laya.Tween.to(this.roleObj, { y: this.roleObj.y - 1600 }, 3000, Laya.Ease.expoIn, Laya.Handler.create(this, function () {
            Laya.Tween.clearAll(_this.roleObj);
        }), 1200);
    };
    PlayingControl.prototype.setLastTimeCreateAWave = function (num) {
        this.lastTimeCreateAWave = num;
    };
    PlayingControl.prototype.setRoleControl = function () {
        if (this.roleStatus && this.roleStatus === JsonEnum_1.default.roleStatus.controled && (Date.now() - this.roleStatusTime) >= 1000) {
            this.roleStatus = null;
            this.roleObj.startDrag();
            toast_1.default.noBindScript("已经解除控制!");
        }
    };
    PlayingControl.prototype.setRoleControled = function () {
        this.roleObj.stopDrag();
        this.roleStatus = JsonEnum_1.default.roleStatus.controled;
        this.roleStatusTime = Date.now();
        // (this.mainPlane.getChildAt(0) as Laya.Skeleton).play("stand", true);
    };
    /**
     * 得到时间间隔 每波和每个
     */
    PlayingControl.prototype.setTimeIntervalByOne = function () {
        var time = FixedDataTables.getInstance().getDataByKey(DataType.battle, this.game.nowLevel, "time");
        this.timeIntervalByOne = 1000 * Number(time);
        this.setLastByCreateTime();
    };
    PlayingControl.prototype.setLastByCreateTime = function (nowInWave) {
        var time = FixedDataTables.getInstance().getDataByKey(DataType.battle, this.game.nowLevel, "time1");
        var timeArr = time.split(";");
        if (nowInWave && nowInWave === 1) {
            var randomRange = timeArr[1].split("|");
            var randomNum = Tool_1.default.random(10 * Number(randomRange[0]), 10 * Number(randomRange[1]));
            var realRandomNum = randomNum / 10;
            this.timeIntervalByCreate = 1000 * realRandomNum;
        }
        else {
            var randomRange = timeArr[0].split("|");
            var randomNum = Tool_1.default.random(10 * Number(randomRange[0]), 10 * Number(randomRange[1]));
            var realRandomNum = randomNum / 10;
            this.timeIntervalByCreate = 1000 * realRandomNum;
            // this.timeIntervalByCreate = 1000 * Number(timeArr[0]);
        }
    };
    PlayingControl.prototype.judgeBulletType1 = function () {
        var backValue = 0;
        var i;
        for (i in this.buffData) {
            if (this.buffData[i].type === 1) {
                var repeatJsonNum = this.buffData[i].repeatJsonNum;
                backValue = 2 * Object.keys(repeatJsonNum).length;
            }
        }
        return backValue;
    };
    PlayingControl.prototype.createBullet = function () {
        var standardPos = { x: this.roleObj.x + 59, y: this.roleObj.y - 3 };
        var buffData = this.buffData;
        var buffValue = this.judgeBulletType1();
        if (buffData && buffValue) {
            //弹幕
            var parityBulletNum = (buffValue + 4) % 2;
            var leftIndex = 0;
            var rightIndex = 0;
            var j = 0;
            var position = { x: 0, y: 0 };
            for (j; j < buffValue + 4; j++) {
                // bullet = this.createBulletObj(buffData[i].bullet);
                if (!parityBulletNum) {
                    if (j % 2) {
                        position.x = standardPos.x + 7.5 + 11 + 20 * rightIndex;
                        position.y = standardPos.y;
                        if (rightIndex % 2) {
                            position.y -= 70 - 3;
                        }
                        rightIndex++;
                    }
                    else {
                        position.x = standardPos.x - 7.5 - 11 - 20 * leftIndex;
                        position.y = standardPos.y;
                        if (leftIndex % 2) {
                            position.y -= 70 - 3;
                        }
                        leftIndex++;
                    }
                }
                else {
                    if (j === 0) {
                        position.x = standardPos.x;
                        position.y = standardPos.y;
                        leftIndex++;
                        rightIndex++;
                    }
                    else if (j % 2) {
                        position.x = standardPos.x - 20 * leftIndex;
                        leftIndex++;
                    }
                    else {
                        position.x = standardPos.x + 20 * rightIndex;
                        rightIndex++;
                    }
                }
                var obj = new BulletMain_1.default(BulletType.roleMainBullet, position, "普通子弹" /*buffData[i].bullet*/);
            }
        }
        else {
            this.deaultbulletCreate();
        }
    };
    PlayingControl.prototype.deaultbulletCreate = function (bulletPic) {
        var standardPos = { x: this.roleObj.x + 58, y: this.roleObj.y - 32 };
        var bulletNumber = this.getBulletNum();
        var isOddNumber = bulletNumber % 2;
        var cycleNum = isOddNumber ? (bulletNumber - 1) / 2 : bulletNumber / 2;
        var index = 0;
        if (isOddNumber) {
            var posXy = { x: 0, y: standardPos.y };
            posXy.x = standardPos.x;
            var obj = new BulletMain_1.default(BulletType.roleMainBullet, posXy, bulletPic);
        }
        while (--cycleNum >= 0) {
            index++;
            var index2 = 0;
            for (index2; index2 < 2; index2++) {
                var posXy = { x: 0, y: standardPos.y };
                posXy.x = index2 ? (standardPos.x - 15 * index - (2.5 + 5 * (index - 1))) : (standardPos.x + 15 * index + (2.5 + 6 * (index - 1)));
                if (isOddNumber && index % 2 !== 0 || (!isOddNumber && index % 2 == 0)) {
                    posXy.y -= 50 + 10;
                }
                var obj = new BulletMain_1.default(BulletType.roleMainBullet, posXy, bulletPic);
            }
        }
        var bulletNumber2 = this.getBevelBullet();
        var temp = 0;
        if (bulletNumber2) {
            bulletNumber2 = bulletNumber2 / 2;
            while (--bulletNumber2 >= 0) {
                index++;
                var index3 = 0;
                for (index3; index3 < 2; index3++) {
                    var posXy = { x: 0, y: standardPos.y };
                    posXy.x = index3 ? (standardPos.x - 15 * index - (2.5 + 5 * (index - 1))) : (standardPos.x + 15 * index + (2.5 + 6 * (index - 1)));
                    var b_angle = index3 ? 270 - 15 - 3 * temp : 270 + 15 + 3 * temp;
                    var obj = new BulletMain_1.default(BulletType.roleMainBullet, posXy, bulletPic, b_angle);
                }
                temp++;
            }
        }
        return;
        var i = 0;
        //现在默认弹幕就是4
        for (i; i < bulletNumber; i++) {
            var posXy = { x: 0, y: standardPos.y };
            switch (i) {
                case 0:
                    posXy.x = standardPos.x + 15 + 2.5;
                    break;
                case 1:
                    posXy.x = standardPos.x - 15 - 2.5;
                    break;
                case 2:
                    posXy.x = standardPos.x + 30 + 8.5;
                    posXy.y -= 50 + 10;
                    break;
                case 3:
                    posXy.x = standardPos.x - 30 - 8.5;
                    posXy.y -= 50 + 10;
                    break;
                default:
                    break;
            }
            var obj = new BulletMain_1.default(BulletType.roleMainBullet, posXy, bulletPic);
        }
    };
    /**
     * 无尽模式斜方向上的弹幕
     */
    PlayingControl.prototype.getBevelBullet = function () {
        var gameModel = Playing_var_1.default.getInstance().gameModel;
        if (gameModel === "endless") {
            var skillInstance = EndlessParseSkill_1.default.getInstance();
            if (skillInstance.isUpgraded(19)) {
                var value = skillInstance.getSkillNum(19);
                return value;
            }
        }
        return 0;
    };
    /**
     * 计算弹幕的条数 (加入无尽模式可能的改变~)
     */
    PlayingControl.prototype.getBulletNum = function () {
        var gameModel = Playing_var_1.default.getInstance().gameModel;
        if (gameModel === "endless") {
            var skillInstance = EndlessParseSkill_1.default.getInstance();
            if (skillInstance.isUpgraded(4)) {
                var value = skillInstance.getSkillNum(4);
                return value + 1;
            }
            else {
                return 1;
            }
        }
        else {
            return 4;
        }
    };
    PlayingControl.prototype.calBulletPos = function (sameBuletNum) {
        switch (sameBuletNum) {
            case 1:
                break;
            case 2:
                break;
            case 3:
                break;
            default:
                break;
        }
    };
    PlayingControl.prototype.createBulletSecond = function () {
        /**
         * 203   x-34 y-20    ||  x+143 y-20
         * 201  x-34 y-80    ||   x+143 y-80
         * 202  x-34 y-80    ||   x+143 y-80
         */
        this.createBIndex == void 0 && (this.createBIndex = 0);
        // const bulletPrefabName = SecondWeaponData.getInstance().bulletPrefab;
        // let prefabClass: LYprefab = Laya.loader.getRes("prefab/" + bulletPrefabName + ".json");
        var markSecondType = Number(SecondWeaponData_1.default.getInstance().buffType[0]);
        var i = this.createBIndex;
        for (i; i < 2; i++) {
            var positionxy = { x: 0, y: 0 };
            if (i) {
                positionxy.x = this.secondRoleObj.x + secondWeaponPos[markSecondType].x[0];
                positionxy.y = this.secondRoleObj.y + secondWeaponPos[markSecondType].y[0];
            }
            else {
                positionxy.x = this.secondRoleObj.x + secondWeaponPos[markSecondType].x[1];
                positionxy.y = this.secondRoleObj.y + secondWeaponPos[markSecondType].y[1];
            }
            var obj = new BulletMain_1.default(BulletType.roleSecondBullet, positionxy);
            // const arr = Laya.Browser.window.secondArr;
            // if (!Laya.Browser.window.secondArr) {
            //     Laya.Browser.window.secondArr = [];
            // }
            // Laya.Browser.window.secondArr.push(obj.bulletObj);
            break;
        }
        if (++this.createBIndex >= 2) {
            this.createBIndex = 0;
        }
    };
    PlayingControl.prototype.createBulletSecond_muzzle = function () {
        /**
         *  - 35, 44   ||143 - 10-5, 44   203副武器位置
         *  - 35, 52  || 143 - 5, 52     201
         *  -32 ,52-8  ||  143,52-8       202
         */
        var buffTypeArr = SecondWeaponData_1.default.getInstance().buffType;
        var buffType = Number(buffTypeArr[0]);
        var prefabName = JsonEnum_1.default.muzzlePrefab[buffType] || "Bullet_muzzle4";
        var prefabClass = Laya.loader.getRes("prefab/" + prefabName + ".json");
        var i = 0;
        for (i; i < 2; i++) {
            var bullet = Laya.Pool.getItemByCreateFun(prefabName, prefabClass.create, prefabClass);
            if (i) {
                // bullet.pos(- 32, 52 + 7);
                bullet.pos(secondWeaponMuzzlePos[buffType].x[0], secondWeaponMuzzlePos[buffType].y[0]);
            }
            else {
                // bullet.pos(143, 52 + 7);
                bullet.pos(secondWeaponMuzzlePos[buffType].x[1], secondWeaponMuzzlePos[buffType].y[1]);
            }
            this.secondRoleObj.addChild(bullet);
        }
    };
    /**
     * 设置buff的持续时间以及倒计时
     * @param proppertyObj
     */
    PlayingControl.prototype.setBuff = function (proppertyObj) {
        if (!this.buffData) {
            this.buffData = {};
        }
        if (this.judgeBuffType5(proppertyObj)) {
            return;
        }
        var buffId = proppertyObj.buffId;
        var sameTypeId = this.getSameTypeBuffId(proppertyObj.type);
        if (!sameTypeId) {
            this.buffData[buffId] = {};
            this.buffData[buffId] = Tool_1.default.copydata(proppertyObj);
            this.buffData[buffId].buffProgress = Laya.Pool.getItemByCreateFun("buffProgress", this.BuffProgress.create, this.BuffProgress);
            //叠加次数
            //叠加次数
            if (this.buffData[buffId].repeatJsonNum) {
                var repeatJsonNum = this.buffData[buffId].repeatJsonNum;
                if (Object.keys(repeatJsonNum).length < 3) {
                    repeatJsonNum.push(buffId);
                }
            }
            else {
                this.buffData[buffId].repeatJsonNum = [];
                this.buffData[buffId].repeatJsonNum.push(buffId);
            }
            this.setBuffRepeatData(this.buffData[buffId]);
            var buffProgress = this.buffData[buffId].buffProgress;
            var imgObj = buffProgress.getChildByName("img_pic");
            imgObj.skin = "buff/" + proppertyObj.icon + ".png";
            var imgObj_mask = buffProgress.getChildByName("img_bg");
            imgObj_mask.skin = "buff/" + proppertyObj.icon + "_遮照.png";
            buffProgress.pos(Laya.stage.width - imgObj.width - 2, 416 + (imgObj.height + 5) * this.getBuffTypeNum());
            var maskObj = buffProgress._children[1].mask;
            maskObj.graphics.clear();
            maskObj.graphics.drawRect(0, 83, 81, 83, "#ff0000");
            // maskObj.graphics.drawPie(55.25, 58, 49, 0, 360, "#ff0000");
            this.buffProgressParent.addChild(buffProgress);
        }
        else {
            if (sameTypeId !== buffId) {
                this.buffData[buffId] = this.buffData[sameTypeId];
                delete this.buffData[sameTypeId];
            }
            //叠加次数
            if (this.buffData[buffId].repeatJsonNum) {
                var repeatJsonNum = this.buffData[buffId].repeatJsonNum;
                if (Object.keys(repeatJsonNum).length < 3) {
                    repeatJsonNum.push(buffId);
                }
            }
            else {
                this.buffData[buffId].repeatJsonNum = [];
                this.buffData[buffId].repeatJsonNum.push(buffId);
            }
            this.setBuffRepeatData(this.buffData[buffId]);
        }
        this.buffData[buffId].nowTime = Date.now();
        this.buffData[buffId].nowTime_otherBuff = Date.now();
        //火力增强弹幕
        var markTime = Date.now();
        this.buffData[buffId].nowTime_fireBuff = [markTime, markTime, markTime];
        this.buffData[buffId].countSecond = 0;
        this.buffBulletInit.initBuffData(this.buffData);
        //速度buff设置速度~~
        this.setSpeedBySpeedBuff(this.buffData[buffId]);
    };
    PlayingControl.prototype.setBuffRepeatData = function (buffData) {
        var repeatJsonNum = buffData.repeatJsonNum;
        var buffConfigs = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.buff);
        switch (buffData.type) {
            case 1:
                buffData["repeateData"] = 2 * Object.keys(repeatJsonNum).length;
                break;
            case 2:
                var i;
                var idsIndex = {};
                buffData["repeateData"] = 0;
                for (i = 0; i < repeatJsonNum.length; i++) {
                    var markId = repeatJsonNum[i];
                    if (idsIndex[markId]) {
                        idsIndex[markId]++;
                    }
                    else {
                        idsIndex[markId] = 1;
                    }
                    var temp = buffConfigs[markId].value.split("#")[idsIndex[markId] - 1];
                    buffData["repeateData"] += Number(temp);
                }
                break;
            case 3:
                var i;
                var idsIndex = {};
                buffData["repeateData"] = 0;
                for (i = 0; i < repeatJsonNum.length; i++) {
                    var markId = repeatJsonNum[i];
                    if (idsIndex[markId]) {
                        idsIndex[markId]++;
                    }
                    else {
                        idsIndex[markId] = 1;
                    }
                    var temp = buffConfigs[markId].value.split("|")[1].split("#")[idsIndex[markId] - 1];
                    buffData["repeateData"] += Number(temp);
                }
                break;
            default:
                break;
        }
    };
    /**
     * 判断是否是加血buff以及进行 加血
     */
    PlayingControl.prototype.judgeBuffType5 = function (proppertyObj) {
        if (proppertyObj.type === 5) {
            role_1.default.instance.setRoleHp(-proppertyObj.buffValue);
            return true;
        }
        return false;
    };
    /**
     * 得到buff类型总数
     */
    PlayingControl.prototype.getBuffTypeNum = function () {
        var typeArr = [];
        var i;
        for (i in this.buffData) {
            var markType = this.buffData[i].type;
            if (typeArr.indexOf(markType) === -1) {
                typeArr.push(markType);
            }
        }
        return typeArr.length;
    };
    /**
     * 得到buffData中type相同的id
     */
    PlayingControl.prototype.getSameTypeBuffId = function (buffType) {
        var i;
        for (i in this.buffData) {
            if (this.buffData[i].type === buffType) {
                return Number(i);
            }
        }
        return null;
    };
    /**
     * 在胜利或者失败后清除主界面的sprite
     */
    PlayingControl.prototype.clearStageSprite = function () {
        this.buffProgressParent.removeChildren(0, this.buffProgressParent.numChildren - 1);
    };
    /**
     * 清理对象
     */
    PlayingControl.prototype.clearObject = function () {
    };
    /**
     * buff效果的倒计时
     */
    PlayingControl.prototype.countDown_buff = function () {
        if (!this.buffData || !Object.keys(this.buffData).length) {
            return;
        }
        var i;
        for (i in this.buffData) {
            var proppertyObj = this.buffData[i];
            if (Date.now() - proppertyObj.nowTime >= 100) {
                proppertyObj.nowTime = Date.now();
                proppertyObj.countSecond++;
                var buffLastTime = proppertyObj.buffLastTime;
                var buffProgress = proppertyObj.buffProgress;
                var maskObj = buffProgress._children[1].mask;
                maskObj.graphics.clear();
                maskObj.graphics.drawRect(0, 83 - proppertyObj.countSecond * (83 / (buffLastTime * 10)), 81, 83, "#ff0000");
                if ((proppertyObj.countSecond / 10) >= buffLastTime) {
                    var percentNum = (buffLastTime - proppertyObj.countSecond) / buffLastTime;
                    buffProgress.removeSelf();
                    if (this.buffData[i].type === 2) {
                        this.bulletSpeed = (0.15 - (MainWeaponData_1.default.getInstance().speed - 9) * 0.00075) * 1000;
                        this.bSpeedRateByBuff2 = 1;
                    }
                    delete this.buffData[i];
                }
            }
        }
    };
    PlayingControl.prototype.createBuff = function (buffProbabilit, posx, posy, parent) {
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            return;
        }
        if (!buffProbabilit) {
            return;
        }
        var bate = Number(buffProbabilit[1]);
        var randomNum = Tool_1.default.random(1, 100);
        if (randomNum >= 1 && randomNum <= (bate)) {
            var buffObj = new Buff_1.default(Number(buffProbabilit[0]), posx, posy);
        }
    };
    /**
     * 判断是否吃到了增强射速的buff
     */
    PlayingControl.prototype.judgeBuffEnhance = function () {
        // const buffData = this.buffData;
        // let i: string;
        // for (i in buffData) {
        //     if (buffData[i].type === 2) {
        //         this.bulletSpeed = (0.15 - (buffData[i].buffValue * MainWeaponData.getInstance().speed - 9) * 0.001) * 1000;
        //         return;
        //     }
        // }
        // return false;
    };
    PlayingControl.prototype.setSpeedBySpeedBuff = function (buff) {
        if (buff.type === 2) {
            if (buff.speedBate) {
                this.bulletSpeed = (0.15 - (buff.speedBate * MainWeaponData_1.default.getInstance().speed - 9) * 0.00075) * 1000;
            }
            if (buff.buffValue) {
                this.bSpeedRateByBuff2 = 1 + buff["repeateData"];
            }
        }
    };
    /**
     * 无尽模式 的技能 设置速度
     */
    PlayingControl.prototype.setSpeedByEndless = function (value) {
        // this.bulletSpeed
        var temp = (0.15 - (MainWeaponData_1.default.getInstance().speed * (1 + value * 0.01) - 9) * 0.00075) * 1000;
        this.bulletSpeed = temp;
    };
    /**
     * 得到boss的坐标
     */
    PlayingControl.prototype.getBossPos = function () {
        var index = this.EnemySpite.numChildren - 1;
        if (index >= 0) {
            var bossObj = this.EnemySpite._children[index];
            return { x: bossObj.x, y: bossObj.y };
        }
        else {
            return { x: 0, y: 0 };
        }
    };
    /**
     * 判断是否吃到了增加金币数量得buff
     */
    // judgeBuffGold() {
    //     const buffData = this.buffData;
    //     let i: string;
    //     for (i in buffData) {
    //         if (buffData[i].type === 4) {
    //             return Number(buffData[i].buffValue);
    //         }
    //     }
    //     return false;
    // }
    /**
     * 清理对象池对象
     */
    PlayingControl.prototype.clearObjectPool = function () {
        Laya.Pool.clearBySign("DropGold");
        // Laya.Pool.clearBySign("monster");
        Laya.Pool.clearBySign("fireBossB1");
    };
    /**
     * 清理父容器中的子对象
     */
    PlayingControl.prototype.clearObjParent = function () {
        this.dropGoldParent.destroyChildren();
        var enemySpiteArr = this.EnemySpite._children;
        var i = 0;
        for (i; i < enemySpiteArr.length; i++) {
            enemySpiteArr[i]["vars_"].propertyObj.clearTimes();
        }
        //清除子弹得对象池
        // Laya.Pool.clearBySign("Bullet_boss");
        this.removeBulletInStage();
        if (this.EnemySpite._children.length) {
            if (this.EnemySpite._children[0].vars_.propertyObj.e_type === 2) {
                this.EnemySpite.removeChildren();
            }
            else {
                this.EnemySpite.removeChildren();
            }
        }
        FireBossBullet1_1.default.getItems().forEach(function (item) {
            item.destroyChildren();
            item.destroy();
        });
        this.dropBuffParent.removeChildren();
    };
    /**
     * 从显示列表中红移除子弹
     */
    PlayingControl.prototype.removeBulletInStage = function () {
        // Laya.Pool.clearBySign("Bullet_boss");
        this.self["bulletParent_enemy"].removeChildren();
        this.self["bulletParentUp_enmey"].removeChildren();
        this.bulletParent.removeChildren();
    };
    PlayingControl.prototype.pauseListerer = function () {
        EndlessManage_1.default.getInstance().showSkills();
    };
    /**
     * 暂停游戏
     */
    PlayingControl.prototype.pauseGame = function (type) {
        // const arrayObj = [this.roleObj, this.leftSecondWeapon, this.rightSecondWeapon, PlayingControl.instance.mainPlane];
        // arrayObj.forEach((item, index) => {
        //     item.visible = !!type;
        // });
        // if (type) {
        //     Laya.timer.scale = 1;
        //     // Laya.Physics.I.start();
        //     PlayingVar.getInstance().gameStatus = "playing";
        // } else {
        //     Laya.timer.scale = 0;
        //     // Laya.Physics.I.stop();
        // }
        this.startPauseTime = Date.now();
        // Laya.timer.pause();
        this.isGamePause = true;
        this.roleObj.stopDrag();
        this.EnemySpite._children.forEach(function (item) {
            var sk = item.getChildByName("EnemySK");
            if (sk) {
                sk.playbackRate(0.001);
            }
            else {
                var boss_sk = item.getChildByName(item.name);
                if (boss_sk) {
                    boss_sk.playbackRate(0.001);
                }
            }
        });
    };
    /**
     * 暂停后恢复游戏~
     */
    PlayingControl.prototype.resumeGame = function () {
        this.isGamePause = false;
        // Laya.timer.resume();
        this.pauseInterval = Date.now() - this.startPauseTime;
        EndlessManage_1.default.getInstance().setCompensateTime();
        this.EnemySpite._children.forEach(function (item, index, array) {
            var sk = item.getChildByName("EnemySK");
            if (sk) {
                sk.playbackRate(1);
            }
            else {
                var boss_sk = item.getChildByName(item.name);
                if (boss_sk) {
                    boss_sk.playbackRate(1);
                }
                // boss_sk && boss_sk.playbackRate(1);
            }
            if (item._children.length > 3) {
                debugger;
            }
        });
    };
    PlayingControl.prototype.ckeckCanUpdate = function () {
        var item0 = this.self["item0"];
        var item1 = this.self["item1"];
        SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "jiantou", "jiantou", true, { x: 226, y: 38 }, item0, Laya.Handler.create(this, function (e) {
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "jiantou", "jiantou", true, { x: 226, y: 38 }, item1);
        }));
    };
    PlayingControl.prototype.delayHpBar2 = function (markWidth) {
        Laya.timer.once(1000, this, this.setHpBar2, [markWidth]);
    };
    PlayingControl.prototype.setScreenShake = function () {
        this.shakeIndex = 0;
        this.nowDirect = "right";
        this.bg_img1.parent.x = 0;
        Laya.timer.frameLoop(2, this, this.shakeCallBack);
    };
    PlayingControl.prototype.shakeCallBack = function () {
        var shakeObj = this.bg_img1.parent;
        if (this.nowDirect === "right") {
            shakeObj.x += 3;
            if (shakeObj.x === 0) {
                this.nowDirect === "right";
            }
            else {
                this.nowDirect = "left";
            }
        }
        else if (this.nowDirect === "left") {
            shakeObj.x -= 3;
            if (shakeObj.x = 0) {
                this.nowDirect = "left";
            }
            else {
                this.nowDirect = "right";
            }
        }
        if (this.shakeIndex++ >= 5) {
            Laya.timer.clear(this, this.shakeCallBack);
        }
    };
    /**
     *
     * @param markWidth
     * role的血量进度条
     */
    PlayingControl.prototype.setHpBar2 = function (markWidth) {
        var mark_graphics = this.hpBar2.mask.graphics;
        mark_graphics.clear();
        mark_graphics.drawRect(0, 0, markWidth, 44, "#ff0000");
    };
    PlayingControl.prototype.updateEnerenergy = function () {
        var _this = this;
        if (this.canUpdateEnergy && (!this.lastUpdateEnerenergyTime || (Date.now() - this.lastUpdateEnerenergyTime >= this.enerenergyInterval))) {
            this.canUpdateEnergy = false;
            var args = {};
            args.uuId = Playing_var_1.default.getInstance().uuId;
            args.energy = true;
            var httpReqObj = new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
                _this.parseEnergyData(e);
                _this.canUpdateEnergy = true;
            }), HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.TimerUpdateUpdateSome, JSON.stringify(args));
            this.lastUpdateEnerenergyTime = Date.now();
        }
    };
    PlayingControl.prototype.parseEnergyData = function (e) {
        BagDataControl_1.default.getInstance().updateBagDate_new(e);
        var nextTime = new Date(e.energyRecoverTime).getTime();
        var nowTime = new Date(e.now).getTime();
        this.lastUpdateEnerenergyTime = Date.now();
        this.enerenergyInterval = nextTime - nowTime;
    };
    /**
     * 请求扣除体力
     */
    PlayingControl.prototype.sendKillEnergy = function () {
        var _this = this;
        var args = {};
        args.uuId = Playing_var_1.default.getInstance().uuId;
        var nowEnergy = BagDataControl_1.default.getInstance().getBagDataById("103").num;
        var energyCost;
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            energyCost = 20;
        }
        else {
            energyCost = DataTables_1.default.FixedDataTables.getInstance().getDataByKey(DataType.battle, this.game.nowLevel, "cost");
        }
        args.bagCommon = { 103: { id: 103, num: nowEnergy - energyCost } };
        args.barrier = { curBarrier: this.game.nowLevel, luckyValue: Playing_var_1.default.getInstance().luckyValue };
        var httpReqObj = new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
            _this.canUpdateEnergy = true;
            _this.enerenergyInterval = 0;
        }), HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.PassedBarrier, JSON.stringify(args));
    };
    /**
     * 判断体力是否足够
     */
    PlayingControl.prototype.judgeEnergyEnough = function (model) {
        var nowEnergy = BagDataControl_1.default.getInstance().getBagDataById("103").num;
        var cost = model ? 20 : FixedDataTables.getInstance().getDataByKey(DataType.battle, this.game.nowLevel, "cost");
        if (nowEnergy - cost < 0) {
            return false;
        }
        return true;
    };
    PlayingControl.prototype.createWaveEffect = function () {
        var warning = Laya.loader.getRes("prefab/Boss_warning.prefab");
        var bossWarning = Laya.Pool.getItemByCreateFun("Boss_warning", warning.create, warning);
        this.isWaveEffect = true;
        Laya.stage.addChild(bossWarning);
    };
    PlayingControl.prototype.preCreateCycleObject = function () {
        if (!this.needCreateCycleObj) {
            var i = void 0;
            for (i in this.signToTimeAndNum) {
                this.createCycleObjects(i, this.signToTimeAndNum[i].num);
            }
        }
    };
    PlayingControl.prototype.createCycleObjects = function (sign, num) {
        var markSign = sign;
        var pools = Laya.Pool.getPoolBySign(markSign);
        if (!pools || pools.length < this.signToTimeAndNum[markSign].num) {
            !this.signToTimeAndNum[markSign].time && (this.signToTimeAndNum[markSign].time = Date.now() - this.CREATE_CYCLE_INTERVAL);
            this.createCycleObject(markSign);
        }
    };
    PlayingControl.prototype.createCycleObject = function (markSign) {
        if (Date.now() - this.signToTimeAndNum[markSign].time >= this.CREATE_CYCLE_INTERVAL) {
            this.signToTimeAndNum[markSign].time = Date.now();
            var resUrl = (markSign === "monster") ? "prefab/EnemySK.json" : "prefab/" + markSign + ".json";
            var markPrefab = Laya.loader.getRes(resUrl);
            var enemyObj = markPrefab.create();
            enemyObj.visible = false;
            Laya.Pool.recover(markSign, enemyObj);
            if (++this.cycleIndex >= (60 + 30)) {
                this.needCreateCycleObj = true;
            }
        }
    };
    Object.defineProperty(PlayingControl.prototype, "roleHp", {
        get: function () {
            return this._roleHp;
        },
        set: function (hp) {
            this._roleHp = hp >= this.roleTotal ? this.roleTotal : hp;
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     * 清除场景中的资源
     * @param sceneUrl 场景的url
     */
    PlayingControl.prototype.clearSceneChildRes = function (sceneUrl, texture) {
        if (sceneUrl) {
            var sceneData = Laya.loader.getRes(sceneUrl);
            var loadList = sceneData.loadList;
            if (loadList) {
                var i_2 = 0;
                for (i_2; i_2 < loadList.length; i_2++) {
                    if (texture) {
                        Laya.loader.clearRes(loadList[i_2]);
                    }
                    else {
                        Laya.loader.clearTextureRes(loadList[i_2]);
                    }
                }
            }
            //强制gc
            if (sceneUrl === GameConfig_1.default.startScene) {
                var resMap = Laya.Resource["_idResourcesMap"];
                for (var i in resMap) {
                    var res = resMap[i];
                    if (!res.lock && res._referenceCount === 0) {
                        if (res._url && res._url.indexOf("dragaonbones_loading") >= 0) {
                            res.destroy();
                        }
                    }
                }
            }
        }
    };
    /**
     * 手动清理》512x512的图片
     */
    PlayingControl.prototype.clearResUrl = function (resUrl, texture) {
        var i = 0;
        for (i; i < resUrl.length; i++) {
            if (texture) {
                Laya.loader.clearRes(resUrl[i]);
            }
            else {
                Laya.loader.clearTextureRes(resUrl[i]);
            }
        }
    };
    //1红2 蓝 3 黄
    PlayingControl.bulletType = 1;
    PlayingControl.roleDragCan = true;
    return PlayingControl;
}(Laya.Script));
exports.default = PlayingControl;
},{"../../GameConfig":1,"../Bullet/BulletInterface":19,"../Bullet/BulletMain":20,"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../Effect/UpBlackEffect":31,"../main/EquipUpdate":39,"../manage/AdaptScene":40,"../manage/BagDataControl":41,"../manage/BitmapFontMananage":42,"../manage/EndlessManage":46,"../manage/EndlessParseBoss":47,"../manage/EndlessParseSkill":48,"../manage/MainWeaponData":52,"../manage/Music":53,"../manage/OpenWx":54,"../manage/Playing_var":55,"../manage/SecondWeaponData":56,"../manage/SkeletonTempletManage":57,"../manage/toast":59,"../role/Buff":67,"../role/BuffBulletInitialization":68,"../role/EnemyObject":73,"../role/FireBossBullet1":75,"../role/role":79,"./../Tools/Tool":37,"./BattleParse":60}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var BaoZha = /** @class */ (function (_super) {
    __extends(BaoZha, _super);
    function BaoZha() {
        return _super.call(this) || this;
    }
    // private prefabName: string;
    BaoZha.prototype.onEnable = function () {
        this.self = this.owner;
        this.prefabName = this.self["prefabName"];
        this.self.visible = true;
        if (this.prefabName === "boss_baozha") {
            this.skObj = this.self;
            this.self.scale(1.5, 1.5);
        }
        else {
            this.skObj = this.self.getChildAt(0);
        }
        this.skObj.on(Laya.Event.STOPPED, this, this.stopped);
        this.aniName = this.self["aniName"];
        if (this.aniName === "baozha1") {
            this.skObj.playbackRate(2.5);
        }
        Laya.timer.frameOnce(3, this, this.playAnimation);
    };
    BaoZha.prototype.playAnimation = function () {
        Laya.timer.clear(this, this.playAnimation);
        this.skObj.play(this.aniName, false, true);
        this.playStatus = "stopped";
    };
    BaoZha.prototype.stopped = function () {
        if (this.playStatus === "stopped") {
            this.self.removeSelf();
        }
    };
    BaoZha.prototype.onDisable = function () {
        this.self.visible = false;
        this.skObj.stop();
        // Laya.Pool.recover("baozha", this.self)
        Laya.Pool.recover(this.owner["prefabName"], this.self);
        if (this.owner["prefabName"] === "boss_baozha") {
            SkeletonTempletManage_1.default.getInstance().clearTextureRes("boss_baozha");
        }
    };
    return BaoZha;
}(Laya.Script));
exports.default = BaoZha;
},{"../manage/SkeletonTempletManage":57}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var JsonEnum_1 = require("../Data/JsonEnum");
var DataTables_1 = require("../Data/DataTables");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var BuffControl_1 = require("../playing/BuffControl");
var Buffer = /** @class */ (function () {
    function Buffer(id, x, y, parent) {
        this.mark_w = 182;
        this.mark_h = 99;
        this.buffConfig = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.buff, id);
        this.buffId = id;
        this.buffValue = this.buffConfig.value;
        this.buffLastTime = this.buffConfig.time;
        this.time_lost = this.buffConfig.time_lost;
        this.type = this.buffConfig.type;
        this.bullet = this.buffConfig.bullet;
        this.icon = this.buffConfig.icon;
        this.posX = x;
        this.posY = y;
        this.parent = parent || Laya.Stage;
        this.speedBate = this.buffConfig.speed;
        this.createBuff();
    }
    Buffer.prototype.createBuff = function () {
        var buffTemplet = SkeletonTempletManage_1.default.getInstance().templets["buff"];
        var buffSk = Laya.Pool.getItemByCreateFun("buff", function () {
            return buffTemplet.buildArmature(0);
        }, this);
        if (buffSk && !buffSk.getComponent(BuffControl_1.default)) {
            buffSk.addComponent(BuffControl_1.default);
        }
        buffSk.play(this.buffConfig.icon_buff, true);
        buffSk["propertyObj"] = this;
        buffSk.pos(this.posX, this.posY);
        PlayingSceneControl_1.default.instance.dropBuffParent.addChild(buffSk);
    };
    return Buffer;
}());
exports.default = Buffer;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../manage/SkeletonTempletManage":57,"../playing/BuffControl":61,"../playing/PlayingSceneControl":65}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MainWeaponData_1 = require("../manage/MainWeaponData");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var BulletMain_1 = require("../Bullet/BulletMain");
var BulletInterface_1 = require("../Bullet/BulletInterface");
var BuffBulletInitialization = /** @class */ (function () {
    function BuffBulletInitialization() {
        this.roleObj = PlayingSceneControl_1.default.instance.roleObj;
        this.bulletRed = PlayingSceneControl_1.default.instance.bullet_red;
        var imgPlane = this.roleObj.getChildAt(0);
        this.imgPlane = imgPlane;
        this.setRolePos();
    }
    BuffBulletInitialization.prototype.setRolePos = function () {
        var newPoint = new Laya.Point(this.imgPlane.x, this.imgPlane.y);
        this.roleObj.localToGlobal(newPoint);
        this.rolePos = newPoint;
    };
    BuffBulletInitialization.getInstance = function () {
        if (!BuffBulletInitialization._instance) {
            BuffBulletInitialization._instance = new BuffBulletInitialization();
        }
        return BuffBulletInitialization._instance;
    };
    BuffBulletInitialization.prototype.initBuffData = function (value) {
        this.buffData = value;
    };
    BuffBulletInitialization.prototype.onUpdate = function () {
        var buffData = this.buffData;
        if (buffData && Object.keys(buffData).length) {
            this.bulletIndex = 0;
            this.createBuffBullet();
        }
    };
    BuffBulletInitialization.prototype.createBuffBullet = function () {
        var buffData = this.buffData;
        var i;
        for (i in buffData) {
            var type = buffData[i].type;
            switch (type) {
                case 4:
                    //创建旋转的圆形子弹  
                    if (Date.now() - buffData[i].nowTime_otherBuff >= 1000) {
                        buffData[i].nowTime_otherBuff = Date.now();
                        this.createBulletCircle(buffData[i]);
                    }
                    break;
                case 3:
                    //火力弹幕
                    this.createBulletFire(buffData[i]);
                    break;
                case 2:
                    //加速buff现在只会影响当前所有的子弹的速度, 不会再重新加入速度子弹;
                    break;
                    //速度弹幕  
                    var bulletSpeed = (0.15 - (MainWeaponData_1.default.getInstance().speed * buffData[i].buffValue - 9) * 0.001) * 1000;
                    if (Date.now() - buffData[i].nowTime_otherBuff >= bulletSpeed) {
                        // console.log("事件差---------:" + (Date.now() - buffData[i].nowTime_otherBuff) + "-----" + bulletSpeed)
                        buffData[i].nowTime_otherBuff = Date.now();
                        this.bulletIndex++;
                        this.createBulletFire(buffData[i]);
                        // console.error("进入了创建子弹的createBuffBullet---", this.buffData);
                    }
                    break;
                default:
                    break;
            }
        }
    };
    /**
     * 创建类型3  或者4
     */
    BuffBulletInitialization.prototype.createBulletFire = function (data) {
        var repeatNum = Object.keys(data["repeatJsonNum"]).length;
        if (!repeatNum) {
            debugger;
        }
        this.setRolePos();
        var speedArra = data.speedBate.split("#");
        var angle = this.bulletIndex == 1 ? (85 + 1.5) : 80;
        var leftAngle = this.bulletIndex == 1 ? (270 - 5 + 1.5) : (270 - 10);
        if (Date.now() - data.nowTime_fireBuff[0] >= Number(speedArra[0]) * PlayingSceneControl_1.default.instance.bulletSpeed) {
            //两边紫色
            var i_1 = 0;
            for (i_1; i_1 < 2; i_1++) {
                var posX = i_1 === 1 ? (this.roleObj.x - 26 + 15) : (this.rolePos.x + 26 - 15);
                var paraAngle = i_1 === 1 ? 266.5 : (360 - 86.5);
                var obj = new BulletMain_1.default(BulletInterface_1.Bullet.BulletType.roleMainBullet, { x: posX + 30, y: this.rolePos.y - 40 - 15 }, "火力增强子弹_02" || data.bullet, paraAngle, data, 0);
            }
            data.nowTime_fireBuff[0] = Date.now();
        }
        if (Date.now() - data.nowTime_fireBuff[1] >= Number(speedArra[1]) * PlayingSceneControl_1.default.instance.bulletSpeed && repeatNum >= 2) {
            //中间黄色
            var obj = new BulletMain_1.default(BulletInterface_1.Bullet.BulletType.roleMainBullet, { x: this.roleObj.x + 59, y: this.rolePos.y - 40 - 15 - 30 }, "火力增强子弹_01" || data.bullet, 360 - 90, data, 1);
            data.nowTime_fireBuff[1] = Date.now();
        }
        if (Date.now() - data.nowTime_fireBuff[2] >= Number(speedArra[2]) * PlayingSceneControl_1.default.instance.bulletSpeed && repeatNum >= 3) {
            this.createBulletFire_missile(data, repeatNum);
            data.nowTime_fireBuff[2] = Date.now();
        }
        return;
        for (var i = 0; i < 3; i++) {
            // const huDu = angle;
            // const speedY: number = MainWeaponData.getInstance().bulletSpeed;
            // const speedX: number = speedY / Math.tan(huDu * Math.PI / 180);
            // const bullet: Laya.Sprite = PlayingSceneControl.instance.createBulletObj(data.bullet);
            var posX = void 0;
            var paraAngle = void 0;
            if (i === 0) {
                posX = this.rolePos.x + 26;
                paraAngle = 360 - angle;
                // bullet.pos(this.rolePos.x + 26, this.rolePos.y - 40, true);
            }
            else if (i === 1) {
                posX = this.roleObj.x - 26;
                paraAngle = leftAngle;
                // bullet.pos(this.rolePos.x - 26, this.rolePos.y - 40, true);
            }
            // bullet["vars_"].propertyObj = { prefabType: Data2.prefabType.bulletRole };
            // bullet["vars_"].type = data.type;
            // if (data.type === 3) {
            //     bullet["vars_"].propertyObj.hurtValue = data.buffValue * Number(MainWeaponData.getInstance().getShowFire());
            // } else {
            //     bullet["vars_"].propertyObj.hurtValue = Number(MainWeaponData.getInstance().getShowFire());
            // }
            // PlayingSceneControl.instance.bulletParent.addChild(bullet);
            // (bullet.getComponent(Laya.RigidBody) as Laya.RigidBody).setVelocity({ x: i === 0 ? speedX : -speedX, y: -speedY });
            var obj = void 0;
            if (i === 2) {
                obj = new BulletMain_1.default(BulletInterface_1.Bullet.BulletType.roleMainBullet, { x: this.roleObj.x + 59, y: this.rolePos.y - 40 - 15 - 30 }, "火力增强子弹_01" || data.bullet, 360 - 90, data, 1);
            }
            else {
                obj = new BulletMain_1.default(BulletInterface_1.Bullet.BulletType.roleMainBullet, { x: posX + 30, y: this.rolePos.y - 40 - 15 }, "火力增强子弹_02" || data.bullet, paraAngle, data, 0);
            }
            // obj.setBuff(data.type, data.buffValue * Number(MainWeaponData.getInstance().getShowFire()), data.buffValue);
        }
        this.createBulletFire_missile(data, repeatNum);
    };
    /**
     * 创立火力增强中的子弹
     */
    BuffBulletInitialization.prototype.createBulletFire_missile = function (data, repeatNum) {
        var missileNum = repeatNum >= 3 ? 4 : 2;
        var i = 0;
        for (i; i < 4; i++) {
            var startAngle = { 0: 30, 1: -30, 2: 60, 3: -60 };
            var startPosX = { 0: { x: 130 - 20, y: 39 }, 1: { x: -8 + 20, y: 39 }, 2: { x: 153 - 20, y: 57 }, 3: { x: -26 + 20, y: 57 } };
            var obj = new BulletMain_1.default(BulletInterface_1.Bullet.BulletType.roleMainBullet, { x: this.roleObj.x + startPosX[i].x, y: startPosX[i].y + this.roleObj.y }, "火力增强导弹", startAngle[i], data, 2);
        }
    };
    /**
     * 创建类型4
     */
    BuffBulletInitialization.prototype.createBulletCircle = function (data) {
        // x1 = x0 + r * cos(ao * 3.14 / 180)
        // y1 = y0 + r * sin(ao * 3.14 / 180)
        // Laya.Browser.window.markBullet = [];
        var r = 100;
        var repeatNum = Object.keys(data["repeatJsonNum"]).length;
        if (!repeatNum) {
            debugger;
        }
        var bulletNums = repeatNum * 4;
        var anglePlus = 360 / bulletNums;
        var i = 0;
        for (i = 0; i < bulletNums; i++) {
            var x1 = this.imgPlane.x + r * Math.cos(anglePlus * i * Math.PI / 180);
            var y1 = this.imgPlane.y + r * Math.sin(anglePlus * i * Math.PI / 180);
            var posxy = this.getXiangDuiPos(x1, y1);
            var obj = new BulletMain_1.default(BulletInterface_1.Bullet.BulletType.roleMainBullet, posxy, data.bullet, null, data);
            var hurtValue = data.buffValue * Number(MainWeaponData_1.default.getInstance().getShowFire());
            obj.setBuff({ x: x1, y: y1 });
        }
    };
    BuffBulletInitialization.prototype.getXiangDuiPos = function (posx, posy) {
        var newPoint = new Laya.Point(posx, posy);
        this.roleObj.localToGlobal(newPoint);
        return newPoint;
    };
    return BuffBulletInitialization;
}());
exports.default = BuffBulletInitialization;
},{"../Bullet/BulletInterface":19,"../Bullet/BulletMain":20,"../manage/MainWeaponData":52,"../playing/PlayingSceneControl":65}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BuffProgressControl = /** @class */ (function (_super) {
    __extends(BuffProgressControl, _super);
    function BuffProgressControl() {
        return _super.call(this) || this;
    }
    BuffProgressControl.prototype.onEnable = function () {
    };
    BuffProgressControl.prototype.onDisable = function () {
        this.owner.getChildByName("img_bg").mask.graphics.clear();
        Laya.Pool.recover("buffProgress", this.owner);
    };
    return BuffProgressControl;
}(Laya.Script));
exports.default = BuffProgressControl;
},{}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var MainWeaponData_1 = require("../manage/MainWeaponData");
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var BulletType = JsonEnum_1.default.BulletType;
var PrefabType = JsonEnum_1.default.prefabType;
var BulletCommon = /** @class */ (function () {
    function BulletCommon(bulletT, bossId, isWf) {
        isWf && (this.isWFboss = isWf);
        switch (bulletT) {
            case BulletType.main:
                this.defaultSpeedY = MainWeaponData_1.default.getInstance().bulletSpeed;
                this.hurtValue = MainWeaponData_1.default.getInstance().fire;
                var tableSpeed = Number(MainWeaponData_1.default.getInstance().speed);
                this.shootSpeed = (0.15 - (tableSpeed - 9) * 0.001) * 1000;
                //暂时
                this.nick = "Bullet_red";
                this.res = Laya.loader.getRes("prefab/" + this.nick + ".json");
                this.prefabType = PrefabType.bulletRole;
                this.camp = 1;
                break;
            case BulletType.second:
                var secondInstance = SecondWeaponData_1.default.getInstance();
                this.defaultSpeedY = secondInstance.getbulletSpeed();
                this.hurtValue = secondInstance.getFire();
                this.shootSpeed = secondInstance.getSpeed() * 1000;
                this.nick = secondInstance.bulletPrefab;
                this.res = Laya.loader.getRes("prefab/" + this.nick + ".json");
                this.prefabType = PrefabType.bulletSkill;
                this.camp = 1;
                break;
            case BulletType.boss:
                if (!bossId) {
                    console.error("bossId传入错误", bossId);
                    return;
                }
                var configs = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.monster, bossId);
                this.bulletConfig = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.bullet);
                this.hurtValue = configs.fire ? Number(configs.fire) : 1 /*Number(configs.fire)*/;
                switch (configs.pic) {
                    case "boss3":
                        this.shootSpeed = 0.5 * 1000;
                        break;
                    case "boss4":
                        this.shootSpeed = 1 * 1000;
                        break;
                    case "boss5":
                        this.shootSpeed = 1 * 1000;
                        break;
                    default:
                        this.shootSpeed = (0.15 - (Number(configs.shootSpeed) - 9) * 0.001) * 1000;
                        if (configs.pic != "boss1" && configs.pic != "boss2") {
                            this.isWFboss = true;
                        }
                        break;
                }
                this.defaultSpeedY = Number(configs.bulletSpeed);
                //其它通用boss3特别,因为会被主角子弹打掉
                this.nick = "Bullet_boss";
                // this.nick = configs.bullet == "-1" ? Data2.enemyToPerfab.bullet_blue : configs.bullet;
                this.res = Laya.loader.getRes("prefab/" + this.nick + ".json");
                this.prefabType = PrefabType.bullletBoss;
                this.camp = 2;
                this.hitRadius = { w: 51 / 2, h: 52 / 2 };
                break;
            case BulletType.bigEnemy:
                this.isWFboss = true;
                var configs_bigEnemy = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.monster, 30108);
                this.bulletConfig = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.bullet);
                this.hurtValue = configs_bigEnemy.fire == -1 ? 1 : Number(configs_bigEnemy.fire) /*Number(configs.fire)*/;
                switch (configs_bigEnemy.pic) {
                    case "boss3":
                        this.shootSpeed = 0.5 * 1000;
                        break;
                    case "boss4":
                        this.shootSpeed = 1 * 1000;
                        break;
                    case "boss5":
                        this.shootSpeed = 1 * 1000;
                        break;
                    default:
                        this.shootSpeed = (0.15 - (Number(configs_bigEnemy.shootSpeed) - 9) * 0.001) * 1000;
                        break;
                }
                this.defaultSpeedY = Number(configs_bigEnemy.bulletSpeed);
                //其它通用boss3特别,因为会被主角子弹打掉
                this.nick = "Bullet_boss";
                // this.nick = configs.bullet == "-1" ? Data2.enemyToPerfab.bullet_blue : configs.bullet;
                this.res = Laya.loader.getRes("prefab/" + this.nick + ".json");
                this.prefabType = PrefabType.bullletBoss;
                this.camp = 2;
                this.hitRadius = { w: 51 / 2, h: 52 / 2 };
                break;
            default:
                break;
        }
    }
    BulletCommon.prototype.bconfigProperty = function (bId, prop) {
        if (prop) {
            return this.bulletConfig[bId][prop];
        }
        else {
            return this.bulletConfig[bId];
        }
    };
    return BulletCommon;
}());
exports.default = BulletCommon;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../manage/MainWeaponData":52,"../manage/SecondWeaponData":56}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Tool_1 = require("../Tools/Tool");
var Bullet_second = /** @class */ (function (_super) {
    __extends(Bullet_second, _super);
    function Bullet_second() {
        var _this = _super.call(this) || this;
        //secondType = 11 自动跟随
        //调整方向的间隔
        _this.changeTraceInterval = 800;
        return _this;
    }
    Bullet_second.prototype.onEnable = function () {
        var _this = this;
        this.repeateUse = false;
        this.self = this.owner;
        this.property = this.self["property"];
        if (this.self.parent !== PlayingSceneControl_1.default.instance.bulletParent) {
            this.self.visible = true;
            this.self.on(Laya.Event.STOPPED, this, this.listenStop);
            return;
        }
        this.secondData = SecondWeaponData_1.default.getInstance();
        this._bulletType = this.secondData.buffType;
        this.sk_object = this.owner.getChildByName("sk_name");
        this.secondType = Number(this._bulletType[0]);
        switch (this.secondType) {
            case 3:
                Laya.timer.frameOnce(3, this, function () {
                    _this.sk_object.play("bd", true, true);
                });
                break;
            case 4:
                Laya.timer.frameOnce(3, this, function () {
                    _this.sk_object.play("ld", true, true);
                });
                break;
            default:
                break;
        }
        this.bulletSpeed = -this.secondData.getbulletSpeed();
        this.setData();
        //虚空引擎
        if (this.property.secondType === 8) {
            this.self.scale(0.3, 0.3);
            this.markTime = Date.now();
        }
        this.self.visible = true;
        this.secondType === 11 && this.selectTraceTarget();
    };
    ;
    Bullet_second.prototype.onUpdate = function () {
        if (!this.self.visible) {
            return;
        }
        if (this.self.parent !== PlayingSceneControl_1.default.instance.bulletParent) {
            return;
        }
        //副武器 type3 偏移 -220   4:100 
        if (this.self.y < 0) {
            this.sk_object && this.sk_object.stop();
            this.self.removeSelf();
            return;
        }
        //纠正
        if (this.self.x >= Laya.stage.width + 200 || this.self.x <= -200) {
            this.self.removeSelf();
        }
        if (this.judgeType8()) {
            if (Date.now() - this.markTime >= this.property.keepTimeValue * 1000) {
                this.self.removeSelf();
            }
            return;
        }
        if (this.secondType === 11) {
            if (Date.now() - this.changeDirectTime >= this.changeTraceInterval) {
                this.selectTraceTarget();
            }
            this.self.x += this.speedXy.x;
            this.self.y += this.speedXy.y;
        }
        else {
            this.self.y += this.bulletSpeed;
        }
    };
    Bullet_second.prototype.onTriggerEnter = function (other, self) {
        if (!other.owner.visible) {
            return;
        }
        if (!other.owner.parent) {
            return;
        }
        if (this._bulletType[0] !== "4") {
            this.owner.removeSelf();
        }
    };
    Bullet_second.prototype.judgeType8 = function () {
        var judgeY = Laya.stage.height * 0.4;
        if (this.property.secondType === 8) {
            if (!this.property.canHitCollision) {
                if (this.self.y <= judgeY) {
                    this.self.scale(1, 1);
                    this.property.canHitCollision = true;
                    return true;
                }
                var nextScaleNum = (this.self.scaleX + 0.01) >= 1 ? 1 : (this.self.scaleX + 0.01);
                this.self.scale(nextScaleNum, nextScaleNum);
            }
            else {
                return true;
            }
        }
        return false;
    };
    Bullet_second.prototype.setData = function () {
        switch (Number(this._bulletType[0])) {
            case 3:
                this._iceTS = this.secondData.getIceData;
                break;
            case 4:
                break;
            case 5:
                this._flottantT = this.secondData.getFlottantT;
                break;
            default:
                break;
        }
    };
    Object.defineProperty(Bullet_second.prototype, "iceTS", {
        get: function () {
            return this._iceTS;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet_second.prototype, "flottantT", {
        get: function () {
            return this._flottantT;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet_second.prototype, "bulletType", {
        get: function () {
            return Number(this._bulletType[0]);
        },
        enumerable: true,
        configurable: true
    });
    Bullet_second.prototype.listenStop = function () {
        this.self.removeSelf();
    };
    /**
     * 选择跟随的目标
     */
    Bullet_second.prototype.selectTraceTarget = function () {
        this.changeDirectTime = Date.now();
        // if (!(this.targetObj && this.targetObj.visible)||) {
        var parentSprite = PlayingSceneControl_1.default.instance.EnemySpite;
        if (parentSprite._children.length) {
            this.targetObj = parentSprite._children[Tool_1.tools.random(0, parentSprite._children.length - 1)];
            if (this.targetObj.x === void 0) {
                debugger;
            }
            this.setTraceDirect();
            return;
        }
        // }
        this.setTraceDirect(true);
    };
    /**
     * 设置跟随的方向
     */
    Bullet_second.prototype.setTraceDirect = function (noTarget) {
        (this.speedXy === void 0) && (this.speedXy = {});
        if (noTarget) {
            this.speedXy.y = this.bulletSpeed;
            this.speedXy.x = 0;
            this.self.rotation = 0;
            return;
        }
        var proportion = new Laya.Point(this.targetObj.x - this.self.x, this.targetObj.y - this.self.y);
        proportion.normalize();
        var angle = 0;
        if (proportion.x === 0 && proportion.y === 0) {
            angle = -90;
        }
        else if (proportion.x === 0) {
            angle = proportion.y > 0 ? 90 : 360 - 90;
        }
        else if (proportion.y === 0) {
            angle = proportion.x < 0 ? 180 : 0;
        }
        else {
            angle = Tool_1.tools.getAngleByTan(proportion.y / proportion.x);
        }
        if (proportion.x < 0 && proportion.y < 0) {
            angle = 180 + angle;
        }
        else if (proportion.x < 0 && proportion.y > 0) {
            angle = angle - 180 + 360;
        }
        this.self.rotation = angle + 90;
        this.speedXy.y = this.bulletSpeed;
        this.speedXy.x = (proportion.x * this.speedXy.y) / proportion.y;
        this.speedXy.y = proportion.y < 0 ? -Math.abs(this.speedXy.y) : Math.abs(this.speedXy.y);
        this.speedXy.x = proportion.x < 0 ? -Math.abs(this.speedXy.x) : Math.abs(this.speedXy.x);
    };
    Bullet_second.prototype.onDisable = function () {
        this.self.visible = false;
        this.targetObj = null;
        Laya.Pool.recover(SecondWeaponData_1.default.getInstance().bulletPrefab, this.owner);
    };
    return Bullet_second;
}(Laya.Script));
exports.default = Bullet_second;
},{"../Tools/Tool":37,"../manage/SecondWeaponData":56,"../playing/PlayingSceneControl":65}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nanGuaWangZi_Boss_1 = require("../Boss/nanGuaWangZi_Boss");
var maoWangHou_Boss_1 = require("../Boss/maoWangHou_Boss");
var daShuRen_Boss_1 = require("../Boss/daShuRen_Boss");
var shitoujuren_Boss_1 = require("../Boss/shitoujuren_Boss");
var bingqilinzuhe_Boss_1 = require("../Boss/bingqilinzuhe_Boss");
var bingtouxiang_Boss_1 = require("../Boss/bingtouxiang_Boss");
var jibaobao_Boss_1 = require("../Boss/jibaobao_Boss");
var zhangyunvhuang_Boss_1 = require("../Boss/zhangyunvhuang_Boss");
var DataTables_1 = require("../Data/DataTables");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var JsonEnum_1 = require("../Data/JsonEnum");
var JsonEnum_2 = require("../Data/JsonEnum");
var DataType = JsonEnum_2.default.DataType;
var DropHpStatus = JsonEnum_1.default.dropHpStatus;
var Tool_1 = require("../Tools/Tool");
/**
 * 敌人通用基类(boss 特性敌人 普通敌人)
 */
var skToScale;
(function (skToScale) {
    skToScale[skToScale["chuji_xiaoemo1"] = 0.4] = "chuji_xiaoemo1";
    skToScale[skToScale["chuji_xiaoemo2"] = 0.5] = "chuji_xiaoemo2";
    skToScale[skToScale["chuji_xiaoemo"] = 0.55] = "chuji_xiaoemo";
    skToScale[skToScale["zhongji_hetun"] = 0.7] = "zhongji_hetun";
    skToScale[skToScale["zhongji_xiezi"] = 0.5] = "zhongji_xiezi";
    skToScale[skToScale["chuji_feishu"] = 0.5] = "chuji_feishu";
    skToScale[skToScale["chuji_jianci"] = 0.4] = "chuji_jianci";
    skToScale[skToScale["chuji_xigua"] = 0.6] = "chuji_xigua";
    skToScale[skToScale["zhongji_feihou"] = 0.75] = "zhongji_feihou";
    skToScale[skToScale["zhongji_luobo"] = 0.55] = "zhongji_luobo";
})(skToScale || (skToScale = {}));
var EnemyCommon = /** @class */ (function () {
    function EnemyCommon(id) {
        this.id = id;
        //boss开始的时候 y的位置
        this.bossStartY = 95;
        //掉血状态 null || 9 ||10
        this.dropHpStatus = DropHpStatus.born;
        this.enemyId = id;
        this.initProperty();
        this.startHp = this._hp;
        this.prefabType = this.e_type === 2 ? JsonEnum_2.default.prefabType.boss : JsonEnum_2.default.prefabType.enemy;
    }
    EnemyCommon.prototype.initProperty = function () {
        this.config = FixedDataTables.getInstance().getData(DataType.monster, this.enemyId);
        this.defaultSpeedY = this.setRandomSpeed(this.config.speed) /*Number(this.config.speed)*/;
        this._hp = Number(this.config.hp);
        this.gold = Number(this.config.gold);
        this.e_type = Number(this.config.type);
        this.enemyLevel = Number(this.config.level);
        this.way = Number(this.config.way);
        if (this.config.buff == -1) {
            this.dropBuff = false;
        }
        else {
            this.dropBuff = true;
            this.buffProbabilit = this.config.buff.split("|");
        }
        this.pic = this.config.pic;
        if (this.e_type === 2) {
            this.nick = /*"Boss5" || */ JsonEnum_2.default.enemyToPerfab[this.pic];
            this.isWFboss = this.judgeWFBoss();
            this.setScript();
            this.res = Laya.loader.getRes("prefab/" + this.nick + ".json");
            this.bossStartY = this.config.positiony == -1 ? 95 : (this.config.positiony);
            this.scaleXY = { x: 0, y: 0 };
            var scaleArr = this.config.scale.split("|");
            this.scaleXY.x = Number(scaleArr[0]);
            this.scaleXY.y = Number(scaleArr[1]);
            this.moveAreaPos = {};
            var areaArr = this.config.positionx.split("|");
            this.moveAreaPos.x1 = Number(areaArr[0]);
            this.moveAreaPos.x2 = Number(areaArr[1]);
            //boss伤害
            this.hurtValue = 100000;
        }
        else {
            this.scaleXY = {};
            if (skToScale[this.pic]) {
                this.scaleXY.x = skToScale[this.pic];
                this.scaleXY.y = skToScale[this.pic];
            }
            else {
                this.scaleXY.x = 0.6;
                this.scaleXY.y = 0.6;
            }
            // const scaleArr: Array<string> = this.config.scale.split("|")
            // this.scaleXY.x = Number(scaleArr[0]);
            // this.scaleXY.y = Number(scaleArr[1]);
            // if (DataT.midEnemyNameToSK[this.pic]) {
            //     this.nick = "monsterSK";
            //     this.res = Laya.loader.getRes("prefab/EnemySK.json");
            //     console.error("进入到了中级怪物的nick~");
            // } else {
            // this.nick = "monster";
            // this.res = Laya.loader.getRes("prefab/Enemy_blue.json");
            this.nick = "monster";
            this.res = Laya.loader.getRes("prefab/EnemySK.json");
            // }
            //伤害
            var value = FixedDataTables.getInstance().getDataByKey(DataType.misc, 10, "value");
            this.hurtValue = value ? Number(value) : 20;
            // console.error("敌人造成的伤害");
        }
        if (!this.res) {
            console.error(this.nick + "未加载就开始使用~！");
        }
    };
    Object.defineProperty(EnemyCommon.prototype, "hp", {
        get: function () {
            return this._hp;
        },
        set: function (hpValue) {
            if (hpValue) {
                this._hp = hpValue;
            }
            else {
                this._hp = 0;
            }
        },
        enumerable: true,
        configurable: true
    });
    EnemyCommon.prototype.judgeWFBoss = function () {
        var nicks = ["Boss1", "Boss2", "Boss3", "Boss4", "Boss5"];
        if (nicks.indexOf(this.nick) > -1) {
            return false;
        }
        else {
            return true;
        }
    };
    EnemyCommon.prototype.setRandomSpeed = function (config) {
        var arr = config.split("|");
        var arr2 = arr.map(function (item, index) { return Number(item); });
        var speed = Tool_1.tools.random(arr2[0], arr2[1]);
        return speed;
    };
    EnemyCommon.prototype.setScript = function () {
        switch (this.nick) {
            case JsonEnum_2.default.enemyToPerfab.boss_nanguawangzi:
                this.needAddScript = nanGuaWangZi_Boss_1.default;
                break;
            case JsonEnum_2.default.enemyToPerfab.boss_maowanghou:
                this.needAddScript = maoWangHou_Boss_1.default;
                break;
            case JsonEnum_2.default.enemyToPerfab.boss_dashuren:
                this.needAddScript = daShuRen_Boss_1.default;
                break;
            case JsonEnum_2.default.enemyToPerfab.boss_shitoujuren:
                this.needAddScript = shitoujuren_Boss_1.default;
                break;
            case JsonEnum_2.default.enemyToPerfab.boss_bingqilinzuhe:
                this.needAddScript = bingqilinzuhe_Boss_1.default;
                break;
            case JsonEnum_2.default.enemyToPerfab.boss_bingtouxiang:
                this.needAddScript = bingtouxiang_Boss_1.default;
                break;
            case JsonEnum_2.default.enemyToPerfab.boss_jibaobao:
                this.needAddScript = jibaobao_Boss_1.default;
                break;
            case JsonEnum_2.default.enemyToPerfab.boss_zhangyunvhuang:
                this.needAddScript = zhangyunvhuang_Boss_1.default;
                break;
            default:
                break;
        }
    };
    return EnemyCommon;
}());
exports.default = EnemyCommon;
},{"../Boss/bingqilinzuhe_Boss":3,"../Boss/bingtouxiang_Boss":5,"../Boss/daShuRen_Boss":7,"../Boss/jibaobao_Boss":9,"../Boss/maoWangHou_Boss":11,"../Boss/nanGuaWangZi_Boss":13,"../Boss/shitoujuren_Boss":15,"../Boss/zhangyunvhuang_Boss":17,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Tools/Tool":37}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var JsonEnum_1 = require("../Data/JsonEnum");
var Tool_1 = require("../Tools/Tool");
var EnemyCommon_1 = require("./EnemyCommon");
var BulletCommon_1 = require("./BulletCommon");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var bossDragonAction = JsonEnum_1.default.bossDragonAction;
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var FireBossBullet1_1 = require("./FireBossBullet1");
var MediumEnemy_Move_1 = require("../MediumEnemy/MediumEnemy_Move");
var Playing_var_1 = require("../manage/Playing_var");
var BossObject = /** @class */ (function (_super) {
    __extends(BossObject, _super);
    function BossObject(bossId) {
        var _this = _super.call(this, bossId) || this;
        /**
         * boss攻击
         */
        _this.bulletNum = 0;
        _this.bossSkillInterval = 6000;
        _this.cbIntervar1_boss3 = 0.05 * 1000; //boss3 普通子弹1的发射间隔
        _this.cb1AngleRange = [30, 150]; //boss3 普通子弹1 的设计方向
        _this.cbStopInterval1_boss3 = 2000; //普通子弹1 停顿Interval
        _this.shotNumsCb2_boss3 = 18; //普通子弹2 每次创建的数量
        _this.shotWaveStopTime_boss3 = 3000; //每发射两波后停顿的时间
        _this.shotOffset2 = 1; //普通子弹2的每颗子弹的偏移
        _this.shotBInterval2 = 0.5; //每发子弹间隔
        _this.skillWarnInterval_boss3 = 2000; //警告的时间
        _this.skillBInterval_boss3 = 1000; //技能子弹的发射间隔
        _this.bossFollowUpInterval = 6000; //追击的持续时间
        _this.continuedTime1_boss4 = 5000; //普通攻击1 持续时间
        _this.bInterval1_boss4 = 0.2 * 1000; //普攻1 的间隔
        _this.continuedTime2_boss4 = 6000; //聚气的持续时间
        _this.bStartInterval2_boss4 = 2000; // 聚气后两秒开始
        _this.bInterval2_boss4 = 0.1 * 1000; //普2 子弹间隔时间
        _this.skillStopInterval1_boss4 = 3000; //技能1停止的时间
        _this.skillContinued2_boss4 = 4000; //技能2 持续的时间
        _this.skillInterval2_boss4 = 0.1 * 1000; //技能2发射的间隔
        _this.nBSkillInterval = 10000; //终极技能的触发的 间隔
        /**
         * boss5相关 变量
         */
        //普通攻击1 子弹再分裂出去之前能被打掉
        _this.bCommTotal1_boss5 = 4; //普通攻击1每次总数量
        _this.bCommInterval1_boss5 = 1.5 * 1000; //每两发之间的间隔
        _this.bCommWave1_boss5 = 2 * 1000; //每波之间的间隔
        _this.bCommBomeNum2_boss5 = 20; //每发 普2子弹会分裂出20发
        _this.skillContinuedTime1_boss5 = 5000; //技能1持续5s
        _this.skillChangeStopTime1 = 3000; //技能1过后停顿3s
        _this.skillInterval1_boss5 = 0.1 * 1000; //技能1的间隔
        _this.skillInterval2_boss5 = 0.2 * 1000; //技能2的间隔
        _this.skillContinuedTime2_boss5 = 5000; //技能2持续5s
        _this.skillChangeStopTime2 = 5000; //技能2过后再停顿5s技能1
        _this.commBInterval_boss1 = 150;
        _this.commBulletInterval_boss1 = 6000; //每隔6s停顿
        _this.stopShotTime = 2500; //停顿的时间
        _this.isCircleing = true; //正在初始创建转圈
        _this.circleNums = 20; //没圈 20个
        _this.commBShotNums = 6; //第二种普通子弹每发射6 次停顿4次的时间
        _this.commBStopNums = 4;
        _this.canCreateSkill1_boss1 = true; //是否能够创建boss1的第一个技能 || 子弹是否都消失了
        _this.shotNumsSkill1_boss1 = 18; //每次创建18个
        _this.oneLieSkillInterval1_boss1 = 0.05 * 1000; //每个位置创建下一个的间隔 
        _this.skillInterval2_boss1 = 6000; //boss1的技能2 发射间隔
        _this.skillBNum2_boss1 = 3; //每次同时发射的孢子的数量
        _this.commBulletInterval = 4000;
        _this.commBulletNumOne = 60; //每次创建30个
        _this.commBulletWaveInterval = 3000; //每三波停顿时间
        _this.skillInterval = 5000; //技能间隔
        _this.ionPaoInterval = 1000; //离子炮间隔时间
        _this.ionPaoLifeTime = 3000; //离子炮 存活时间
        _this.ionPaoSpeed1 = 10; //离子炮速度1
        _this.ionPaoSpeed2 = 4; //离子炮速度2
        _this.createEnemy();
        if (_this.way && _this.e_type !== 2) {
            //判断是否有重复脚本
            var mediumEnemy_Move = _this.enmeySprite.getComponent(MediumEnemy_Move_1.default);
            if (!mediumEnemy_Move) {
                _this.enmeySprite.addComponent(MediumEnemy_Move_1.default);
            }
            return _this;
            // return;
        }
        Laya.Browser.window.markBoss = _this.enmeySprite;
        if (_this.e_type === 2) {
            _this.bossSkillInterval = (_this.nick === "Boss4" || _this.nick === "Boss5") ? 8000 : 6000;
            //boss子弹~
            _this.bulletObj = new BulletCommon_1.default(JsonEnum_1.default.BulletType.boss, _this.enemyId, _this.isWFboss);
            _this.bossSK = _this.enmeySprite.getChildByName(_this.nick);
            Laya.Browser.window.bossSK = _this.bossSK;
            _this.bossSK.on(Laya.Event.STOPPED, _this, _this.SK_listener, [Laya.Event.STOPPED]);
            _this.bossSK.on(Laya.Event.LABEL, _this, _this.SK_action);
            //warning
            _this.createWarning();
            // const warning: Laya.Prefab = Laya.loader.getRes("prefab/Boss_warning.prefab");
            // let bossWarning = warning.create();
            // Laya.stage.addChild(bossWarning);
            // this.setWarningMusic();
            //this.bossMove();
            // Laya.Tween.to(this.enmeySprite, { x: this.enmeySprite.x, y: this.bossStartY }, 1100, null, Laya.Handler.create(this, this.bossAtatck), null, true, true);
        }
        return _this;
    }
    BossObject.prototype.createWarning = function () {
        var _this = this;
        var warning = Laya.loader.getRes("prefab/Boss_warning.prefab");
        var bossWarning = Laya.Pool.getItemByCreateFun("Boss_warning", warning.create, warning);
        Laya.stage.addChild(bossWarning);
        this.setWarningMusic();
        Laya.timer.once(2300, this, function () {
            Laya.Tween.to(_this.enmeySprite, { x: _this.enmeySprite.x, y: _this.bossStartY }, 1100, null, Laya.Handler.create(_this, _this.bossAtatck), null, true, true);
        });
    };
    BossObject.prototype.setWarningMusic = function () {
        Music_1.default.getInstance().playSound(musicToUrl.warning);
        Music_1.default.getInstance().playMusic(musicToUrl.warning_bg);
    };
    BossObject.prototype.createEnemy = function () {
        this.enmeySprite = Laya.Pool.getItemByCreateFun(this.nick, this.res.create, this.res);
        Laya.Tween.clearAll(this.enmeySprite);
        Laya.timer.clearAll(this.enmeySprite);
        var markESK = this.enmeySprite.getChildByName("EnemySK");
        // markESK && markESK.removeSelf();
        var w = 0;
        var h = 0;
        if (this.e_type !== 2) {
            if (true || JsonEnum_1.default.midEnemyNameToSK[this.pic]) {
                var sk = void 0;
                if (markESK) {
                    var nickName = markESK.templet["_skBufferUrl"].split("/")[1].split(".")[0];
                    if (nickName !== this.pic) {
                        markESK.destroy();
                        Laya.loader.clearTextureRes("dragonbones/" + nickName + ".png");
                        // Laya.Pool.recover("sk_" + nickName, markESK.removeSelf())
                        sk = this.createMonsterAddChild();
                    }
                    else {
                        sk = markESK;
                        sk.play(0, true);
                    }
                }
                else {
                    sk = this.createMonsterAddChild();
                }
                sk.pos(80.5, 65.5);
                sk.name = "EnemySK";
                this.progress_di = this.enmeySprite.getChildByName("hp_di");
                this.progress_di.y = 150 - 15 + 31 - 30;
                this.progress_bar = this.enmeySprite.getChildByName("hp_bar");
                this.progress_bar.y = 150 - 15 + 31 - 30;
                w = 165;
                h = 148;
            }
            else {
                this.imgObj = this.enmeySprite.getChildByName("imgPic");
                this.progress_di = this.enmeySprite.getChildByName("hp_di");
                this.progress_bar = this.enmeySprite.getChildByName("hp_bar");
                this.imgObj.skin = JsonEnum_1.default.monsterUrl + this.pic + ".png";
                this.boxCollider = this.enmeySprite.getComponent(Laya.BoxCollider);
                w = this.imgObj.width || 100;
                h = this.imgObj.height || 0;
                this.boxCollider.width = w;
                this.boxCollider.height = h;
                this.progress_di.x = this.imgObj.x + w / 2 - this.progress_di.width / 2;
                this.progress_di.y = this.imgObj.y + h;
                this.progress_bar.pos(this.progress_di.x, this.progress_di.y);
            }
            this.changeHpProgress(this.hp);
            this.enmeySprite.visible = false;
        }
        else {
            markESK && markESK.removeSelf();
            this.boxCollider = this.enmeySprite.getComponent(Laya.BoxCollider);
            w = this.boxCollider.width;
            h = this.boxCollider.height;
            this.createBossHp();
            //暂时缩放只对boss2更改~
            if (this.e_type === 2) {
                this.enmeySprite.scale(this.scaleXY.x, this.scaleXY.y);
            }
            else {
                this.enmeySprite.scale(0.9, 0.9);
            }
        }
        if (!this.enmeySprite["vars_"]) {
            this.enmeySprite["vars_"] = {};
        }
        this.mark_w = w;
        this.mark_h = h;
        this.enmeySprite["vars_"].propertyObj = this;
        var e_posX = Tool_1.default.random(0, Laya.stage.width - w - 5);
        var e_posY = Tool_1.default.random(-30 - h, -5 - h);
        this.enmeySprite.pos(e_posX, e_posY);
    };
    BossObject.prototype.createMonsterAddChild = function () {
        var templetValue = SkeletonTempletManage_1.default.getInstance().templets[this.pic];
        var sk = templetValue.buildArmature(0);
        sk.play(0, true);
        this.enmeySprite.addChild(sk);
        return sk;
    };
    BossObject.prototype.destroyEnemy = function () {
        this.enmeySprite.destroy();
    };
    BossObject.prototype.createBossHp = function (nowHp) {
        var prefabObj = Laya.loader.getRes("prefab/Boss_hp.json");
        this.bossHpObj = prefabObj.create();
        this.bossHpObj.name = "Boss_hp";
        var imgDi = this.bossHpObj.getChildByName("progress_pic");
        this.boss_hpMask = imgDi.mask;
        this.bossHpObj.x = this.boxCollider.width / 2 - imgDi.width / 2;
        this.bossHpObj.y = this.boxCollider.height;
        this.changeHpProgress(this.hp);
        this.bossHpObj.zOrder = 5;
        this.enmeySprite.addChild(this.bossHpObj);
    };
    /**
     * 改变hp进度条
     */
    BossObject.prototype.changeHpProgress = function (nowHp) {
        //暂无boss的进度条
        if (this.e_type !== 2) {
            var mask = this.progress_bar.mask;
            mask.graphics.clear();
            mask.graphics.drawRect(0, -5.5, 104 * ((nowHp || this.hp) / this.startHp), 20, "##ff0000");
        }
        else {
            if (this.boss_hpMask) {
                this.boss_hpMask.graphics.clear();
                this.boss_hpMask.graphics.drawRect(0, 0, 321 * ((nowHp || this.hp) / this.startHp), 52, "#ff0000");
            }
        }
    };
    BossObject.prototype.setHpBarShowStatus = function (show) {
        if (this.e_type !== 2) {
            this.progress_bar.visible = show;
            this.progress_di.visible = show;
        }
        else {
            this.bossHpObj.visible = show;
        }
    };
    /**
     * boss移动
     */
    BossObject.prototype.bossMove = function () {
        if (this.e_type !== 2) {
            return;
        }
        this.tween = Laya.Tween.to(this.enmeySprite, { x: Tool_1.default.random(0, Laya.stage.width - this.enmeySprite.width / 2), y: ((Laya.stage.height / 3) - this.enmeySprite.height / 2) }, Tool_1.default.random(2000, 5000), null, Laya.Handler.create(this, this.bossAtatck), null, true);
    };
    BossObject.prototype.bossAtatck = function () {
        if (this.isWFboss) {
            !this.enmeySprite["markName"] && this.enmeySprite.addComponent(this.needAddScript);
            return;
        }
        this.bossStatus = "stand";
        this.nick === JsonEnum_1.default.enemyToPerfab.boss2 && this.initVarBoss2();
        this.nick === JsonEnum_1.default.enemyToPerfab.boss1 && this.initVarBoss1();
        this.nick === JsonEnum_1.default.enemyToPerfab.boss3 && this.initVarBoss3();
        this.nick === JsonEnum_1.default.enemyToPerfab.boss4 && this.initVarBoss4();
        this.nick === JsonEnum_1.default.enemyToPerfab.boss5 && this.initVarBoss5();
        this.moveVarInit();
        Laya.Tween.clearTween(this.enmeySprite);
        Laya.timer.loop(100, this, this.onBossUpdate);
        this.createBulletTime = Date.now();
        this.bossMoveTime = Date.now();
        this.bossSkillTime = Date.now();
        //Laya.timer.loop(this.bulletObj.shootSpeed, this, this.createBullet);
    };
    BossObject.prototype.initVarBoss2 = function () {
        this.triggerSkill = false;
        this.commBulletWave = Date.now();
        this.ionPaoTime = Date.now();
        this.skillBulletTime = Date.now();
        this.commBulletTime = Date.now();
        this.bossStatus = "coolSkill";
    };
    BossObject.prototype.initVarBoss3 = function () {
        this.triggerSkill = false;
        this.cbStatus1_boss3 = "shot";
        this.cbStatus2_boss3 = "shot";
        this.cbTime1_boss3 = Date.now();
        this.shotBTime_boss3 = this.cbTime1_boss3;
        this.cbShotIndex1_boss3 = 0;
        this.shotNumInWave_boss3 = 0;
        this.shotWave2_boss3 = 0;
        this.bossStatus = "endFollowUp";
        this.isWaring_boss3 = true;
        this.skillWarnTime_boss3 = this.cbTime1_boss3;
    };
    /**
     * boss4 冰怪部分初始化
     */
    BossObject.prototype.initVarBoss4 = function () {
        this.triggerSkill = false;
        this.triggerNBSkill = false;
        this.btime1_boss4 = Date.now();
        this.bShotTime1_boss4 = Date.now();
        this.bCommStatus = "b1";
        this.bShotLeft1 = false;
        this.bShotIndex1 = 0;
        this.isBSkill1 = true;
        this.isBSkill2 = false;
        this.skillStartTime_boss4 = Date.now();
        this.skillNum1_boss4 = 0;
        this.skillBStartTime_boss4 = Date.now();
        this.bShotIndex2 = 0;
    };
    /**
     * boss5 火怪的变量初始化
     */
    BossObject.prototype.initVarBoss5 = function () {
        this.triggerSkill = false;
        this.triggerNBSkill = false;
        this.isBSkill1 = true;
        this.isBSkill2 = false;
        this.skillStartTime_boss5 = Date.now();
        this.skillLastTime_boss5 = this.skillStartTime_boss5;
        this.bCommStatus = "b1";
        this.bCommWaveIndex1 = 0;
        this.waveLastTime_boss5 = this.skillStartTime_boss5;
    };
    BossObject.prototype.initVarBoss1 = function () {
        this.triggerSkill = false;
        this.commBStatus_boss1 = "shoting";
        this.commBulletTime_boss1 = Date.now();
        this.isCircleing = true;
        this.commBulletContinueTime_boss1 = null /*Date.now()*/;
        this.nowBulletPlace = 0;
        this.isCommonBStop = false;
        this.commBIndex = 0;
        this.commBStopIndex = 0;
        this.canCreateSkill1_boss1 = false;
        this.timeLastSkill1_boss1 = Date.now();
        this.nowNumOneLieSkill1_boss1 = 0;
        this.timeLastSkill2_boss1 = Date.now();
        this.obj_bossBSkill1 = [];
        this.bSkillObj1_boss1 = [];
        this.initControlBNumByOnePlaceVar();
    };
    BossObject.prototype.initControlBNumByOnePlaceVar = function () {
        this.controlBNumByOnePlace = [];
        var i = 0;
        ;
        for (i; i < this.circleNums; i++) {
            this.controlBNumByOnePlace[i] = 0;
        }
    };
    //skill释放技能 coolSkill技能冷却   skillPre释放之前动作 
    /**
     * boss的移动大部分是吧统一  蝎子怪除外
     */
    BossObject.prototype.onBossUpdate = function () {
        if (Playing_var_1.default.getInstance().gameModel === "endless" && PlayingSceneControl_1.default.instance.isGamePause) {
            return;
        }
        switch (this.nick) {
            case JsonEnum_1.default.enemyToPerfab.boss2:
                this.move_boss2();
                this.attack_boss2();
                break;
            case JsonEnum_1.default.enemyToPerfab.boss1:
                this.move_boss2();
                this.attack_boss1();
                break;
            case JsonEnum_1.default.enemyToPerfab.boss3:
                this.move_boss2();
                this.attack_boss3();
                break;
            case JsonEnum_1.default.enemyToPerfab.boss4:
                this.move_boss2();
                this.attack_boss4();
                break;
            case JsonEnum_1.default.enemyToPerfab.boss5:
                this.move_boss2();
                this.attack_boss5();
                break;
            default:
                break;
        }
        return;
        if (Date.now() - this.createBulletTime >= this.bulletObj.shootSpeed) {
            this.createBulletTime = Date.now();
            if (this.bossStatus != "skill" && this.bossStatus != "skillPre") {
                switch (this.nick) {
                    case JsonEnum_1.default.enemyToPerfab.boss1:
                        this.createBullet_boss1();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss2:
                        this.createBullet();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss3:
                        this.createBullet_boss3();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss4:
                        //冰怪
                        this.createBullet_boss4();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss5:
                        //火怪
                        this.createBullet_boss5();
                        break;
                    default:
                        break;
                }
            }
        }
        if (this.bossStatus === "stand") {
            !this.bossMoveInterval && (this.bossMoveInterval = Tool_1.tools.random(2000, 4000));
            if (Date.now() - this.bossMoveTime >= this.bossMoveInterval) {
                this.bossStatus = "move";
                this.bossMoveInterval = null;
                this.bossMoveTime = Date.now();
                Laya.Tween.to(this.enmeySprite, { x: Tool_1.default.random(0, Laya.stage.width - (this.enmeySprite.width || 140) / 2) }, 1200, null, Laya.Handler.create(this, this.bossMoveEnd), null, true, true);
            }
        }
        if (this.bossStatus === "stand") {
            if (Date.now() - this.bossSkillTime >= this.bossSkillInterval) {
                this.bossSkillTime = Date.now();
                console.log("boss开始释放技能！");
                this.bossStatus = "skillPre";
                this.nick !== JsonEnum_1.default.enemyToPerfab.boss3 && this.playAction(bossDragonAction.skill);
                // if (this.nick !== Data2.enemyToPerfab.boss1 && this.nick !== Data2.enemyToPerfab.boss2 && this.nick !== Data2.enemyToPerfab.boss4) {
                //     Laya.timer.once(this.nick === Data2.enemyToPerfab.boss5 ? 3500 : 1000, this, this.skillEnd);
                // }
                switch (this.nick) {
                    case JsonEnum_1.default.enemyToPerfab.boss1:
                        //this.setBossSkill_boss1();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss2:
                        //this.setBossSkill();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss3:
                        this.setBossSkill_boss3();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss4:
                        //this.setBossSkill_boss4();
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss5:
                        // this.skillDateNow = Date.now();
                        // this.createBulletPlaceByBoss5 = 0;
                        // this.setBossSkill_boss5();
                        break;
                    default:
                        break;
                }
            }
        }
        if (this.nick === JsonEnum_1.default.enemyToPerfab.boss5 && this.bossStatus === "skill" && (Date.now() - this.skillDateNow) >= 500) {
            this.setBossSkill_boss5();
        }
    };
    /**
     * boss1 释放技能
     */
    BossObject.prototype.setBossSkill_boss1 = function () {
        Laya.timer.once(200, this, this.setSkill_createSpore);
    };
    /**
     * setBossSkill_boss3释放技能
     */
    BossObject.prototype.setBossSkill_boss3 = function () {
        //toast.noBindScript("开始锁定！！！");
        Laya.Pool.getItemByCreateFun("focusRole", this.focusRole, this);
        Laya.Tween.to(this.enmeySprite, { x: PlayingSceneControl_1.default.instance.roleObj.x, y: PlayingSceneControl_1.default.instance.roleObj.y }, 1900, null, Laya.Handler.create(this, this.bossMoveEnd), 500, true);
    };
    BossObject.prototype.focusRole = function () {
        var sk = new Laya.Skeleton();
        //sk.loadImage("")
        sk.url = "dragonbones/" + "miaozhun" + ".sk";
        sk.pos(60, -50);
        // sk.on(Laya.Event.STOPPED, this, (sk) => {
        //     sk.removeSelf();
        //     Laya.Pool.recover("focusRole", sk);
        // }, [sk]);
        return sk;
    };
    /**
     * boss4释放技能
     */
    BossObject.prototype.setBossSkill_boss4 = function () {
        var bulletObj = this.bulletObj;
        var i = 0;
        var iceNum = 4;
        //186-25-50        186-25  186+25 186+25+50
        var startX;
        for (i; i < iceNum; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (i === 0) {
                if (this.enmeySprite.x + 186 - 25 - 50 < 0) {
                    startX = 0;
                }
                else if (this.enmeySprite.x + 186 + 25 + 50 > Laya.stage.width) {
                    startX = Laya.stage.width - 50 - 25 - 25 - 50;
                }
                else {
                    startX = this.enmeySprite.x + 186 - 25 - 50;
                }
            }
            b_instance.pos(startX + i * 100, this.enmeySprite.y + 207 + 10);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            b_instance.getChildByName("img").visible = false;
            var sk = b_instance.getChildByName("sk");
            sk.visible = true;
            sk.url = "dragonbones/bingzhui.sk";
            // Laya.stage.addChild(b_instance);
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    BossObject.prototype.setBossSkill_boss5 = function () {
        var posX = [97, 179, 258, 344, 258, 179, 97];
        var bulletObj = this.bulletObj;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + posX[this.createBulletPlaceByBoss5], this.enmeySprite.y + 298);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        b_instance.getChildByName("img").visible = false;
        var sk = b_instance.getChildByName("sk");
        sk.url = "dragonbones/huoqiu.sk";
        sk.visible = true;
        // Laya.stage.addChild(b_instance);
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        this.createBulletPlaceByBoss5++;
        if (posX.length === this.createBulletPlaceByBoss5) {
            Laya.timer.once(1000, this, this.skillEnd);
            this.playAction(JsonEnum_1.default.bossDragonAction.stand);
        }
    };
    /**
     * boss1 创建孢子
     */
    BossObject.prototype.setSkill_createSpore = function () {
        Laya.timer.clear(this, this.setSkill_createSpore);
        var bulletObj = this.bulletObj;
        //三个孢子
        var i = 1;
        var markXY = { 1: 186 - 70, 2: 186, 3: 186 + 70 };
        for (i; i < 4; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + markXY[i], this.enmeySprite.y + 207 + 70 + 90);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.display;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            b_instance.getChildByName("img").visible = false;
            var sk = b_instance.getChildByName("sk");
            //sk.url = "dragonbones/baozi.sk";
            sk.visible = false;
            sk.load("dragonbones/baozi.sk", Laya.Handler.create(this, function (markSk) {
                markSk.visible = true;
            }, [sk]));
            // Laya.stage.addChild(b_instance);
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
        // Laya.timer.once(200, this, this.setSkill_spore);
    };
    /**
     * boss释放技能
     */
    BossObject.prototype.setBossSkill = function () {
        var bulletObj = this.bulletObj;
        //每次发射三排子弹
        var i = 1;
        for (i; i <= 3; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + 186, this.enmeySprite.y + 207);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            // Laya.stage.addChild(b_instance);
            b_instance.getChildByName("img").visible = false;
            var sk = b_instance.getChildByName("sk");
            sk.visible = true;
            sk.url = "dragonbones/xuanfeng.sk";
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    BossObject.prototype.bossMoveEnd = function () {
        this.bossStatus = "stand";
    };
    BossObject.prototype.skillEnd = function () {
        this.bossStatus = "stand";
    };
    BossObject.prototype.SK_listener = function (e) {
        switch (e) {
            case Laya.Event.STOPPED:
                switch (this.nick) {
                    case JsonEnum_1.default.enemyToPerfab.boss2:
                        if (this.bossStatus == "skillPre") {
                            this.createSkill_b2();
                            this.bossSK.play(bossDragonAction.stand, true);
                            this.bossStatus = "skill";
                            this.skillBulletTime = Date.now();
                            this.playAction(bossDragonAction.stand);
                        }
                        else {
                            this.playAction(bossDragonAction.stand);
                        }
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss1:
                        this.playAction(bossDragonAction.attack);
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss3:
                        this.playAction(bossDragonAction.attack);
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss4:
                        this.playAction(bossDragonAction.stand);
                        break;
                    case JsonEnum_1.default.enemyToPerfab.boss5:
                        this.playAction(bossDragonAction.attack);
                    default:
                        break;
                }
                return;
                if (this.bossStatus == "skillPre") {
                    this.bossStatus = "skill";
                    Laya.timer.once(1000, this, this.skillEnd);
                    switch (this.nick) {
                        case JsonEnum_1.default.enemyToPerfab.boss1:
                            this.setBossSkill_boss1();
                            break;
                        case JsonEnum_1.default.enemyToPerfab.boss2:
                            this.setBossSkill();
                            break;
                        case JsonEnum_1.default.enemyToPerfab.boss3:
                            this.setBossSkill_boss3();
                            break;
                        case JsonEnum_1.default.enemyToPerfab.boss4:
                            this.setBossSkill_boss4();
                            break;
                        case JsonEnum_1.default.enemyToPerfab.boss5:
                            this.skillDateNow = Date.now();
                            this.createBulletPlaceByBoss5 = 0;
                            this.setBossSkill_boss5();
                            break;
                        default:
                            break;
                    }
                }
                this.playAction(bossDragonAction.stand);
                break;
            default:
                break;
        }
    };
    BossObject.prototype.SK_action = function (e) {
        switch (e.name) {
            case "commshot2":
                console.error("创建boss1普通子弹2");
                this.createCommBullet2_b1();
                break;
            case "rightshot":
                this.calSkillNum_boss4();
                break;
            case "leftshot":
                this.calSkillNum_boss4();
                break;
            default:
                break;
        }
    };
    BossObject.prototype.calSkillNum_boss4 = function () {
        this.attackSkill_boss4();
        if (++this.skillNum1_boss4 == 2) {
            this.skillStartTime_boss4 = Date.now();
            this.skillBStartTime_boss4 = this.skillStartTime_boss4;
            this.isBSkill2 = true;
        }
        //发射四次 boss1停顿n s
        if (this.skillNum1_boss4 === 4) {
            this.isBSkill1 = false;
            this.skillNum1_boss4 = 0;
            this.playAction(bossDragonAction.attack);
            this.skillStopTime_boss4 = Date.now();
        }
    };
    //boss2放普通子弹 
    BossObject.prototype.createBullet = function () {
        var bulletObj = this.bulletObj;
        //每次发射三排子弹
        var i = 1;
        for (i; i <= 3; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + 186, this.enmeySprite.y + 207);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
            //方向
            b_instance.vars_.propertyObj.directType = i;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            var sk = b_instance.getChildByName("sk");
            sk.visible = false;
            b_instance.getChildByName("img").visible = true;
            // Laya.stage.addChild(b_instance);
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    /**
     * boss3普通子弹
     */
    BossObject.prototype.createBullet_boss3 = function () {
        var bulletObj = this.bulletObj;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + 108, this.enmeySprite.y + 309);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        // Laya.stage.addChild(b_instance);
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
    };
    /**
     * boss4的普通子弹
     */
    BossObject.prototype.createBullet_boss4 = function () {
        if (this.bulletPosInBoss4 === void 0 || this.bulletPosInBoss4 === 2) {
            this.bulletPosInBoss4 = 1;
        }
        else {
            this.bulletPosInBoss4 = 2;
        }
        var posMarkPlus = { 1: -70, 2: 460 };
        var bulletObj = this.bulletObj;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + posMarkPlus[this.bulletPosInBoss4], this.enmeySprite.y + 288);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        //
        // Laya.stage.addChild(b_instance);
        b_instance.getChildByName("img").visible = true;
        var sk = b_instance.getChildByName("sk");
        sk.stop();
        sk.visible = false;
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
    };
    /**
     * boss5的普通子弹
     */
    BossObject.prototype.createBullet_boss5 = function () {
        var bulletNum = 4;
        var posArr = [-178, -78, 520, 620];
        var i = 0;
        for (i; i < bulletNum; i++) {
            var bulletObj = this.bulletObj;
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + posArr[i], this.enmeySprite.y + 210);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            //标记位置
            b_instance.vars_.propertyObj.directType = i + 1;
            b_instance.getChildByName("img").visible = true;
            var sk = b_instance.getChildByName("sk");
            sk.stop();
            sk.visible = false;
            // Laya.stage.addChild(b_instance);
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    /**
     * boss1普通子弹
     */
    BossObject.prototype.createBullet_boss1 = function () {
        var bulletObj = this.bulletObj;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + 186, this.enmeySprite.y + 207);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        b_instance.getChildByName("img").visible = true;
        var sk = b_instance.getChildByName("sk");
        sk.stop();
        sk.visible = false;
        // Laya.stage.addChild(b_instance);
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
    };
    BossObject.prototype.playAction = function (actionName) {
        switch (actionName) {
            case bossDragonAction.stand:
                if (this.bossSK.templet) {
                    this.bossSK.play(actionName, true);
                }
                break;
            case bossDragonAction.attacked:
                if (this.nick !== JsonEnum_1.default.enemyToPerfab.boss4 && this.bossStatus !== "skillPre" && this.bossSK.templet) {
                    this.bossSK.play(actionName, false, false);
                }
                break;
            case bossDragonAction.attack:
                this.bossSK.play(actionName, true);
                break;
            case bossDragonAction.skill:
                //boss5的时候skill action 持续知道7颗火球放完
                var isLoop = this.nick === JsonEnum_1.default.enemyToPerfab.boss5;
                this.bossSK.play(actionName, isLoop, false);
                if (isLoop) {
                    this.bossStatus = "skill";
                    this.skillDateNow = Date.now();
                    this.createBulletPlaceByBoss5 = 0;
                    this.setBossSkill_boss5();
                }
            case bossDragonAction.skill1:
                //只针对boss4 冰怪
                this.bossSK.play(actionName, true);
                break;
            default:
                break;
        }
    };
    BossObject.prototype.moveVarInit = function () {
        this.isMoving = Tool_1.tools.random(0, 1) ? true : false;
        this.statusContinueTime = Date.now();
        this.statusContinueInterval = 3;
        this.nowBossDirector = this.enmeySprite.x > 195 ? "left" : "right";
    };
    BossObject.prototype.move_boss2 = function () {
        if (this.nick === JsonEnum_1.default.enemyToPerfab.boss3 && this.bossStatus === "followUping") {
            return;
        }
        if (this.isMoving) {
            if (Date.now() - this.statusContinueTime >= this.statusContinueInterval * 1000) {
                this.isMoving = false;
                this.statusContinueTime = Date.now();
                this.statusContinueInterval = Tool_1.tools.random(2, 5);
            }
            else {
                if (this.nowBossDirector === "left") {
                    this.enmeySprite.x -= 1.5;
                    if (this.enmeySprite.x < this.moveAreaPos.x1) {
                        this.isMoving = false;
                        this.statusContinueTime = Date.now();
                        this.statusContinueInterval = Tool_1.tools.random(2, 5);
                    }
                }
                else {
                    this.enmeySprite.x += 1.5;
                    if (this.enmeySprite.x > this.moveAreaPos.x2) {
                        this.isMoving = false;
                        this.statusContinueTime = Date.now();
                        this.statusContinueInterval = Tool_1.tools.random(2, 5);
                    }
                }
            }
        }
        else {
            if (Date.now() - this.statusContinueTime >= this.statusContinueInterval * 1000) {
                this.isMoving = true;
                this.statusContinueTime = Date.now();
                this.statusContinueInterval = Tool_1.tools.random(4, 10);
                this.nowBossDirector = this.enmeySprite.x > 195 ? "left" : "right";
            }
        }
    };
    BossObject.prototype.attack_boss2 = function () {
        // console.log("怪物还剩下的血量比例~~~~~~~~", (this.hp / this.startHp));
        if (!this.triggerSkill && (this.hp / this.startHp) < 0.5) {
            this.triggerSkill = true;
            this.bossStatus === "coolSkill";
        }
        if (this.triggerSkill) {
            this.attackSkill_boss2();
        }
        else {
            this.attackComm_boss2();
        }
    };
    BossObject.prototype.attackComm_boss2 = function () {
        if (Date.now() - this.commBulletTime >= this.commBulletInterval) {
            if (this.bossStatus === "skillPre") {
                return;
            }
            this.commBulletTime = Date.now();
            this.createCommBullet_b2();
        }
    };
    /**
     * boss2旋风技能
     */
    BossObject.prototype.attackSkill_boss2 = function () {
        if (this.bossStatus === "coolSkill" && Date.now() - this.skillBulletTime >= this.skillInterval) {
            this.bossStatus = "skillPre";
            this.bossSK.play(bossDragonAction.skill, false);
            //重置普通子弹得创建时间
            this.commBulletTime = Date.now();
        }
        else {
            this.bossStatus === "skill" && (this.bossStatus = "coolSkill");
            if (this.bossStatus === "coolSkill") {
                if (Date.now() - this.ionPaoTime >= this.ionPaoInterval) {
                    this.ionPaoTime = Date.now();
                    this.createIon_b2();
                }
                this.attackComm_boss2();
            }
        }
    };
    BossObject.prototype.createIon_b2 = function () {
        var bulletObj = this.bulletObj;
        var bconfig_scale = Number(bulletObj.bconfigProperty(3, "scale"));
        var bconfig_layer = Number(bulletObj.bconfigProperty(3, "layer"));
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + 186, this.enmeySprite.y + 207);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.ion;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        // (b_instance.getChildAt(0)).visible = false;
        // //需要在之前选个地方预加载
        // SkeletonTempletManage.getInstance().play(Data2.templetType.other, "pao", "boss2_pao", true, { x: 25.5, y: 26 }, b_instance, null, "sk");
        // b_instance.scale(bconfig_scale, bconfig_scale);
        if (bconfig_layer === 1) {
            PlayingSceneControl_1.default.instance.bulletParentUp_enmey.addChild(b_instance);
        }
        else {
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    /**
     * boss2旋风创建
     */
    BossObject.prototype.createSkill_b2 = function () {
        var i = 0;
        var bulletObj = this.bulletObj;
        var bconfig_scale = Number(bulletObj.bconfigProperty(2, "scale"));
        var bconfig_layer = Number(bulletObj.bconfigProperty(2, "layer"));
        for (i; i < 3; i++) {
            var randonAngle = Tool_1.tools.random(30, 150);
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + 186, this.enmeySprite.y + 207);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
            //方向
            b_instance.vars_.propertyObj.directType = randonAngle;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            // (b_instance.getChildByName("img") as Laya.Image).visible = false;
            //需要在之前选个地方预加载
            // SkeletonTempletManage.getInstance().play(Data2.templetType.other, "xuanfeng", "xuanfeng", true, { x: 102, y: 186 }, b_instance, null, "sk");
            b_instance.scale(1 || bconfig_scale, 1 || bconfig_scale);
            if (bconfig_layer === 1) {
                PlayingSceneControl_1.default.instance.bulletParentUp_enmey.addChild(b_instance);
            }
            else {
                PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
            }
        }
    };
    /**
     * boss普通攻击得子弹
     */
    BossObject.prototype.createCommBullet_b2 = function () {
        var bulletObj = this.bulletObj;
        var bconfig_position = bulletObj.bconfigProperty(1, "position");
        bconfig_position = bconfig_position.split("#");
        var pos_left = { x: Number(bconfig_position[0].split("|")[0]), y: Number(bconfig_position[0].split("|")[1]) };
        var pos_right = { x: Number(bconfig_position[1].split("|")[0]), y: Number(bconfig_position[1].split("|")[1]) };
        var i = 0;
        for (i; i < this.commBulletNumOne; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (i < 30) {
                b_instance.pos(this.enmeySprite.x + pos_left.x, this.enmeySprite.y + pos_left.y);
            }
            else {
                b_instance.pos(this.enmeySprite.x + pos_right.x, this.enmeySprite.y + pos_right.y);
            }
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
            //方向
            b_instance.vars_.propertyObj.directType = i < 30 ? i : (i - 30);
            b_instance.getChildByName("img").visible = true;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    BossObject.prototype.attack_boss1 = function () {
        // console.log("怪物还剩下的血量比例~~~~~~~~", (this.hp / this.startHp));
        if (!this.triggerSkill && (this.hp / this.startHp) < 0.5) {
            this.triggerSkill = true;
            this.bossStatus === "coolSkill";
        }
        if (this.triggerSkill) {
            this.attackSkill_boss1();
            this.createBSkill2_boss1();
            this.attackComm_boss1();
        }
        else {
            this.attackComm_boss1();
        }
    };
    /**
     * boss1 普通攻击
     */
    BossObject.prototype.attackComm_boss1 = function () {
        if (!this.commBulletContinueTime_boss1) {
            this.commBulletContinueTime_boss1 = Date.now();
        }
        if (this.commBStatus_boss1 === "shoting" && Date.now() - this.commBulletTime_boss1 >= this.commBInterval_boss1 && this.controlBNumByOnePlace[this.circleNums - 1] < 6 /*Date.now() - this.commBulletContinueTime_boss1 < this.commBulletInterval_boss1*/) {
            this.commBulletTime_boss1 = Date.now();
            this.createCommBullet_b1();
        }
        else {
            if (this.commBStatus_boss1 === "shoting" && this.controlBNumByOnePlace[this.circleNums - 1] >= 6 /*Date.now() - this.commBulletContinueTime_boss1 >= this.commBulletInterval_boss1*/) {
                this.commBStatus_boss1 = "cooling";
                this.commBulletContinueTime_boss1 = Date.now();
            }
            if (this.commBStatus_boss1 === "cooling" && Date.now() - this.commBulletContinueTime_boss1 >= this.stopShotTime) {
                //停顿超过3s
                this.commBStatus_boss1 = "shoting";
                this.commBulletContinueTime_boss1 = Date.now();
                this.isCircleing = true;
                this.nowBulletPlace = 0;
                this.initControlBNumByOnePlaceVar();
            }
        }
    };
    BossObject.prototype.createCommBullet_b1 = function () {
        // return;
        var bulletObj = this.bulletObj;
        var needCreateNum = this.isCircleing ? this.nowBulletPlace : this.circleNums;
        var i = 0;
        for (i; i <= needCreateNum; i++) {
            if (this.controlBNumByOnePlace[i] >= 6) {
                continue;
            }
            this.controlBNumByOnePlace[i]++;
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + 162, this.enmeySprite.y + 152);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
            var startAngle = 360 - (360 / this.circleNums) * i + 180 - (this.controlBNumByOnePlace[i] - 1) * 2;
            //方向  角度
            b_instance.vars_.propertyObj.directType = startAngle > 360 ? (startAngle - 360) : startAngle;
            ;
            b_instance.rotation = b_instance.vars_.propertyObj.directType - 90;
            var bIcon = b_instance.getChildByName("img");
            bIcon.skin = "face/花种小子弹.png";
            bIcon.visible = true;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
        if (this.isCircleing && ++this.nowBulletPlace >= this.circleNums) {
            this.isCircleing = false;
        }
    };
    /**
     * 创建boss1的第二种普通子弹~   boss张嘴触发
     */
    BossObject.prototype.createCommBullet2_b1 = function () {
        if (this.isCommonBStop) {
            if (++this.commBStopIndex > this.commBStopNums) {
                this.isCommonBStop = false;
                this.commBIndex = 0;
            }
        }
        else {
            var bulletObj = this.bulletObj;
            var randomR = Tool_1.tools.random(45, 135);
            var pos = Tool_1.tools.speedXYByAngle(randomR, 380 / 2);
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + pos.x, this.enmeySprite.y + pos.y);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common2;
            //方向  角度
            b_instance.vars_.propertyObj.directType = randomR;
            b_instance.getChildByName("img").visible = false;
            //需要在之前选个地方预加载
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "pao", "boss2_pao", true, { x: 25.5, y: 26 }, b_instance, null, "sk");
            b_instance.scale(2, 2);
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            PlayingSceneControl_1.default.instance.bulletParentUp_enmey.addChild(b_instance);
            if (++this.commBIndex >= this.commBShotNums) {
                this.isCommonBStop = true;
                this.commBStopIndex = 0;
            }
        }
    };
    BossObject.prototype.attackSkill_boss1 = function () {
        // return;
        if (this.canCreateSkill1_boss1) {
            if (Date.now() - this.timeLastSkill1_boss1 >= this.oneLieSkillInterval1_boss1) {
                this.timeLastSkill1_boss1 = Date.now();
                var i = 0;
                var bulletObj = this.bulletObj;
                for (i; i < this.shotNumsSkill1_boss1; i++) {
                    var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
                    b_instance.pos(this.enmeySprite.x + 162, this.enmeySprite.y + 152);
                    if (!b_instance.vars_) {
                        b_instance.vars_ = {};
                    }
                    b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
                    //boss子弹leix
                    b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
                    //方向  角度
                    b_instance.vars_.propertyObj.directType = (360 / this.shotNumsSkill1_boss1) * i - (this.nowNumOneLieSkill1_boss1 * 0.5);
                    b_instance.getChildByName("img").visible = false;
                    //发射子弹的boss的nick
                    b_instance.vars_.propertyObj.fromNick = this.nick;
                    this.obj_bossBSkill1.push(b_instance);
                    SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "zd", "zd", true, { x: 45, y: 44 }, b_instance, null, "sk");
                    PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
                }
                if (++this.nowNumOneLieSkill1_boss1 >= 5) {
                    this.canCreateSkill1_boss1 = false;
                }
            }
        }
        else {
            var allCancel = true;
            var i = 0;
            for (i; i < this.obj_bossBSkill1.length; i++) {
                if (this.obj_bossBSkill1[i].parent && this.obj_bossBSkill1[i].vars_.propertyObj.bossBulletType === JsonEnum_1.default.bossBulletType.skill) {
                    allCancel = false;
                    break;
                }
            }
            if (allCancel) {
                this.canCreateSkill1_boss1 = true;
                this.nowNumOneLieSkill1_boss1 = 0;
                this.obj_bossBSkill1 = [];
            }
        }
    };
    BossObject.prototype.createBSkill2_boss1 = function () {
        if (Date.now() - this.timeLastSkill2_boss1 >= this.skillInterval2_boss1) {
            this.timeLastSkill2_boss1 = Date.now();
            var bulletObj = this.bulletObj;
            //三个孢子
            var i = 1;
            var markXY = { 1: { x: 223, y: 210 }, 2: { x: 156, y: 186 }, 3: { x: 107, y: 177 } };
            for (i; i < 4; i++) {
                var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
                b_instance.pos(this.enmeySprite.x + markXY[i].x, this.enmeySprite.y + markXY[i].y);
                if (!b_instance.vars_) {
                    b_instance.vars_ = {};
                }
                b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
                //boss子弹leix
                b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.display;
                //发射子弹的boss的nick
                b_instance.vars_.propertyObj.fromNick = this.nick;
                b_instance.getChildByName("img").skin = "face/花种子弹.png";
                b_instance.rotation = -90 + 45 * i;
                //方向  角度
                b_instance.vars_.propertyObj.directType = 45 * i;
                // Laya.stage.addChild(b_instance);
                this.bSkillObj1_boss1.push(b_instance);
                PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
            }
            Laya.timer.once(1000, this, this.removeBaoZiFromParent);
        }
    };
    /**
     * 创建由孢子分裂出来的子弹
     */
    BossObject.prototype.attackSkill2_boss1 = function (pos) {
        var i = 0;
        var bulletObj = this.bulletObj;
        //每次分裂出4个孢子
        for (i; i < 4; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(pos.x, pos.y);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill2;
            //方向  角度
            b_instance.vars_.propertyObj.directType = 45 + 90 * i;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            var img = b_instance.getChildByName("img");
            img.skin = "face/花种分裂子弹.png";
            img.visible = true;
            b_instance.rotation = 45 + 90 * i;
            // Laya.stage.addChild(b_instance);
            this.bSkillObj1_boss1.push(b_instance);
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    BossObject.prototype.removeBaoZiFromParent = function () {
        if (!Array.isArray(this.bSkillObj1_boss1)) {
            return;
        }
        Laya.timer.clear(this, this.removeBaoZiFromParent);
        var objS = [];
        var i = 0;
        for (i; i < this.bSkillObj1_boss1.length; i++) {
            objS.push(this.bSkillObj1_boss1[i]);
        }
        if (Array.isArray(objS)) {
            var j = 0;
            for (j; j < objS.length; j++) {
                SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "baozha", "baozi", false, { x: objS[j].x, y: objS[j].y }, Laya.stage, null, "sk");
                this.attackSkill2_boss1({ x: objS[j].x, y: objS[j].y });
                objS[j].removeSelf();
            }
            this.bSkillObj1_boss1 = [];
        }
    };
    /**
     *  boss3 蝎子怪的普通攻击
     */
    BossObject.prototype.attack_boss3 = function () {
        // console.log("怪物还剩下的血量比例~~~~~~~~", (this.hp / this.startHp));
        if (!this.triggerSkill && (this.hp / this.startHp) < 0.5) {
            this.triggerSkill = true;
            this.bossStatus === "endFollowUp";
        }
        if (this.triggerSkill) {
            if (this.bossStatus === "endFollowUp") {
                if (!this.isWaring_boss3) {
                    if (Date.now() - this.skillShotTime_boss3 >= this.skillBInterval_boss3) {
                        this.attackSkill_boss3();
                        this.skillShotTime_boss3 = Date.now();
                        this.skillWarnTime_boss3 = Date.now();
                    }
                }
                else {
                    //警告
                    if (this.warnSK && Date.now() - this.skillWarnTime_boss3 >= this.skillWarnInterval_boss3) {
                        this.warnSK.removeSelf();
                        Laya.Pool.recover("focusRole", this.warnSK);
                        this.warnSK = null;
                        this.isWaring_boss3 = false;
                        this.skillWarnTime_boss3 = Date.now();
                        this.skillShotndex_boss3 = 0;
                        this.skillShotTime_boss3 = 0;
                    }
                    else {
                        //创建警告
                        if (!this.warnSK) {
                            this.warnSK = Laya.Pool.getItemByCreateFun("focusRole", this.focusRole, this);
                            this.warnSK.name = "focusRole";
                            PlayingSceneControl_1.default.instance.roleObj.addChild(this.warnSK);
                            this.skillWarnTime_boss3 = Date.now();
                        }
                    }
                }
            }
            else if (this.bossStatus === "followUping") {
                if (Date.now() - this.bossFollowUpTime >= this.bossFollowUpInterval) {
                    this.bossStatus = "endFollowUping";
                }
                else {
                    this.followUpBoss3();
                }
            }
            else {
                this.followUpBackBoss3();
            }
        }
        if (this.bossStatus === "endFollowUp") {
            if (this.cbStatus1_boss3 === "shot") {
                if (Date.now() - this.cbTime1_boss3 >= this.cbIntervar1_boss3) {
                    this.attackComm_boss3();
                    this.cbTime1_boss3 = Date.now();
                }
            }
            else {
                if (Date.now() - this.cbTime1_boss3 >= this.cbStopInterval1_boss3) {
                    this.cbStatus1_boss3 = "shot";
                    this.cbShotIndex1_boss3 = 0;
                }
            }
            if (this.cbStatus2_boss3 === "shot") {
                if (Date.now() - this.shotBTime_boss3 >= this.shotBInterval2) {
                    this.shotBTime_boss3 = Date.now();
                    this.attackComm2_boss3();
                }
            }
            else {
                if (Date.now() - this.shotBTime_boss3 >= (this.shotWave2_boss3 === 1 ? 1000 : this.shotWaveStopTime_boss3)) {
                    this.cbStatus2_boss3 = "shot";
                }
            }
        }
    };
    /**
     * boss5火怪 喷火boss
     */
    BossObject.prototype.attack_boss5 = function () {
        if (!this.triggerSkill && (this.hp / this.startHp) < 0.5) {
            this.triggerSkill = true;
            this.skillStartTime_boss5 = Date.now();
        }
        if (!this.triggerNBSkill && (this.hp / this.startHp) < 0.2) {
            //终极技能触发
            // this.triggerNBSkill = true;
        }
        if (this.triggerNBSkill) {
            //开始终极技能
        }
        else {
            if (this.triggerSkill) {
                if (this.isBSkill2) {
                    //技能2触发 
                    if (Date.now() - this.skillStartTime_boss5 < this.skillContinuedTime2_boss5) {
                        if (Date.now() - this.skillLastTime_boss5 >= this.skillInterval2_boss5) {
                            this.skillLastTime_boss5 = Date.now();
                            this.attackSkill2_boss5();
                            this.skillStopStartTime = Date.now();
                        }
                    }
                    else {
                        //技能2放完停顿 3s
                        if (Date.now() - this.skillStopStartTime >= this.skillChangeStopTime2) {
                            this.isBSkill2 = false;
                            this.skillStartTime_boss5 = Date.now();
                        }
                    }
                }
                else {
                    //技能1触发
                    if (Date.now() - this.skillStartTime_boss5 < this.skillContinuedTime1_boss5) {
                        if (Date.now() - this.skillLastTime_boss5 >= this.skillInterval1_boss5) {
                            this.skillLastTime_boss5 = Date.now();
                            this.attackSkill_boss5();
                            this.skillStopStartTime = Date.now();
                        }
                    }
                    else {
                        //技能1放完停顿 3s
                        if (Date.now() - this.skillStopStartTime >= this.skillChangeStopTime1) {
                            this.isBSkill2 = true;
                            this.skillStartTime_boss5 = Date.now();
                        }
                    }
                }
                this.attackJudge_boss5();
            }
            else {
                this.attackJudge_boss5();
            }
        }
    };
    BossObject.prototype.attack_boss4 = function () {
        if (!this.triggerSkill && (this.hp / this.startHp) < 0.5) {
            this.triggerSkill = true;
        }
        if (!this.triggerNBSkill && (this.hp / this.startHp) < 0.2) {
            //终极技能触发
            // this.triggerNBSkill = true;
        }
        if (this.triggerNBSkill) {
        }
        else {
            if (this.triggerSkill) {
                if (this.isBSkill2) {
                    if (Date.now() - this.skillStartTime_boss4 <= this.skillContinued2_boss4) {
                        if (Date.now() - this.skillBStartTime_boss4 >= this.skillInterval2_boss4) {
                            this.skillBStartTime_boss4 = Date.now();
                            this.attackSkill2_boss4();
                        }
                    }
                    else {
                        // this.isBSkill1 = true;
                        // this.skillNum1_boss4 = 0;
                    }
                }
                if (this.isBSkill1) {
                    if (this.skillNum1_boss4 === 0 && !this.needChangeAni) {
                        this.needChangeAni = true;
                        this.changeAni_boss4();
                    }
                }
                else {
                    if (Date.now() - this.skillStopTime_boss4 > this.skillStopInterval1_boss4) {
                        this.isBSkill1 = true;
                        this.skillNum1_boss4 === 0;
                        this.needChangeAni = null;
                    }
                }
                this.attackJudge_boss4();
                //骨骼事件调用
                // this.attackSkill_boss4();
            }
            else {
                this.attackJudge_boss4();
            }
        }
    };
    BossObject.prototype.changeAni_boss4 = function () {
        this.playAction(bossDragonAction.skill1);
    };
    BossObject.prototype.attackJudge_boss5 = function () {
        if (this.bCommStatus === "b1") {
            if (this.bCommWaveIndex1 < 8) {
                if (Date.now() - this.waveLastTime_boss5 >= this.bCommInterval1_boss5) {
                    this.waveLastTime_boss5 = Date.now();
                    //创建普攻1
                    this.attackComm_boss5();
                    this.bCommWaveIndex1 += 2;
                }
            }
            else {
                this.bCommWaveIndex1 = 0;
                this.bCommStatus = "b2";
                this.canB2_boss5 = true;
            }
        }
        else {
            if (this.canB2_boss5) {
                this.canB2_boss5 = false;
                this.attackComm2_boss5();
                this.waveLastTime_boss5 = Date.now();
            }
        }
    };
    /**
     * boss5技能1
     */
    BossObject.prototype.attackSkill_boss5 = function () {
        var bossPos = { 0: { x: 164, y: 412 }, 1: { x: 212.1, y: 412 }, 2: { x: 265.5, y: 412 } };
        var bulletObj = this.bulletObj;
        var i = 0;
        for (i; i < 1; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.pos(this.enmeySprite.x + bossPos[i].x, this.enmeySprite.y + bossPos[i].x);
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
            b_instance.vars_.propertyObj.directType = 90;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            // (b_instance.getChildByName("img") as Laya.Image).visible = false;
            //新建一个快照先~~~
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "huozhu", "boss5texiao", true, { x: 25.5, y: 56 }, b_instance, null, "sk");
            b_instance.scale(2.5, 2.5);
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    /**
     * boss5技能2
     */
    BossObject.prototype.attackSkill2_boss5 = function () {
        //扔火球
        var bulletObj = this.bulletObj;
        var posXY = { x: Tool_1.tools.random(86, 375), y: -100 };
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.pos(this.enmeySprite.x + posXY.x, this.enmeySprite.y + posXY.y);
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill2;
        var startAngle = Tool_1.tools.random(210, 330);
        var speedXy = Tool_1.tools.speedLabelByAngle(startAngle, bulletObj.defaultSpeedY, 0.3);
        b_instance.vars_.propertyObj.directType = { x: speedXy.x, y: speedXy.y };
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        // (b_instance.getChildByName("img") as Laya.Image).visible = false;
        SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "huoqiu", "boss5texiao", true, { x: 25.5, y: 56 }, b_instance, null, "sk");
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
    };
    /**
     * boss5的普通攻击2
     */
    BossObject.prototype.attackComm2_boss5 = function () {
        var bulletObj = this.bulletObj;
        var i = 0;
        for (i; i < 2; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.pos(this.enmeySprite.x + 229, this.enmeySprite.y + 410);
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common2;
            b_instance.vars_.propertyObj.directType = Tool_1.tools.random(30, 30 + 120);
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            b_instance.vars_.propertyObj.createSpreadB_boss5 = this.createSpreadB_boss5;
            b_instance.vars_.propertyObj.functionThis = this;
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    /**
     * 创建散开的子弹 boss5
     */
    BossObject.prototype.createSpreadB_boss5 = function (posx, posy) {
        var bulletObj = this.bulletObj;
        var i = 0;
        for (i; i < this.bCommBomeNum2_boss5; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.pos(posx, posy);
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common2;
            //标记是炸裂后的子弹
            b_instance.vars_.propertyObj.isBomb = true;
            b_instance.vars_.propertyObj.directType = (360 / this.bCommBomeNum2_boss5) * i;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
        if (this.bCommStatus !== "b1") {
            this.bCommStatus = "b1";
        }
    };
    BossObject.prototype.fireBossCreateB1 = function () {
        var obj = new FireBossBullet1_1.default();
        return obj;
    };
    /**
     * boss5的普通攻击1
     */
    BossObject.prototype.attackComm_boss5 = function () {
        var bulletObj = this.bulletObj;
        var i = 1;
        // const startPos = { x: -140, y: 348 };
        var ridus = 60; //旋转半径
        var startPosY = 388;
        var centerB;
        var bParentObj = Laya.Pool.getItemByCreateFun("fireBossB1", this.fireBossCreateB1, this);
        bParentObj.pos(0, 0);
        bParentObj.startLoop();
        Laya.stage.addChild(bParentObj);
        for (i; i < 9; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
            var markAngle = 0;
            var bPos = { x: 0, y: 0 };
            if (i > 4) {
                if (this.bCommWaveIndex1 == 0 || this.bCommWaveIndex1 == 4) {
                    bPos.x = (Laya.stage.width / 6) * 5;
                }
                else {
                    bPos.x = (Laya.stage.width / 6) * 4;
                }
                bPos.y = startPosY;
                b_instance.vars_.propertyObj.circleDotObj = { x: bPos.x, y: bPos.y };
                //方向
                markAngle = 270 + 90 * (i - 1 - 4);
                if (markAngle >= 360) {
                    markAngle = markAngle - 360;
                }
                b_instance.vars_.propertyObj.directType = markAngle;
            }
            else {
                if (this.bCommWaveIndex1 == 0 || this.bCommWaveIndex1 == 4) {
                    bPos.x = (Laya.stage.width / 6);
                }
                else {
                    bPos.x = (Laya.stage.width / 6) * 2;
                }
                bPos.y = startPosY;
                b_instance.vars_.propertyObj.circleDotObj = { x: bPos.x, y: bPos.y };
                //方向
                markAngle = 270 + 90 * (i - 1);
                if (markAngle >= 360) {
                    markAngle = markAngle - 360;
                }
                b_instance.vars_.propertyObj.directType = markAngle;
            }
            b_instance.pos(bPos.x, bPos.y);
            b_instance.vars_.propertyObj.createOneBullet1_boss5 = this.createOneBullet1_boss5;
            b_instance.vars_.propertyObj.functionThis = this;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            b_instance.vars_.propertyObj.canCreateChild = false;
            b_instance.vars_.propertyObj.createIndex = 0;
            b_instance.vars_.propertyObj.nowStep = 1;
            b_instance.vars_.propertyObj.ridus = ridus;
            // PlayingSceneControl.instance.bulletParent_enemy.addChild(b_instance);
            bParentObj.addChild(b_instance);
        }
        // bParentObj.startLoop();
    };
    /**
     *
     * @param createPos    创建的位置
     * @param circleDotObj  圆形的位置
     * @param roundAngle    圆心角
     * @param createIndex   总的创建到了index
     * @param createParent      父节点
     */
    BossObject.prototype.createOneBullet1_boss5 = function (createPos, circleDotObj, roundAngle, createIndex, createParent) {
        var bulletObj = this.bulletObj;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
        b_instance.vars_.propertyObj.circleDotObj = circleDotObj;
        b_instance.pos(createPos.x, createPos.y);
        b_instance.vars_.propertyObj.canCreateChild = true;
        b_instance.vars_.propertyObj.createIndex = createIndex;
        b_instance.vars_.propertyObj.nowStep = 2;
        b_instance.vars_.propertyObj.ridus = 60 + 6 * createIndex;
        //方向
        b_instance.vars_.propertyObj.directType = roundAngle;
        b_instance.vars_.propertyObj.createOneBullet1_boss5 = this.createOneBullet1_boss5;
        b_instance.vars_.propertyObj.functionThis = this;
        b_instance.scaleX = Math.pow(0.8, createIndex);
        b_instance.scaleY = b_instance.scaleX;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        createParent.addChild(b_instance);
        // Laya.timer.frameLoop(3, this, (b_instance) => {
        //     debugger
        // },[b_instance]);
    };
    BossObject.prototype.attackJudge_boss4 = function () {
        if (this.bCommStatus === "b1") {
            if (Date.now() - this.btime1_boss4 <= this.continuedTime1_boss4) {
                //云 bone
                this.createCloud_boss4();
                if (Date.now() - this.bShotTime1_boss4 <= this.bInterval1_boss4) {
                    this.bShotTime1_boss4 = Date.now();
                    //创建普攻1
                    this.attackComm_boss4();
                }
            }
            else {
                this.cancelCloud_boss4();
                this.bCommStatus = "b2";
                this.btime2_boss4 = Date.now();
                this.bGasTime2_boss4 = Date.now();
                this.bShotIndex2 = 0;
                //开始聚气
                this.handerGas();
            }
        }
        else if (Date.now() - this.bGasTime2_boss4 <= this.continuedTime2_boss4) {
            if (Date.now() - this.bGasTime2_boss4 > this.bStartInterval2_boss4) {
                this.cancelHanderGas();
                //开始普攻2
                if (Date.now() - this.btime2_boss4 >= this.bInterval2_boss4) {
                    this.btime2_boss4 = Date.now();
                    //开始普2
                    this.attackComm2_boss4();
                }
            }
        }
        else {
            this.bShotIndex1 = 0;
            this.bShotLeft1 = false;
            this.bCommStatus = "b1";
            this.btime1_boss4 = Date.now();
            this.bShotTime1_boss4 = Date.now();
        }
    };
    /**
     * boss4的技能攻击
     */
    BossObject.prototype.attackSkill_boss4 = function () {
        if (!this.isBSkill1) {
            return;
        }
        var bulletObj = this.bulletObj;
        var pointObj = new Laya.Point(this.enmeySprite.x - PlayingSceneControl_1.default.instance.roleObj.x, this.enmeySprite.y - PlayingSceneControl_1.default.instance.roleObj.y);
        pointObj.normalize();
        // this.enmeySprite.x -= this.defaultSpeedY * pointObj.x;
        // this.enmeySprite.y -= this.defaultSpeedY * pointObj.y;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        if (this.skillNum1_boss4 % 2) {
            b_instance.pos(this.enmeySprite.x + 469, this.enmeySprite.y + 298);
        }
        else {
            b_instance.pos(this.enmeySprite.x + 0, this.enmeySprite.y + 298);
        }
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
        //方向
        b_instance.vars_.propertyObj.directType = { x: pointObj.x, y: pointObj.y };
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        b_instance.getChildByName("img").visible = false;
        //新建一个快照先~~~
        SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "bzhui", "bingzhui", true, { x: 23, y: 107 }, b_instance, null, "sk");
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        // if (++this.skillNum1_boss4 == 2) {
        //     this.isBSkill2 = true;
        // }
        // if (this.skillNum1_boss4 >= 4) {
        //     this.isBSkill1 = false;
        // }
    };
    /**
     * boss4技能2
     */
    BossObject.prototype.attackSkill2_boss4 = function () {
        var bulletObj = this.bulletObj;
        var i = 0;
        //6个每只眼睛3个
        for (i; i < 6; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill2;
            if (i < 3) {
                b_instance.pos(this.enmeySprite.x + 161, this.enmeySprite.y + 126);
                //方向
                b_instance.vars_.propertyObj.directType = 45 + i * 4;
            }
            else {
                b_instance.pos(this.enmeySprite.x + 293, this.enmeySprite.y + 126);
                b_instance.vars_.propertyObj.directType = 90 + 45 + (i - 3) * 4;
            }
            b_instance.getChildByName("img").skin = "face/飞弹3_boss4.png";
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
    };
    /**
     * boss4普1
     */
    BossObject.prototype.attackComm_boss4 = function () {
        var bulletObj = this.bulletObj;
        var totalNum = 7;
        var posXy = { x: 0, y: 388 };
        if (this.bShotLeft1) {
            if (this.bShotIndex1 < 0) {
                this.bShotIndex1 = 0;
                this.bShotLeft1 = false;
            }
        }
        else {
            if (this.bShotIndex1 >= totalNum) {
                this.bShotLeft1 = true;
                this.bShotIndex1 = totalNum - 1;
            }
        }
        posXy.x = ((437 - 14) / totalNum) * this.bShotIndex1;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + posXy.x, this.enmeySprite.y + posXy.y);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
        //方向
        b_instance.vars_.propertyObj.directType = 90;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        b_instance.getChildByName("img").skin = "face/飞弹1_boss4.png";
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        if (this.bShotLeft1) {
            this.bShotIndex1--;
        }
        else {
            this.bShotIndex1++;
        }
    };
    /**
     * boss4普2
     */
    BossObject.prototype.attackComm2_boss4 = function () {
        var bulletObj = this.bulletObj;
        var centerPos = { x: 1.5, y: 302 };
        var centerPos2 = { x: 459, y: 302 };
        var totalNum = 36;
        if (this.bShotIndex2 >= totalNum) {
            this.bShotIndex2 = 0;
        }
        var i = 0;
        for (i; i < 6; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            var b_angle = void 0;
            if (i >= 3) {
                b_angle = (360 / totalNum) * this.bShotIndex2 + (i - 3) * 120;
            }
            else {
                b_angle = (360 / totalNum) * this.bShotIndex2 + i * 120;
            }
            if (b_angle > 360) {
                b_angle = b_angle - 360;
            }
            var offSetXy = Tool_1.tools.speedXYByAngle(b_angle, 10);
            if (i >= 3) {
                b_instance.pos(this.enmeySprite.x + offSetXy.x + centerPos.x, this.enmeySprite.y + offSetXy.y + centerPos.y);
            }
            else {
                b_instance.pos(this.enmeySprite.x + offSetXy.x + centerPos2.x, this.enmeySprite.y + offSetXy.y + centerPos2.y);
            }
            b_instance.rotation = b_angle - 90;
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            //boss子弹leix
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common2;
            //方向
            b_instance.vars_.propertyObj.directType = b_angle;
            // b_instance.vars_.propertyObj.markDirectType = 0;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            b_instance.getChildByName("img").skin = "face/飞弹2_boss4.png";
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
        // if (this.bShotLeft2) {
        //     this.bShotIndex2--;
        // } else {
        this.bShotIndex2++;
        // }
    };
    /**
     * boss4 普1下面的云
     */
    BossObject.prototype.createCloud_boss4 = function () {
        var sk_cloud = this.enmeySprite.getChildByName("sk_cloud");
        if (!sk_cloud) {
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "wuqi", "boos4texiao", true, { x: 248, y: 402 }, this.enmeySprite, null, "sk_cloud");
        }
        else {
            sk_cloud.visible = true;
        }
    };
    BossObject.prototype.cancelCloud_boss4 = function () {
        var sk_cloud = this.enmeySprite.getChildByName("sk_cloud");
        sk_cloud.visible = false;
    };
    /**
     * boss4 开始聚气
     */
    BossObject.prototype.handerGas = function () {
        var sk_left = this.enmeySprite.getChildByName("sk_left");
        var sk_right = this.enmeySprite.getChildByName("sk_right");
        if (!sk_left) {
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "jq", "boos4texiao", true, { x: 38.9, y: 322 }, this.enmeySprite, null, "sk_left");
            SkeletonTempletManage_1.default.getInstance().play(JsonEnum_1.default.templetType.other, "jq", "boos4texiao", true, { x: 500, y: 322 }, this.enmeySprite, null, "sk_right");
        }
        else {
            sk_right.visible = true;
            sk_left.visible = true;
        }
    };
    /**
     * boss4 取消聚气
     */
    BossObject.prototype.cancelHanderGas = function () {
        var sk_left = this.enmeySprite.getChildByName("sk_left");
        var sk_right = this.enmeySprite.getChildByName("sk_right");
        sk_left && (sk_left.visible = false);
        sk_right && (sk_right.visible = false);
    };
    /**
     * 创建普通子弹1
     */
    BossObject.prototype.attackComm_boss3 = function () {
        var bulletObj = this.bulletObj;
        var randomAngle = Tool_1.tools.random(this.cb1AngleRange[0], this.cb1AngleRange[1]);
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + 127, this.enmeySprite.y + 301);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        //boss子弹leix
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
        //方向
        b_instance.vars_.propertyObj.directType = randomAngle;
        b_instance.getChildByName("img").skin = "face/泡沫子弹_大.png";
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        if (++this.cbShotIndex1_boss3 >= 7) {
            this.cbStatus1_boss3 = "stop";
            this.cbTime1_boss3 = Date.now();
        }
    };
    /**
     * boss3的普通子弹2
     */
    BossObject.prototype.attackComm2_boss3 = function () {
        var bulletObj = this.bulletObj;
        var i = 0;
        for (i; i < this.shotNumsCb2_boss3; i++) {
            var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
            b_instance.pos(this.enmeySprite.x + 127, this.enmeySprite.y + 301);
            if (!b_instance.vars_) {
                b_instance.vars_ = {};
            }
            b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
            b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.common;
            //方向
            b_instance.vars_.propertyObj.directType = (360 / this.shotNumsCb2_boss3) * i - this.shotNumInWave_boss3 * 0.8;
            b_instance.getChildByName("img").skin = "face/子弹类型2.png";
            b_instance.rotation = b_instance.vars_.propertyObj.directType - 90;
            //发射子弹的boss的nick
            b_instance.vars_.propertyObj.fromNick = this.nick;
            PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        }
        if (++this.shotNumInWave_boss3 >= 9) {
            this.shotNumInWave_boss3 = 0;
            if (++this.shotWave2_boss3 >= 2) {
                this.shotWave2_boss3 = 0;
            }
            this.cbStatus2_boss3 = "stop";
        }
    };
    BossObject.prototype.attackSkill_boss3 = function () {
        var bulletObj = this.bulletObj;
        var b_instance = Laya.Pool.getItemByCreateFun(bulletObj.nick, bulletObj.res.create, bulletObj.res);
        b_instance.pos(this.enmeySprite.x + 127, this.enmeySprite.y + 301);
        if (!b_instance.vars_) {
            b_instance.vars_ = {};
        }
        b_instance.vars_.propertyObj = Tool_1.default.copydata(bulletObj);
        b_instance.vars_.propertyObj.bossBulletType = JsonEnum_1.default.bossBulletType.skill;
        //方向
        b_instance.vars_.propertyObj.directType = 90;
        b_instance.getChildByName("img").skin = "face/螃蟹子弹.png";
        b_instance.rotation = 0;
        //发射子弹的boss的nick
        b_instance.vars_.propertyObj.fromNick = this.nick;
        b_instance.vars_.propertyObj.setBossFollowVar = this.setBossFollowVar;
        b_instance.vars_.propertyObj.functionThis = this;
        PlayingSceneControl_1.default.instance.bulletParent_enemy.addChild(b_instance);
        if (++this.skillShotndex_boss3 >= 3) {
            this.isWaring_boss3 = true;
        }
    };
    BossObject.prototype.setBossFollowVar = function () {
        this.bossStatus = "followUping";
        this.bossFollowUpTime = Date.now();
    };
    /**
     * boss3 即时跟随玩家
     */
    BossObject.prototype.followUpBoss3 = function () {
        var pointObj = new Laya.Point(this.enmeySprite.x - PlayingSceneControl_1.default.instance.roleObj.x, this.enmeySprite.y - PlayingSceneControl_1.default.instance.roleObj.y);
        pointObj.normalize();
        this.enmeySprite.x -= this.defaultSpeedY * pointObj.x;
        this.enmeySprite.y -= this.defaultSpeedY * pointObj.y;
        // console.error("每次移动~~~this.defaultSpeedY * pointObj.x", this.defaultSpeedY * pointObj.x, "this.defaultSpeedY * pointObj.y", this.defaultSpeedY * pointObj.y);
        this.judgeFollowSuccess();
    };
    /**
     * boss3是否追踪成功
     */
    BossObject.prototype.judgeFollowSuccess = function () {
        var bossPointObj = new Laya.Point(this.enmeySprite.x + 531 / 2, this.enmeySprite.y + 470 / 2);
        var distance = bossPointObj.distance(PlayingSceneControl_1.default.instance.roleObj.x, PlayingSceneControl_1.default.instance.roleObj.y);
        if (distance < (50 + (470 / 2))) {
            //结束游戏
        }
    };
    /**
     * boss3追踪结束 回到开始位置
     */
    BossObject.prototype.followUpBackBoss3 = function () {
        var _this = this;
        var startBossPos = { x: Tool_1.tools.random(200, 400), y: ((Laya.stage.height / 3) - this.enmeySprite.height / 2) };
        var needTime = function () {
            var bossPoint = new Laya.Point(_this.enmeySprite.x, _this.enmeySprite.y);
            var distance = bossPoint.distance(startBossPos.x, startBossPos.y);
            return distance / 100;
        };
        Laya.Tween.to(this.enmeySprite, { x: startBossPos.x, y: startBossPos.y }, needTime(), null, Laya.Handler.create(this, this.bossBackFinish));
    };
    BossObject.prototype.bossBackFinish = function () {
        this.bossStatus = "endFollowUp";
    };
    /**
     * 清理timer
     */
    BossObject.prototype.clearTimes = function () {
        Laya.Tween.clearAll(this.enmeySprite);
        Laya.timer.clearAll(this);
    };
    /**
     * 清理boss的Res
     */
    BossObject.prototype.clearBossRes = function () {
        return;
        if (this.e_type === 2) {
            if (this.bossSK.templet) {
                var url = this.bossSK.templet["_loadList"][0];
                url && Laya.loader.clearTextureRes(url);
            }
            var urls = null;
            switch (this.nick) {
                case "Boss1":
                    urls = ["face/花种小子弹.png", "dragonbones/zd.png", "face/花种子弹.png"];
                    break;
                case "Boss2":
                    urls = ["dragonbones/boss2_pao.png", "dragonbones/xuanfeng.png"];
                    break;
                case "Boss3":
                    urls = ["face/子弹类型2.png", "face/泡沫子弹_大.png", "dragonbones/miaozhun.sk"];
                    break;
                case "Boss4":
                    urls = ["face/飞弹1_boss4.png", "face/飞弹2_boss4.png", "face/飞弹3_boss4.png",];
                    break;
                case "Boss5":
                    urls = ["dragonbones/boss5texiao.png"];
                    break;
                default:
                    break;
            }
            if (urls) {
                var i = 0;
                for (i; i < urls.length; i++) {
                    Laya.loader.clearRes;
                    Laya.loader.clearTextureRes(urls[i]);
                }
            }
        }
    };
    return BossObject;
}(EnemyCommon_1.default));
exports.default = BossObject;
},{"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../MediumEnemy/MediumEnemy_Move":32,"../Tools/Tool":37,"../manage/Music":53,"../manage/Playing_var":55,"../manage/SkeletonTempletManage":57,"../playing/PlayingSceneControl":65,"./BulletCommon":70,"./EnemyCommon":72,"./FireBossBullet1":75}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var JsonEnum_1 = require("../Data/JsonEnum");
var EnemySelfSkillControl = /** @class */ (function (_super) {
    __extends(EnemySelfSkillControl, _super);
    function EnemySelfSkillControl() {
        var _this = _super.call(this) || this;
        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        _this.intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        _this.numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        _this.strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        _this.boolType = true;
        return _this;
    }
    EnemySelfSkillControl.prototype.onEnable = function () {
        var _this = this;
        this.sk_status = null;
        this.self = this.owner;
        this.buffType = SecondWeaponData_1.default.getInstance().buffType[0];
        switch (this.buffType) {
            case "3":
                this.skObj = this.self.getChildAt(0);
                Laya.timer.frameOnce(3, this, function () { _this.skObj.play(2, true, true); });
                break;
            case "4":
                this.skObj = this.self.getChildByName("sk_name");
                Laya.timer.frameOnce(2, this, function () {
                    _this.skObj.on(Laya.Event.STOPPED, _this, _this.stopLister);
                    _this.skObj.play(2, false, true);
                    _this.sk_status = 3;
                });
                break;
            default:
                break;
        }
    };
    EnemySelfSkillControl.prototype.stopLister = function () {
        if (this.sk_status && this.sk_status === 3) {
            this.self.removeSelf();
        }
    };
    EnemySelfSkillControl.prototype.onDisable = function () {
        Laya.Pool.recover(JsonEnum_1.default.muzzlePrefabEnemy[this.buffType], this.owner);
    };
    return EnemySelfSkillControl;
}(Laya.Script));
exports.default = EnemySelfSkillControl;
},{"../Data/JsonEnum":26,"../manage/SecondWeaponData":56}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * boss5 的普攻1 的 parent
 */
var FireBossBullet1 = /** @class */ (function (_super) {
    __extends(FireBossBullet1, _super);
    function FireBossBullet1() {
        var _this = _super.call(this) || this;
        FireBossBullet1._items.push(_this);
        return _this;
    }
    FireBossBullet1.getItems = function () {
        return this._items || [];
    };
    FireBossBullet1.prototype.updateDate = function () {
        this.y += 2;
        if (this.y >= (this.stage.height - 100)) {
            this.y = 0;
            Laya.timer.clearAll(this);
            var i = 0;
            this.removeChildren();
            Laya.Pool.recover("fireBossB1", this);
        }
    };
    FireBossBullet1.prototype.startLoop = function () {
        Laya.timer.clearAll(this);
        Laya.timer.frameLoop(2, this, this.updateDate);
    };
    FireBossBullet1._items = [];
    return FireBossBullet1;
}(Laya.Sprite));
exports.default = FireBossBullet1;
},{}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var GoldDrop = /** @class */ (function (_super) {
    __extends(GoldDrop, _super);
    function GoldDrop() {
        var _this = _super.call(this) || this;
        _this.speedValue = 15;
        return _this;
    }
    GoldDrop.prototype.onEnable = function () {
        this.self = this.owner;
        this.roleObj = PlayingSceneControl_1.default.instance.roleObj;
    };
    GoldDrop.prototype.onUpdate = function () {
        var selfPoint = new Laya.Point(this.self.x, this.self.y);
        var distance = selfPoint.distance(this.roleObj.x + this.roleObj.width / 2, this.roleObj.y + this.roleObj.height / 2);
        if (distance <= 65) {
            this.self.removeSelf();
            Music_1.default.getInstance().playSound(musicToUrl.get_coin);
        }
        else {
            var difference = new Laya.Point(this.self.x - (this.roleObj.x + this.roleObj.width / 2), this.self.y - (this.roleObj.y + this.roleObj.height / 2));
            difference.normalize();
            this.self.x -= this.speedValue * difference.x;
            this.self.y -= this.speedValue * difference.y;
        }
    };
    GoldDrop.prototype.onDisable = function () {
        Laya.Pool.recover("DropGold", this.self);
    };
    return GoldDrop;
}(Laya.Script));
exports.default = GoldDrop;
},{"../Data/MusicEnum":27,"../manage/Music":53,"../playing/PlayingSceneControl":65}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SecondWeaponData_1 = require("../manage/SecondWeaponData");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var JsonEnum_1 = require("../Data/JsonEnum");
var MuzzleControl = /** @class */ (function (_super) {
    __extends(MuzzleControl, _super);
    function MuzzleControl() {
        var _this = _super.call(this) || this;
        /** @prop {name:intType, tips:"整数类型示例", type:Int, default:1000}*/
        _this.intType = 1000;
        /** @prop {name:numType, tips:"数字类型示例", type:Number, default:1000}*/
        _this.numType = 1000;
        /** @prop {name:strType, tips:"字符串类型示例", type:String, default:"hello laya"}*/
        _this.strType = "hello laya";
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        _this.boolType = true;
        return _this;
    }
    MuzzleControl.prototype.onEnable = function () {
        var _this = this;
        this.self = this.owner;
        this.sk = this.self.getChildAt(0);
        this.sk.on(Laya.Event.STOPPED, this, this.listerStop);
        this.secondData = SecondWeaponData_1.default.getInstance();
        this._bulletType = this.secondData.buffType;
        this.canCreateB = true;
        switch (this._bulletType[0]) {
            case "3":
                Laya.timer.frameOnce(3, this, function () {
                    _this.sk.play(0, false);
                    _this.skStatus = 0;
                });
                break;
            case "4":
            case "1":
            case "6":
            case "7":
            case "8":
            case "9":
            case "10":
            case "11":
                Laya.timer.frameOnce(3, this, function () {
                    _this.sk.play(1, false);
                    _this.skStatus = 2;
                });
                break;
            case "5":
                Laya.timer.frameOnce(3, this, function () {
                    _this.sk.play("fs", false);
                    _this.skStatus = 1;
                });
                break;
            default:
                break;
        }
    };
    MuzzleControl.prototype.listerStop = function (e) {
        switch (this._bulletType[0]) {
            case "3":
                if (this.skStatus === 0 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            case "4":
                if (this.skStatus === 2) {
                    this.sk.play(0, false);
                    this.skStatus = 1;
                }
                else if (this.skStatus == 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            case "5":
                if (this.skStatus === 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            //以下是暂时的
            case "6":
                //电磁炮
                if (this.skStatus === 2) {
                    this.sk.play(0, false);
                    this.skStatus = 1;
                }
                else if (this.skStatus == 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            case "7":
                //导弹跑
                if (this.skStatus === 2) {
                    this.sk.play(0, false);
                    this.skStatus = 1;
                }
                else if (this.skStatus == 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            case "1":
                //流星炮
                if (this.skStatus === 2) {
                    this.sk.play(0, false);
                    this.skStatus = 1;
                }
                else if (this.skStatus == 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            case "8":
                //虚空引擎
                if (this.skStatus === 2) {
                    this.sk.play(0, false);
                    this.skStatus = 1;
                }
                else if (this.skStatus == 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            case "9":
                //飞刃风暴
                if (this.skStatus === 2) {
                    this.sk.play(0, false);
                    this.skStatus = 1;
                }
                else if (this.skStatus == 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            case "10":
            case "11":
                //蘑菇炮
                if (this.skStatus === 2) {
                    this.sk.play(0, false);
                    this.skStatus = 1;
                }
                else if (this.skStatus == 1 && this.canCreateB) {
                    this.canCreateB = false;
                    this.createBulletSecond();
                }
                break;
            default:
                break;
        }
    };
    MuzzleControl.prototype.createBulletSecond = function () {
        this.sk.stop();
        Laya.timer.clearAll(this);
        this.self.removeSelf();
        PlayingSceneControl_1.default.instance.createBulletSecond();
    };
    MuzzleControl.prototype.onDisable = function () {
        var recoverName = JsonEnum_1.default.muzzlePrefab[Number(this._bulletType[0])];
        Laya.Pool.recover(recoverName || "Bullet_skill4_enemy", this.owner);
    };
    return MuzzleControl;
}(Laya.Script));
exports.default = MuzzleControl;
},{"../Data/JsonEnum":26,"../manage/SecondWeaponData":56,"../playing/PlayingSceneControl":65}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var role_1 = require("./role");
var Tool_1 = require("../Tools/Tool");
var JsonEnum_1 = require("../Data/JsonEnum");
var secondSkill = JsonEnum_1.default.secondSkill;
var random = Tool_1.default.random;
var movementLocus = /** @class */ (function (_super) {
    __extends(movementLocus, _super);
    function movementLocus() {
        var _this = _super.call(this) || this;
        /** @prop {name:boolType, tips:"布尔类型示例", type:Bool, default:true}*/
        _this.boolType = true;
        return _this;
    }
    movementLocus.prototype.onEnable = function () {
        this.self = this.owner;
        this._role = role_1.default.instance.owner; //主角
        this.propertyObj = this.owner["vars_"].propertyObj;
        this.monsterTypeJudgment();
        this.script_enemy = this.owner.getComponent(Laya.Script);
    };
    movementLocus.prototype.onDisable = function () {
        this.clearTimeline();
    };
    //整体判断
    movementLocus.prototype.monsterTypeJudgment = function () {
        var way = this.propertyObj.way;
        switch (way) {
            case 1:
                this.snakeLikeMobile();
                break;
            case 3:
                this.wirelessTracking();
                break;
            case 2:
                this.fixedCrash();
                break;
            default:
                break;
        }
    };
    //定点撞击
    movementLocus.prototype.fixedCrash = function () {
        var owner = this.owner; //自己节点
        Laya.Tween.to(owner, { x: owner.x, y: Laya.stage.height / 4 }, 2000, Laya.Ease.elasticInOut, Laya.Handler.create(this, function () {
            Laya.Tween.to(owner, { x: this._role.x, y: this._role.y }, 500, Laya.Ease.sineIn, Laya.Handler.create(this, function () {
                Laya.Tween.to(owner, { x: owner.x, y: Laya.stage.height }, 1000, Laya.Ease.sineIn, Laya.Handler.create(this, function () {
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    //蛇型走位
    movementLocus.prototype.snakeLikeMobile = function () {
        var owner = this.owner; //自己节点
        this._number = 1;
        this._number += 1 / 4;
        Laya.Tween.to(owner, { x: Laya.stage.width - this.propertyObj.mark_w, y: Laya.stage.height / 4 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            Laya.Tween.to(owner, { x: 0, y: Laya.stage.height * 2 / 4 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                Laya.Tween.to(owner, { x: Laya.stage.width - this.propertyObj.mark_w, y: Laya.stage.height * 3 / 4 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                    Laya.Tween.to(owner, { x: 0, y: Laya.stage.height }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                        Laya.Tween.to(owner, { x: Laya.stage.width - this.propertyObj.mark_w, y: Laya.stage.height * 5 / 4 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                        }, []), 0);
                    }, []), 0);
                }, []), 0);
            }, []), 0);
        }, []), 0);
    };
    // 无限跟踪
    movementLocus.prototype.wirelessTracking = function () {
        var owner = this.owner; //自己节点
        var point = new Laya.Point(this._role.x - owner.x, this._role.y - owner.y); //算出长宽差值
        point.normalize(); //归一化成比例便于控制缩放
        //放大这个比例
        Laya.Tween.to(owner, { x: owner.x + point.x * 3, y: owner.y + point.y * 3 }, 10, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            this.wirelessTracking();
        }, []), 0);
    };
    //综合清理
    movementLocus.prototype.clearTimeline = function () {
        Laya.Tween.clearAll(this.owner);
        Laya.timer.clearAll(this);
    };
    movementLocus.prototype.onUpdate = function () {
        if (this.propertyObj.e_type !== 2 && !this.propertyObj.way) {
            if (this.script_enemy["_moveOff"]) {
                //不超过边缘
                if (this.self.x >= (Laya.stage.width - this.propertyObj.mark_w)) {
                    this.script_enemy["_steering"] = 'left';
                    this.script_enemy["setSpeedRecover"]();
                }
                else if (this.self.x < 0) {
                    this.script_enemy["_steering"] = 'right';
                    this.script_enemy["setSpeedRecover"]();
                }
            }
        }
        // const self: Laya.Sprite = this.owner as Laya.Sprite;
        if (this.self["vars_"].skillType && this.self["vars_"].skillType === secondSkill.flottant) {
            if (this.self.y < 0) {
                this.self.getComponent(Laya.RigidBody).setVelocity({ x: 0, y: 0 });
                return;
            }
        }
        if (this.self.y >= (Laya.stage.height + this.propertyObj.mark_h + 10)) {
            this.clearTimeline();
            //到底部后再次回到屏幕的上方
            this.self.pos(random(0, Laya.stage.width - this.propertyObj.mark_w - 5), random(-30 - this.propertyObj.mark_h, -5 - this.propertyObj.mark_h));
            this.script_enemy["setSpeedRecover"]();
            this.monsterTypeJudgment();
        }
    };
    return movementLocus;
}(Laya.Script));
exports.default = movementLocus;
},{"../Data/JsonEnum":26,"../Tools/Tool":37,"./role":79}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Playing_var_1 = require("../manage/Playing_var");
var BitmapFontMananage_1 = require("../manage/BitmapFontMananage");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var OpenWx_1 = require("../manage/OpenWx");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var EndlessParseSkill_1 = require("../manage/EndlessParseSkill");
var toast_1 = require("../manage/toast");
var role = /** @class */ (function (_super) {
    __extends(role, _super);
    function role() {
        var _this = _super.call(this) || this;
        role.instance = _this;
        return _this;
    }
    role.prototype.onEnable = function () {
        this.self = this.owner;
        this.hurtedBg = PlayingSceneControl_1.default.instance.owner["hurted_img"];
        if (!this.self["vars_"]) {
            this.self["vars_"] = {};
        }
        this.self["vars_"].propertyObj = { "prefabType": JsonEnum_1.default.prefabType.role };
        //阵营
        this.self["vars_"].propertyObj.camp = 2;
        //碰撞半径
        this.self["vars_"].propertyObj.hitRadius = { w: 60, h: 55 };
        // this.noHurt = false;
        this.noHurt = false;
        this.haveSheild = false;
        // Laya.stage.addChild(this.hurtedBg);
    };
    role.prototype.onUpdate = function () {
        if (PlayingSceneControl_1.default.instance.isGamePause) {
            return;
        }
        if (this.noHurt) {
            if (Date.now() - this.markNoHurtStartTime <= 2000) {
                this.markShowAndHideIndex == void 0 && (this.markShowAndHideIndex = 0);
                if (this.markShowAndHideIndex % 10 === 0) {
                    this.self.visible = !this.self.visible;
                }
                if (this.markShowAndHideIndex % 25 === 0) {
                    this.hurtedBg.visible = !this.hurtedBg.visible;
                    !this.hurtedBg.parent && Laya.stage.addChild(this.hurtedBg);
                }
                this.markShowAndHideIndex++;
            }
            else {
                this.noHurt = false;
                this.self.visible = true;
                this.hurtedBg && (this.hurtedBg.visible = false);
                var urls = [this.hurtedBg.skin];
                PlayingSceneControl_1.default.instance.clearResUrl(urls, true);
                delete this.markShowAndHideIndex;
            }
        }
        if (this.haveSheild) {
            if (Date.now() - this.markHaveSheildStartTime >= this.keepSheildTime) {
                this.haveSheild = false;
                this.cancelSheildEffect();
            }
        }
        this.updateWuDiSkill();
    };
    /**
     * 间隔一段时间无敌的技能
     */
    role.prototype.updateWuDiSkill = function () {
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            if (EndlessParseSkill_1.default.getInstance().isUpgraded(5)) {
                if (this.isWuDiSkill == (void 0)) {
                    this.initWudiSkill();
                }
                if (this.isWuDiSkill) {
                    if (Date.now() - this.wuDiStartTime >= this.wuDiKeepTime) {
                        this.isWuDiSkill = false;
                        this.wuDiEndTime = Date.now();
                        this.wuDiEffectObj.visible = false;
                        toast_1.default.noBindScript("无敌状态失效~~~~~~~~");
                    }
                }
                else {
                    if (Date.now() - this.wuDiEndTime >= 10 * 1000) {
                        this.wuDiStartTime = Date.now();
                        this.isWuDiSkill = true;
                        this.wuDiEffectObj.visible = true;
                        toast_1.default.noBindScript("现在无敌状态~~~~~~~~");
                    }
                }
            }
        }
    };
    role.prototype.initWudiSkill = function () {
        this.updateWuDiKeepTime();
        this.wuDiStartTime = Date.now();
        this.isWuDiSkill = true;
        if (!this.wuDiEffectObj) {
            this.createWudiEffect();
        }
        else {
            this.wuDiEffectObj.visible = true;
        }
    };
    role.prototype.createWudiEffect = function () {
        var skObj = Laya.Pool.getItemByCreateFun("wudi", function () {
            var templet = SkeletonTempletManage_1.default.getInstance().templets["wudi"];
            var sk = templet.buildArmature(0);
            return sk;
        }, this);
        skObj.pos(this.self.width / 2, this.self.height / 2);
        skObj.play(0, true);
        this.self.addChild(skObj);
        this.wuDiEffectObj = skObj;
    };
    role.prototype.updateWuDiKeepTime = function () {
        var seconds = EndlessParseSkill_1.default.getInstance().getSkillNum(5);
        this.wuDiKeepTime = 1000 * seconds;
    };
    // onTriggerEnter(other: any, self: any): void {
    //     if (PlayingVar.getInstance().gameStatus !== "playing") {
    //         return;
    //     }
    //     const local = other.owner.vars_ && other.owner.vars_.propertyObj;
    //     if (!(local && local.prefabType)) {
    //         return;
    //     }
    //     if (!other.owner.visible || !other.owner.parent) {
    //         return;
    //     }
    //     const collisionEnemy: boolean = (local.prefabType === Data2.prefabType.bullletBoss || local.prefabType === Data2.prefabType.enemy);
    //     const collisionBossBullet: boolean = local.prefabType === "bullet";
    //     if ((collisionEnemy || collisionBossBullet) && PlayingVar.getInstance().invincible && !this.noHurt) {
    //         const otherHurtValue = other.owner["vars_"].propertyObj.hurtValue;
    //         PlayingControl.instance.roleHp -= otherHurtValue;
    //         if (PlayingControl.instance.roleHp <= 0) {
    //             this.setRoleDead();
    //             // this.createEffectInEneny(Data2.baozhaAni.fjbaozha);
    //             // console.log("游戏失败~!");
    //             // PlayingVar.getInstance().gameStatus = "settlement";
    //             // this.self.visible = false;
    //             // PlayingControl.instance.mainPlane.visible = false;
    //             // PlayingControl.instance.leftSecondWeapon.visible = false;
    //             // PlayingControl.instance.rightSecondWeapon.visible = false;
    //             // //Laya.Event.VISIBILITY_CHANGE
    //             // PlayingControl.instance.fighting = false;
    //             // //失败
    //             // Laya.Browser.window.game.overLevel = false;
    //             // Laya.timer.once(1200, this, this.openFailScene);
    //             // //游戏暂停
    //             // // PlayingControl.instance.pauseAndResumeGame();
    //         } else {
    //             this.startRoleNoHurt();
    //         }
    //         const nowHp: number = PlayingControl.instance.roleHp <= 0 ? 0 : PlayingControl.instance.roleHp;
    //         const mark_graphics = PlayingControl.instance.hpBar.mask.graphics;
    //         mark_graphics.clear();
    //         const markWidth = 49 + (213 / PlayingControl.instance.roleTotal) * nowHp;
    //         mark_graphics.drawRect(0, 0, markWidth, 44, "#ff0000");
    //         PlayingControl.instance.delayHpBar2(markWidth);
    //     }
    // }
    /**
     *
     * @param hurtValue 伤害值
     * @param from 子弹||敌人
     */
    role.prototype.setRoleHp = function (hurtValue, from) {
        //设置无敌测试
        // hurtValue = 0;
        if (hurtValue > 0) {
            if (this.haveSheild) {
                return;
            }
            if (this.isWuDiSkill) {
                return;
            }
        }
        if (hurtValue > 0) {
            var reduceHurt = this.getReduceHurt(from, hurtValue);
            if ((hurtValue -= reduceHurt) < 0) {
                hurtValue = 0;
            }
        }
        hurtValue < 0 && (hurtValue = Math.ceil(hurtValue));
        hurtValue < 0 && this.addHpEffect(hurtValue);
        // hurtValue < 0 && (hurtValue = 0);
        var P_instance = PlayingSceneControl_1.default.instance;
        P_instance.roleHp -= hurtValue;
        if (P_instance.roleHp <= 0) {
            this.setRoleDead();
        }
        else {
            hurtValue > 0 && from && from === "敌人" && this.startRoleNoHurt();
        }
        var nowHp;
        if (P_instance.roleHp <= 0) {
            nowHp = 0;
        }
        else if (P_instance.roleHp > P_instance.roleTotal) {
            nowHp = P_instance.roleTotal;
        }
        else {
            nowHp = P_instance.roleHp;
        }
        this.setHpProgress(nowHp);
        // const mark_graphics = P_instance.hpBar.mask.graphics;
        // mark_graphics.clear();
        // const markWidth = 49 + (213 / P_instance.roleTotal) * nowHp;
        // mark_graphics.drawRect(0, 0, markWidth, 44, "#ff0000");
        // P_instance.delayHpBar2(markWidth);
        // PlayingControl.instance.label_hpNum.text = "" + Math.floor(nowHp) + "/" + P_instance.roleTotal;
    };
    /**
     * 设置血量的进度条
     */
    role.prototype.setHpProgress = function (nowHp) {
        var P_instance = PlayingSceneControl_1.default.instance;
        if (nowHp == void 0) {
            nowHp = P_instance.roleHp;
        }
        var mark_graphics = P_instance.hpBar.mask.graphics;
        mark_graphics.clear();
        var markWidth = 49 + (213 / P_instance.roleTotal) * nowHp;
        mark_graphics.drawRect(0, 0, markWidth, 44, "#ff0000");
        P_instance.delayHpBar2(markWidth);
        PlayingSceneControl_1.default.instance.label_hpNum.text = "" + Math.floor(nowHp) + "/" + P_instance.roleTotal;
    };
    role.prototype.addHpEffect = function (value) {
        var addPrefab = PlayingSceneControl_1.default.instance.HpAddToast;
        var obj = Laya.Pool.getItemByCreateFun("HpAddToast", addPrefab.create, addPrefab);
        obj.pos(80 + 30, -34 + 24);
        obj.value = "+" + Math.abs(value);
        this.self.addChild(obj);
    };
    role.prototype.startRoleNoHurt = function () {
        this.noHurt = true;
        this.markNoHurtStartTime = Date.now();
    };
    /**
     * 无尽模式减伤技能
     */
    role.prototype.getReduceHurt = function (from, hurtValue) {
        var reduceNum = 0;
        var skillInstance = EndlessParseSkill_1.default.getInstance();
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            var reducePercent = 0;
            if (((from && from === "子弹") || !from) && skillInstance.isUpgraded(6)) {
                reducePercent += skillInstance.getSkillNum(6);
            }
            if (from && from === "敌人" && skillInstance.isUpgraded(7)) {
                reducePercent += skillInstance.getSkillNum(7);
            }
            if (skillInstance.isUpgraded(8)) {
                reducePercent += skillInstance.getSkillNum(8);
            }
            reduceNum = reducePercent * 0.01;
            return reduceNum * hurtValue;
        }
        return reduceNum;
    };
    role.prototype.startRoleSheild = function (keepTime) {
        this.keepSheildTime = keepTime * 1000;
        this.haveSheild = true;
        this.markHaveSheildStartTime = Date.now();
        this.createSheildEffect();
    };
    role.prototype.setRoleDead = function () {
        //微信小游戏震动~
        Laya.Browser.onMiniGame && OpenWx_1.default.getInstance().vibrateShort();
        this.createEffectInEneny(JsonEnum_1.default.baozhaAni.fjbaozha);
        console.log("游戏失败~!");
        Playing_var_1.default.getInstance().gameStatus = "settlement";
        this.self.visible = false;
        PlayingSceneControl_1.default.instance.mainPlane.visible = false;
        PlayingSceneControl_1.default.instance.leftSecondWeapon.visible = false;
        PlayingSceneControl_1.default.instance.rightSecondWeapon.visible = false;
        //Laya.Event.VISIBILITY_CHANGE
        PlayingSceneControl_1.default.instance.fighting = false;
        //失败
        Laya.Browser.window.game.overLevel = false;
        Laya.timer.once(1200, this, this.openFailScene);
        Music_1.default.getInstance().playSound(musicToUrl.bomb_hero);
        // UpBlackEffect.getInstance().setHide();
    };
    /**
     * 主角复活
     */
    role.prototype.setRoleRevival = function () {
        Playing_var_1.default.getInstance().gameStatus = "playing";
        PlayingSceneControl_1.default.instance.roleHp = PlayingSceneControl_1.default.instance.roleTotal;
        this.setHpProgress();
        this.self.visible = true;
        PlayingSceneControl_1.default.instance.mainPlane.visible = true;
        PlayingSceneControl_1.default.instance.leftSecondWeapon.visible = true;
        PlayingSceneControl_1.default.instance.rightSecondWeapon.visible = true;
        this.startRoleNoHurt();
        PlayingSceneControl_1.default.instance.fighting = true;
    };
    role.prototype.openFailScene = function () {
        Laya.timer.clear(this, this.openFailScene);
        PlayingSceneControl_1.default.instance.pauseGame();
        new BitmapFontMananage_1.default.BitmapManage("bitmapFont/settlement_number.fnt", "settlement_number", Laya.Handler.create(this, function () {
            Laya.Scene.open("test/GameFail_dialog.scene", false);
        }));
        // PlayingControl.instance.clearObjParent();
        // PlayingControl.instance.clearObjectPool();
        // PlayingControl.instance.clearStageSprite();
    };
    /**
     * @param type up上 down回到原位
     */
    role.prototype.moveRoleInMain = function (type) {
        var posY = type === "up" ? 637 + 100 : 1012;
        if (this.self.y === posY) {
            return;
        }
        Laya.Tween.to(this.self, { y: type === "up" ? 637 + 100 : 1012 }, 200, null, null, null, null, true);
        //this.self.on(Laya.Event.SELECT)
    };
    /**
 * 主角死亡的效果
 * @param type
 */
    role.prototype.createEffectInEneny = function (type) {
        var baozhaPrefab = Laya.loader.getRes("prefab/xg_baozha.json");
        var baozhaSprite = Laya.Pool.getItemByCreateFun("xg_baozha", baozhaPrefab.create, baozhaPrefab);
        baozhaSprite.aniName = "baozha1";
        baozhaSprite.prefabName = "xg_baozha";
        baozhaSprite.pos(this.self.x, this.self.y + 55);
        Laya.stage.addChild(baozhaSprite);
    };
    role.prototype.createSheildEffect = function () {
        var mark_sk = this.self.getChildByName("fanghudun");
        if (mark_sk) {
            mark_sk.visible = true;
            return;
        }
        var sk = Laya.Pool.getItemByCreateFun("fanghudun", function () {
            var templet = SkeletonTempletManage_1.default.getInstance().templets["fanghudun"];
            var sk = templet.buildArmature(0);
            return sk;
        }, this);
        sk.pos(62, 22);
        sk.visible = true;
        sk.name = "fanghudun";
        sk.play(0, true);
        this.self.addChild(sk);
    };
    role.prototype.cancelSheildEffect = function () {
        var sk = this.self.getChildByName("fanghudun");
        sk && (sk.visible = false);
    };
    return role;
}(Laya.Script));
exports.default = role;
},{"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/BitmapFontMananage":42,"../manage/EndlessParseSkill":48,"../manage/Music":53,"../manage/OpenWx":54,"../manage/Playing_var":55,"../manage/SkeletonTempletManage":57,"../manage/toast":59,"../playing/PlayingSceneControl":65}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var JsonEnum_1 = require("../Data/JsonEnum");
var Playing_var_1 = require("../manage/Playing_var");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var ButtonTouchEffect = /** @class */ (function (_super) {
    __extends(ButtonTouchEffect, _super);
    function ButtonTouchEffect() {
        var _this = _super.call(this) || this;
        /**未达成成就的id数组*/
        _this.notReachArr = [];
        return _this;
    }
    ButtonTouchEffect.prototype.onEnable = function () {
        this.eventRegistration();
        this.initData();
    };
    /**初始化数据*/
    ButtonTouchEffect.prototype.initData = function () {
        this.achieve = Playing_var_1.default.getInstance().achieve; //成就总信息
        this.playerAchieve = Playing_var_1.default.getInstance().playerAchieve; //成就奖励已经被领取的信息
        this.indexData = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.achievement); //数据表
        this.canReceiveAndeRedDot();
    };
    /**achieve对比数据表,返回一个成就达成的数组，数组里面是数据表里面的id
     * 并且把没有达成的成就id也放入了this.nodeReachArr中;
     * @param type 类型,和tap页数据表上面的类型一致1,2,3,4
     * @param value 成就达成的总值 */
    ButtonTouchEffect.prototype.contrastTable = function (type, value) {
        var reachArray = [];
        for (var key in this.indexData) {
            if (this.indexData.hasOwnProperty(key)) {
                var element = this.indexData[key];
                if (element.type === type) {
                    if (value >= element.value) {
                        reachArray.push(element.id);
                    }
                    else {
                        this.notReachArr.push(element.id);
                    }
                }
            }
        }
        return reachArray;
    };
    /**对比成就奖励已经被领过的信息,返回一个可以领取但是还没有领取的id数组
     * @param type 类型
     * @param array 这个类型下的可以领取的id数组
    */
    ButtonTouchEffect.prototype.contrastPlayerAchieve = function (type, array) {
        for (var key in this.playerAchieve[type]) {
            if (this.playerAchieve[type].hasOwnProperty(key)) {
                for (var i = 0; i < array.length; i++) {
                    //领取完成的和成就完成的同时存在则删掉这个id
                    if (Number(key) === array[i]) {
                        array.splice(i, 1);
                    }
                }
            }
        }
        return array;
    };
    /**还有可以领取的奖励的所有id
     * 并且设置红点提示
    */
    ButtonTouchEffect.prototype.canReceiveAndeRedDot = function () {
        this.reachButtonArr = [];
        // 不同类型下达成成就的id和未达成的成就id
        var arr1 = this.contrastTable(1, this.achieve.battleTopNum);
        var arr2 = this.contrastTable(2, this.achieve.killTopNum);
        var arr3 = this.contrastTable(3, this.achieve.endlessTopScore);
        var arr4 = this.contrastTable(4, this.achieve.unlockTopNum);
        //不同类型下剩余可以领取奖励的id
        var reachArray1 = this.contrastPlayerAchieve(1, arr1);
        var reachArray2 = this.contrastPlayerAchieve(2, arr2);
        var reachArray3 = this.contrastPlayerAchieve(3, arr3);
        var reachArray4 = this.contrastPlayerAchieve(4, arr4);
        this.reachButtonArr.push(reachArray1);
        this.reachButtonArr.push(reachArray2);
        this.reachButtonArr.push(reachArray3);
        this.reachButtonArr.push(reachArray4);
        if (reachArray1.length === 0 && reachArray2.length === 0 && reachArray3.length === 0 && reachArray4.length === 0) {
            this.redDot.visible = false;
        }
        else {
            this.redDot.visible = true;
        }
    };
    /**成就按钮点初始化*/
    ButtonTouchEffect.prototype.eventRegistration = function () {
        this.self = this.owner;
        this.startScale = this.self.scaleX;
        this.redDot = this.self.getChildAt(0);
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.DOWN);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.MOVE);
        this.self.on(Laya.Event.MOUSE_UP, this, this.UP);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.OUT);
    };
    /**按下缩小按钮*/
    ButtonTouchEffect.prototype.DOWN = function () {
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
        this.self.scale(0.9 * this.startScale, 0.9 * this.startScale);
    };
    /**移动时缩小*/
    ButtonTouchEffect.prototype.MOVE = function () {
        this.self.scale(0.9 * this.startScale, 0.9 * this.startScale);
    };
    /**抬起大小还原打开场景*/
    ButtonTouchEffect.prototype.UP = function () {
        this.self.scale(this.startScale, this.startScale);
        Laya.Scene.open('test/Achievement_dialog.scene', null, null, Laya.Handler.create(this, function () {
            console.log('场景打开');
        }, []));
    };
    /**出屏幕大小还原*/
    ButtonTouchEffect.prototype.OUT = function () {
        this.self.scale(this.startScale, this.startScale);
    };
    return ButtonTouchEffect;
}(Laya.Script));
exports.default = ButtonTouchEffect;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/Music":53,"../manage/Playing_var":55}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var JsonEnum_1 = require("../Data/JsonEnum");
var Playing_var_1 = require("../manage/Playing_var");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var AchievementButton_1 = require("./AchievementButton");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var AchievementControl = /** @class */ (function (_super) {
    __extends(AchievementControl, _super);
    function AchievementControl() {
        return _super.call(this) || this;
    }
    AchievementControl.prototype.onEnable = function () {
        this.initScene();
        this.closeButtonClick();
        this.dataTypeCount();
        this.listInit();
        this.tapControl();
    };
    /**数据表各类型数量*/
    AchievementControl.prototype.dataTypeCount = function () {
        var count = 0;
        this.dataTypeArray = [];
        var arr1 = [];
        var arr2 = [];
        var arr3 = [];
        var arr4 = [];
        var indexData = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.achievement);
        for (var key in indexData) {
            if (indexData.hasOwnProperty(key)) {
                var element = indexData[key];
                if (element.type === 1) {
                    arr1.push([element.type, element.id]);
                }
                else if (element.type === 2) {
                    arr2.push([element.type, element.id]);
                }
                else if (element.type === 3) {
                    arr3.push([element.type, element.id]);
                }
                else if (element.type === 4) {
                    arr4.push([element.type, element.id]);
                }
            }
        }
        this.dataTypeArray.push(arr1);
        this.dataTypeArray.push(arr2);
        this.dataTypeArray.push(arr3);
        this.dataTypeArray.push(arr4);
    };
    /**场景初始化*/
    AchievementControl.prototype.initScene = function () {
        var aniDiamond = Laya.Pool.getItemByCreateFun("getDiamond", this.getDiamond.create, this.getDiamond);
        console.log(aniDiamond);
        // 初始化位置
        this.self = this.owner;
        this.self.pos(0, 0);
        this.contentSet = this.owner.getChildByName('contentSet');
        // tap
        this.tap = this.self['m_tap'];
        this.tap.selectedIndex = 0;
        //列表
        this.list = this.self['m_list'];
        // 主界面成就按钮
        this.achievementBtn = Laya.stage._children[0]._children[0].achievementBtn;
        // 服务端成就信息
        this.achieve = Playing_var_1.default.getInstance().achieve;
        this.playerAchieve = Playing_var_1.default.getInstance().playerAchieve;
        //黑色先背景出现
        this.background = this.owner.getChildByName('background');
        Laya.Tween.to(this.background, { alpha: 0.8 }, 20, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }, []), 0);
        //内容延时出现
        Laya.Tween.to(this.contentSet, { x: 0 }, 100, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }, []), 0);
        this.adaptive();
    };
    /**适配策略*/
    AchievementControl.prototype.adaptive = function () {
        var background = this.owner.getChildByName('background');
        var contentSet = this.owner.getChildByName('contentSet');
        contentSet.y += 40;
        background.height = Laya.stage.height;
        contentSet.y += (Laya.stage.height - 1334) / 2;
    };
    /**tap控制list规则*/
    AchievementControl.prototype.tapControl = function () {
        this.tap.selectHandler = new Laya.Handler(this, this.onSelect_Tap);
        // 分别设置tap页的红点提示
        this.tapRedDotRrompt();
        this.getStick();
    };
    /**当前选中的tap监听,主要是显示根据类型显示list数量*/
    AchievementControl.prototype.onSelect_Tap = function (index) {
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
        this.listAssignment();
        this.list.refresh();
        this.tapRedDotRrompt();
        this.getStick();
    };
    /**1.tap上面的红点提示，
     *2.并且把可以领取的奖励Id也是最小的方最上面*/
    AchievementControl.prototype.tapRedDotRrompt = function () {
        // 刷新数据后才能得到点击后的新数据
        this.achievementBtn.getComponent(AchievementButton_1.default).onEnable();
        // “可领取未领取”的id数组
        var reachButtonArr = this.achievementBtn.getComponent(AchievementButton_1.default).reachButtonArr;
        for (var i = 0; i < reachButtonArr.length; i++) {
            if (reachButtonArr[i].length !== 0) {
                this.tap._children[i]._children[0].visible = true;
            }
            else {
                this.tap._children[i]._children[0].visible = false;
            }
        }
    };
    /**设置id最小并且可以领取的成就顶置显示*/
    AchievementControl.prototype.getStick = function () {
        // 刷新数据后才能得到点击后的新数据
        this.achievementBtn.getComponent(AchievementButton_1.default).onEnable();
        // “可领取未领取”的id数组
        var reachButtonArr = this.achievementBtn.getComponent(AchievementButton_1.default).reachButtonArr;
        // 数据表里面的不同类型数据节点位置,对应的是id-1
        var number0 = this.dataTypeArray[0].length;
        var number1 = this.dataTypeArray[1].length;
        var number2 = this.dataTypeArray[2].length;
        var number3 = this.dataTypeArray[3].length;
        var tapIndex = this.tap.selectedIndex;
        if (tapIndex === 0) {
            if (reachButtonArr[0].length !== 0) {
                this.list.tweenTo(reachButtonArr[0][0] - 1, 100);
                this.topID = reachButtonArr[0][0] - 1;
            }
        }
        else if (tapIndex === 1) {
            if (reachButtonArr[1].length !== 0) {
                this.list.tweenTo(reachButtonArr[1][0] - number0 - 1, 100);
            }
        }
        else if (tapIndex === 2) {
            if (reachButtonArr[2].length !== 0) {
                this.topID = reachButtonArr[2][0] - number0 - number1 - 1;
                this.list.tweenTo(reachButtonArr[2][0] - number0 - number1 - 1, 100);
            }
        }
        else if (tapIndex === 3) {
            if (reachButtonArr[3].length !== 0) {
                this.topID = reachButtonArr[3][0] - number0 - number1 - number2 - 1;
                this.list.tweenTo(reachButtonArr[3][0] - number0 - number1 - number2 - 1, 100);
            }
        }
    };
    /**拿到还可以领取奖励的id
     * @param id 带入id即可返回“可领取未领取”，“已领取”，“未达成”三个状态 */
    AchievementControl.prototype.stateJudgement = function (id) {
        // 刷新数据后才能得到点击后的新数据
        this.achievementBtn.getComponent(AchievementButton_1.default).onEnable();
        // “可领取未领取”的id数组
        var reachButtonArr = this.achievementBtn.getComponent(AchievementButton_1.default).reachButtonArr;
        // "未达成"的id数组
        var notReachArr = this.achievementBtn.getComponent(AchievementButton_1.default).notReachArr;
        //数据表
        var indexData = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.achievement);
        // 值记录
        var getState = null;
        var tap = null;
        var object = {};
        // “可领取未领取”
        // 把传进来的成就分别在四个组中对比,因为他是唯一的，所以只能在一个组里面找到
        // 当找到了“可领取未领取”的这个成就后，就会给这个tap页添加红点提示
        for (var i = 0; i < reachButtonArr.length; i++) {
            for (var j = 0; j < reachButtonArr[i].length; j++) {
                if (reachButtonArr[i][j] === id) {
                    getState = 'reachButton';
                }
            }
        }
        //“未达成”
        if (getState === null) {
            for (var n = 0; n < notReachArr.length; n++) {
                if (notReachArr[n] === id) {
                    getState = 'notReach';
                }
            }
        }
        //“已经领取”
        if (getState === null) {
            getState = 'getComplete';
            object = {
                getState: 'getComplete',
                tap: null,
            };
        }
        return getState;
    };
    /**成就栏初始化*/
    AchievementControl.prototype.listInit = function () {
        this.list.scrollBar.hide = true; //使用但隐藏滚动条
        this.list.scrollBar.elasticBackTime = 200; //设置橡皮筋回弹时间。单位为毫秒。
        this.list.scrollBar.elasticDistance = 50; //设置橡皮筋极限距离。
        this.list.selectEnable = true; //设置可选
        this.listAssignment(); //刷新
        this.list.selectHandler = new Laya.Handler(this, this.onSelect_List);
        this.list.renderHandler = new Laya.Handler(this, this.updateItem);
    };
    /**list赋值规则*/
    AchievementControl.prototype.listAssignment = function () {
        var indexData = FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.achievement); //数据表
        var tapIndex = this.tap.selectedIndex; //tap当前位置
        // 赋值
        var data = [];
        for (var key in indexData) {
            if (indexData.hasOwnProperty(key)) {
                var element = indexData[key];
                if (element.type === tapIndex + 1) {
                    // 计算最高值，显示百分比
                    var highest = void 0;
                    // 当前击杀值
                    var intIPos = void 0;
                    // 类型值
                    if (tapIndex === 0) {
                        intIPos = this.achieve.battleTopNum;
                    }
                    else if (tapIndex === 1) {
                        intIPos = this.achieve.killTopNum;
                    }
                    else if (tapIndex === 2) {
                        intIPos = this.achieve.endlessTopScore;
                    }
                    else if (tapIndex === 3) {
                        intIPos = this.achieve.unlockTopNum;
                    }
                    // 如果当前成就达成了，那么显示为（100/100）这种格式
                    if (intIPos >= element.value) {
                        intIPos = element.value;
                    }
                    // 如果是可以领取的id那么getState状态为'reachButton';
                    data.push({
                        //描述
                        describe: element.dec + '(' + intIPos + '/' + element.value + ')',
                        //钻石数量
                        diamondsNumber: element.diamond,
                        //领取状态
                        getState: this.stateJudgement(element.id),
                        // 当前tap
                        tapIndex: tapIndex + 1,
                        // id:
                        id: element.id,
                    });
                }
            }
        }
        this.list.array = data;
    };
    /**box信息对应list赋值信息*/
    AchievementControl.prototype.updateItem = function (cell, index) {
        cell.name = ('item' + index).toString();
        // cell.y
        //描述
        var describeLabel = cell.getChildByName('describeLabel');
        describeLabel.text = this.list.array[index].describe;
        //奖励钻石数量Label
        var diamondsNumber = cell.getChildByName('diamondsNumber ');
        diamondsNumber.value = this.list.array[index].diamondsNumber;
        //领取状态
        this.getState = this.list.array[index].getState;
        //已经领取
        var reach = cell.getChildByName('reach');
        //没有达成
        var notReach = cell.getChildByName('notReach');
        //领取按钮
        var reachButton = cell.getChildByName('reachButton');
        // 黄色底板
        var baseboard = cell.getChildByName('baseboard');
        // 蓝色底板
        var blueBaseboard = cell.getChildByName('blueBaseboard');
        if (this.getState === 'reachButton') {
            //可领取
            reachButton.visible = true;
            reach.visible = false;
            notReach.visible = false;
            baseboard.visible = true;
            blueBaseboard.visible = false;
        }
        else if (this.getState === 'notReach') {
            //未达成不可领取
            reachButton.visible = false;
            reach.visible = false;
            notReach.visible = true;
            baseboard.visible = true;
            blueBaseboard.visible = false;
        }
        else if (this.getState === 'getComplete') {
            //已经领取过了
            reachButton.visible = false;
            reach.visible = true;
            notReach.visible = false;
            baseboard.visible = false;
            blueBaseboard.visible = true;
        }
    };
    /**当前触摸的box监听*/
    AchievementControl.prototype.onSelect_List = function (index) {
        // console.log("当前选择的索引：" + index);
    };
    AchievementControl.prototype.closeButtonClick = function () {
        // 关闭按钮大小
        this.startScale = this.closeButton.scaleX;
        this.closeButton.on(Laya.Event.MOUSE_DOWN, this, this.closeButtonDOWN);
        this.closeButton.on(Laya.Event.MOUSE_MOVE, this, this.closeButtonMOVE);
        this.closeButton.on(Laya.Event.MOUSE_UP, this, this.closeButtonUP);
        this.closeButton.on(Laya.Event.MOUSE_OUT, this, this.closeButtonOUT);
    };
    /**按下缩小*/
    AchievementControl.prototype.closeButtonDOWN = function () {
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
        this.closeButton.scale(this.startScale, this.startScale);
    };
    /**移动时缩小*/
    AchievementControl.prototype.closeButtonMOVE = function () {
        this.closeButton.scale(0.9 * this.startScale, 0.9 * this.startScale);
    };
    /**抬起大小还原打开场景*/
    AchievementControl.prototype.closeButtonUP = function () {
        this.closeButton.scale(this.startScale, this.startScale);
        //内容先消失
        Laya.Tween.to(this.contentSet, { x: -800, Y: 0 }, 100, Laya.Ease.circIn, Laya.Handler.create(this, function () {
            Laya.Scene.close('test/Achievement_dialog.scene', 'Achievement_dialog');
        }, []), 0);
        //黑色背景延时消失
        Laya.Tween.to(this.background, { alpha: 1 }, 100, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }, []), 50);
    };
    /**出屏幕大小还原*/
    AchievementControl.prototype.closeButtonOUT = function () {
        this.closeButton.scale(this.startScale, this.startScale);
    };
    AchievementControl.prototype.onDestroy = function () {
        console.error("成就销毁的界面~~~");
        var urls = ["commonPic/黑色遮罩.png", "changtaitiaohuang.png", "dangqianwnajitiaolan.png", "diban.png", "微信图片_20191127175348.png"];
        PlayingSceneControl_1.default.instance.clearResUrl(urls, true);
    };
    return AchievementControl;
}(Laya.Script));
exports.default = AchievementControl;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/Music":53,"../manage/Playing_var":55,"../playing/PlayingSceneControl":65,"./AchievementButton":80}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Playing_var_1 = require("../manage/Playing_var");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var HttpError_1 = require("../Connect/HttpError");
var BagDataControl_1 = require("../manage/BagDataControl");
var AchievementControl_1 = require("./AchievementControl");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var Achievementreach = /** @class */ (function (_super) {
    __extends(Achievementreach, _super);
    function Achievementreach() {
        return _super.call(this) || this;
    }
    Achievementreach.prototype.onEnable = function () {
        this.init();
        this.reachButtonClick();
    };
    Achievementreach.prototype.init = function () {
        this.self = this.owner;
        this.box = this.self.parent;
        this.list = this.owner.scene.m_list;
        this.contentSet = this.list.parent;
        this.selfScene = this.self.scene;
    };
    /**领奖按钮的点击事件*/
    Achievementreach.prototype.reachButtonClick = function () {
        this.self.on(Laya.Event.MOUSE_DOWN, this, this.reachButtonDOWN);
        this.self.on(Laya.Event.MOUSE_MOVE, this, this.reachButtonMOVE);
        this.self.on(Laya.Event.MOUSE_UP, this, this.reachButtonUP);
        this.self.on(Laya.Event.MOUSE_OUT, this, this.reachButtonOUT);
    };
    /**按下缩小*/
    Achievementreach.prototype.reachButtonDOWN = function () {
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
    };
    Achievementreach.prototype.reachButtonMOVE = function () {
    };
    Achievementreach.prototype.reachButtonUP = function () {
        var _this = this;
        //父节点名称后面的数字和他的顺序相等
        var parentName = this.box.name;
        //截取名称后面的数字
        var number = parentName.substring(4);
        // 状态改为已经领取
        var data = this.list.array[number];
        var type = data.tapIndex;
        var id = data.id;
        // 本地上传的object，下面这种写法是给予object定值
        var object = {};
        object[type] = {};
        object[type][id] = 1;
        // 数据对接
        var urls = (HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.AchieveFetch);
        var args = { uuId: Playing_var_1.default.getInstance().uuId, achieveType: type, achieveId: id };
        Laya.Dialog.showLoadingPage();
        var httpClass = new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
            //收到回调
            if (!e.ret) {
                // 本地修改数据
                Playing_var_1.default.getInstance().updatePlayerAchieve(object);
                // 上传服务器
                BagDataControl_1.default.getInstance().updateBagDate_new(e);
                // 修改按钮状态刷新列表
                _this.list.array[number].getState = 'getComplete';
                _this.list.refresh();
                // 更新tap页的红点提示
                _this.selfScene.getComponent(AchievementControl_1.default).tapRedDotRrompt();
                _this.selfScene.getComponent(AchievementControl_1.default).getStick();
                // 钻石飞升动画
                _this.diamondIconAnimation(data);
            }
            else {
                new HttpError_1.default.HttpError(e.ret, _this.owner);
            }
            Laya.Dialog.hideLoadingPage();
            console.error(e);
        }), urls, JSON.stringify(args));
    };
    /** 钻石图标飞向钻石资源位置动画commonPic/钻石图标.png*/
    Achievementreach.prototype.diamondIconAnimation = function (data) {
        //使用对象池创建钻石
        var getDiamond = this.selfScene.getComponent(AchievementControl_1.default).getDiamond;
        var aniDiamond = Laya.Pool.getItemByCreateFun("getDiamond", getDiamond.create, getDiamond);
        aniDiamond.alpha = 0;
        aniDiamond.scale(0, 0);
        // 数量显示
        var numberDiamonds = aniDiamond.getChildByName('numberDiamonds');
        numberDiamonds.value = 'x' + data.diamondsNumber.toString();
        // 添加到舞台
        aniDiamond.pos(Laya.stage.width / 3 + 30, Laya.stage.height / 3 + 50);
        Laya.stage.addChild(aniDiamond);
        aniDiamond.zOrder = 5000;
        // 主界面钻石在屏幕上stage坐标
        var target = Laya.stage._children[0]._children[0].img_mainDiamond;
        var targetPosX = target.x + target.parent.x;
        var targetPosY = target.y + target.parent.y;
        // 动画表现
        var timeLine = new Laya.TimeLine;
        timeLine.addLabel('appear', 0).to(aniDiamond, { scaleX: 1, scaleY: 1, alpha: 1 }, 500, Laya.Ease.circInOut, 0)
            .addLabel('move', 0).to(aniDiamond, { x: targetPosX - 10, y: targetPosY + 50, scaleX: 0.5, scaleY: 0.5 }, 700, Laya.Ease.circInOut, 0)
            .addLabel('vanish', 0).to(aniDiamond, { x: targetPosX, y: targetPosY, alpha: 0 }, 500, Laya.Ease.circInOut, 0);
        timeLine.play('appear', false);
        timeLine.on(Laya.Event.COMPLETE, this, this.onComplete);
        timeLine.on(Laya.Event.LABEL, this, this.onLabel);
    };
    Achievementreach.prototype.onComplete = function () {
        console.log("timeLine complete!!!!");
    };
    Achievementreach.prototype.onLabel = function (label) {
        console.log("LabelName:" + label);
    };
    Achievementreach.prototype.reachButtonOUT = function () {
    };
    Achievementreach.prototype.onDisable = function () {
    };
    return Achievementreach;
}(Laya.Script));
exports.default = Achievementreach;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Connect/HttpError":24,"../Data/MusicEnum":27,"../manage/BagDataControl":41,"../manage/Music":53,"../manage/Playing_var":55,"./AchievementControl":81}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var BossWarning = /** @class */ (function (_super) {
    __extends(BossWarning, _super);
    function BossWarning() {
        var _this = _super.call(this) || this;
        _this.markIndex = 0;
        return _this;
    }
    BossWarning.prototype.onEnable = function () {
        this.self = this.owner;
        var Image = Laya.Image;
        var warningBg = this.owner.getChildAt(0);
        this.sk = this.owner.getChildByName("sk");
        this.sk.on(Laya.Event.STOPPED, this, this.finished);
        warningBg.height = Laya.stage.height;
        Laya.timer.loop(150, this, this.setWarning, [warningBg]);
        this.self.visible = true;
        this.isTempletCreate = null;
    };
    BossWarning.prototype.setWarning = function (e) {
        if (this.markIndex++ % 2 === 0) {
            e.visible = false;
        }
        else {
            e.visible = true;
        }
    };
    BossWarning.prototype.onUpdate = function () {
        if (!this.isTempletCreate && this.sk && this.sk.templet) {
            this.isTempletCreate = true;
            this.setSkPlaying();
        }
    };
    BossWarning.prototype.setSkPlaying = function () {
        var isWaveEffect = PlayingSceneControl_1.default.instance.isWaveEffect;
        this.sk.visible = true;
        if (isWaveEffect) {
            this.sk.play("xiaoguailx", false);
        }
        else {
            this.sk.play("bosslx", false);
        }
        PlayingSceneControl_1.default.instance.isWaveEffect = null;
    };
    BossWarning.prototype.finished = function () {
        this.self.removeSelf();
    };
    BossWarning.prototype.onDisable = function () {
        // this.owner.destroy();
        // this.destroy();
        this.self.visible = false;
        // Laya.Pool.recover("Boss_warning", this.self);
        this.self.destroy();
        // this.clearResourse();
        this.reSetMusic();
    };
    BossWarning.prototype.reSetMusic = function () {
        //开始播放打boss的音乐
        Music_1.default.getInstance().playMusic(musicToUrl.bg_boss);
    };
    BossWarning.prototype.onDestroy = function () {
        this.clearResourse();
    };
    BossWarning.prototype.clearResourse = function () {
        var ress = ["dragonbones/bosslx.png", "face/警戒红框.png"];
        PlayingSceneControl_1.default.instance.clearResUrl(ress, true);
    };
    return BossWarning;
}(Laya.Script));
exports.default = BossWarning;
},{"../Data/MusicEnum":27,"../manage/Music":53,"../playing/PlayingSceneControl":65}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var toast_1 = require("../manage/toast");
var Playing_var_1 = require("../manage/Playing_var");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var GoldFly_1 = require("../Tools/GoldFly");
var BagDataControl_1 = require("../manage/BagDataControl");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var DialogEffect_1 = require("../manage/DialogEffect");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var WeiXinAD_1 = require("../manage/WeiXinAD");
var CheckInControl = /** @class */ (function (_super) {
    __extends(CheckInControl, _super);
    function CheckInControl() {
        var _this = _super.call(this) || this;
        _this.posXY = {};
        _this.alreadyCheckImgArr = [];
        _this.goldIconArr = [];
        _this.numsArr = [];
        return _this;
    }
    CheckInControl.prototype.onEnable = function () {
        this.self = this.owner;
        Laya.Browser.window.checkInDialog = this.self;
        this.initVar();
        this.initListen();
        this.initItems();
        Laya.Browser.window.dialog = this.self;
        Music_1.default.getInstance().playSound(musicToUrl.ui_popup);
        this.dialogE = new DialogEffect_1.default(this.self);
        this.canClose = true;
    };
    CheckInControl.prototype.initVar = function () {
        this.itemParent = this.self["parentItem"];
        this.oneRewardBtn = this.self["btn_oneReward"];
        this.twoRewardBtn = this.self["btn_twoReward"];
        this.posXY.initx1 = 151;
        this.posXY.inity1 = 108;
        this.posXY.initw1 = 155;
        this.posXY.initx2 = 73.5;
        this.posXY.inity2 = 320;
        this.posXY.initw2 = 154.5;
        this.signConfig = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.sign);
        this.itemConfig = DataTables_1.default.FixedDataTables.getInstance().getData(JsonEnum_1.default.DataType.item);
    };
    CheckInControl.prototype.initListen = function () {
        var _this = this;
        this.oneRewardBtn.on(Laya.Event.CLICK, this, this.rewardGold, [1]);
        this.twoRewardBtn.on(Laya.Event.CLICK, this, this.lookAd, [2]);
        this.self["btn_close"].on(Laya.Event.CLICK, this, function () {
            // this.self.close();
            _this.dialogE.removeAnimation(Laya.Handler.create(_this, _this.closeDialog));
        });
    };
    /**
     * 看广告
     */
    CheckInControl.prototype.lookAd = function () {
        var checkInData = Playing_var_1.default.getInstance().checkInData;
        if (checkInData.already) {
            toast_1.default.noBindScript("已经签到过了", this.self);
            return;
        }
        if (WeiXinAD_1.default.getInstance().adStatus) {
            WeiXinAD_1.default.getInstance().addVideoAD(Laya.Handler.create(this, this.lookAdFinish));
        }
        else {
            this.rewardGold(2);
        }
    };
    CheckInControl.prototype.lookAdFinish = function (e) {
        if (e) {
            this.rewardGold(2);
        }
        else {
            toast_1.default.noBindScript("广告观看失败！");
        }
    };
    CheckInControl.prototype.closeDialog = function () {
        Music_1.default.getInstance().playSound(MusicEnum_1.default.musicToUrl.button_normal);
        if (this.canClose) {
            // this.self.close();
            this.dialogE = null;
            this.self.close();
        }
    };
    CheckInControl.prototype.initItems = function () {
        var checkInData = Playing_var_1.default.getInstance().checkInData;
        for (var i = 0; i < 7; i++) {
            var itemObj = Laya.Pool.getItemByCreateFun("checkItem", this.checkItem.create, this.checkItem);
            if (i >= 3) {
                itemObj.pos(this.posXY.initx2 + (i % 4) * this.posXY.initw2, this.posXY.inity2);
            }
            else {
                itemObj.pos(this.posXY.initx1 + (i % 3) * this.posXY.initw1, this.posXY.inity1);
            }
            var oneData = this.signConfig[i + 1];
            var idAndNum = oneData.reward.split("|");
            itemObj.getChildByName("goldIcon").skin = "commonPic/" + this.itemConfig[idAndNum[0]].icon + ".png";
            var alreadyIcon = itemObj.getChildByName("alreadyIcon");
            itemObj.getChildByName("dayIcon").value = "" + (i + 1);
            itemObj.getChildByName("goldNum").text = "" + idAndNum[1];
            if (i <= checkInData.day - 1) {
                alreadyIcon.visible = true;
            }
            else {
                alreadyIcon.visible = false;
            }
            this.alreadyCheckImgArr.push(alreadyIcon);
            this.goldIconArr.push(itemObj.getChildByName("goldIcon"));
            this.numsArr.push(idAndNum);
            this.itemParent.addChild(itemObj);
        }
        Laya.Browser.window.goldIconArr = this.goldIconArr;
    };
    CheckInControl.prototype.rewardGold = function (e) {
        var _this = this;
        Music_1.default.getInstance().playSound(musicToUrl.button_buy);
        var checkInData = Playing_var_1.default.getInstance().checkInData;
        if (checkInData.already) {
            toast_1.default.noBindScript("已经签到过了", this.self);
        }
        else {
            this.canClose = false;
            var args = { uuId: Playing_var_1.default.getInstance().uuId, rate: e };
            var httpClassObj = new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (data) {
                if (false && data.ret === -10) {
                    var bagCommon = { "101": { "id": 101, "num": 1000 }, "102": { "id": 102, "num": 1018 }, "103": { "id": 103, "num": 1000 } };
                    var signIn = { "signDate": "2019-08-09T17:00:01.5852218+08:00", "signIn": true, "signTimes": 1 };
                    checkInData.already = true;
                    checkInData.day = signIn.signTimes;
                    BagDataControl_1.default.getInstance().updateBagCommon({ bagCommon: bagCommon });
                    var posArr = _this.getXYStart();
                    new GoldFly_1.default(posArr[0], posArr[1], null, _this.self, _this.moveFinish, e, _this);
                }
                else {
                    var signIn = JSON.parse(data.signIn);
                    var bagCommon = JSON.parse(data.bagCommon);
                    checkInData.already = true;
                    checkInData.day = signIn.signTimes;
                    var getNum = bagCommon[102].num - BagDataControl_1.default.getInstance().getBagDataById("102").num;
                    BagDataControl_1.default.getInstance().updateBagCommon({ bagCommon: bagCommon });
                    var posArr = _this.getXYStart();
                    new GoldFly_1.default(posArr[0], posArr[1], null, _this.self, _this.moveFinish, e, _this, getNum);
                }
                console.error(data);
            }), HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.SignUp, JSON.stringify(args));
        }
    };
    CheckInControl.prototype.moveFinish = function (e) {
        var _this = this;
        console.log("已经移动完成");
        //更新红点
        PlayingSceneControl_1.default.instance.setRedDotStatus();
        var day = Playing_var_1.default.getInstance().checkInData.day;
        var bate = e === 1 ? 1 : 2;
        // BagDataControl.getInstance().setBagData({ id: "101", num: BagDataControl.getInstance().getBagDataById("101").num + bate * Number(this.numsArr[day - 1][1]) });
        PlayingSceneControl_1.default.instance.setMoneyData();
        this.alreadyCheckImgArr[day - 1].visible = true;
        // this.self.close();
        this.dialogE.removeAnimation(Laya.Handler.create(this, function () {
            // this.self.close();
            _this.dialogE = null;
            toast_1.default.noBindScript("签到成功!");
            _this.self.close();
            // Laya.Scene.gc();
        }));
        this.canClose = true;
    };
    CheckInControl.prototype.getXYStart = function () {
        var day = Playing_var_1.default.getInstance().checkInData.day;
        var iconImage = this.goldIconArr[day];
        var point = new Laya.Point(iconImage.x, iconImage.y);
        var pointBack;
        var pointArr = [];
        pointBack = this.goldIconArr[day].parent.localToGlobal(point, false, this.self);
        var moveBtn = PlayingSceneControl_1.default.instance.owner["img_mainDiamond"];
        var pointP = new Laya.Point(moveBtn.x, moveBtn.y);
        pointP = (this.self).globalToLocal(pointP);
        pointArr.push(pointBack, pointP);
        return pointArr;
    };
    CheckInControl.prototype.onDisable = function () {
        var urls = ["checkIn/二级底板.png"];
        PlayingSceneControl_1.default.instance.clearResUrl(urls, true);
    };
    return CheckInControl;
}(Laya.Script));
exports.default = CheckInControl;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../Tools/GoldFly":34,"../manage/BagDataControl":41,"../manage/DialogEffect":43,"../manage/Music":53,"../manage/Playing_var":55,"../manage/WeiXinAD":58,"../manage/toast":59,"../playing/PlayingSceneControl":65}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var BagDataControl_1 = require("../manage/BagDataControl");
var toast_1 = require("../manage/toast");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var DialogEffect_1 = require("../manage/DialogEffect");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var HttpError_1 = require("../Connect/HttpError");
var Playing_var_1 = require("../manage/Playing_var");
var GoldFly_1 = require("../Tools/GoldFly");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Exchange = /** @class */ (function (_super) {
    __extends(Exchange, _super);
    function Exchange() {
        return _super.call(this) || this;
    }
    Exchange.prototype.onEnable = function () {
        this.self = this.owner;
        this.game = Laya.Browser.window.game;
        this.self.onOpened = this.opened;
        this.initVar();
        this.initListener();
        this.dilogEffect = new DialogEffect_1.default(this.self);
    };
    Exchange.prototype.setOpenType = function (e) {
        this.openType = e || 0;
        var infoImg = this.self["img_goldInfo"];
        var title = this.self["img_title"];
        if (this.openType) {
            this.consumeByOne = DataTables_1.default.FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.buy_gold, this.game.nowLevel, "gold");
            this.icon_gold.skin = "commonPic/金币图标.png";
            this.label_exchangeBate.text = "1钻石=" + this.consumeByOne + "金币";
            infoImg.skin = "exchange/信息布局.png";
            title.skin = "exchange/兑换金币.png";
        }
        else {
            this.icon_gold.skin = "commonPic/体力图标.png";
            this.consumeByOne = DataTables_1.default.FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.buy_power, 1, "power") / DataTables_1.default.FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.buy_power, 1, "diamond");
            this.label_exchangeBate.text = "1钻石=" + this.consumeByOne + "体力";
            infoImg.skin = "exchange/信息布局_体力.png";
            title.skin = "exchange/兑换体力.png";
        }
        this.setShow();
    };
    Exchange.prototype.initVar = function () {
        this.icon_stone = this.self["icon_stone"];
        this.icon_gold = this.self["iconGold"];
        this.btn_exchange = this.self["btn_exchange"];
        this.btn_add = this.self["btn_add"];
        this.btn_reduce = this.self["btn_reduce"];
        this.fc_consume = this.self["fc_consume"];
        this.label_get = this.self["label_get"];
        this.btn_close = this.self["btn_close"];
        this.label_myHave = this.self["label_myHave"];
        this.label_exchangeBate = this.self["label_exchangeBate"];
    };
    Exchange.prototype.initListener = function () {
        this.btn_exchange.on(Laya.Event.CLICK, this, this.exchangeGold);
        this.btn_add.on(Laya.Event.CLICK, this, this.addExchangeNum);
        this.btn_reduce.on(Laya.Event.CLICK, this, this.reduceExchangeNum);
        this.btn_close.on(Laya.Event.CLICK, this, this.closeDialog);
        this.self["btn_max"].on(Laya.Event.CLICK, this, this.maxExchangeNum);
    };
    Exchange.prototype.closeDialog = function () {
        var _this = this;
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
        this.dilogEffect.removeAnimation(Laya.Handler.create(this, function () {
            _this.self.close();
            _this.dilogEffect = null;
        }));
    };
    /**
     * 增加兑换数量
     */
    Exchange.prototype.addExchangeNum = function () {
        (this.nowExchangeNum === void 0) && (this.nowExchangeNum = 0);
        var totalNum = BagDataControl_1.default.getInstance().getBagDataById("102").num;
        var jiZhun = Math.floor(totalNum / 10);
        var isNotEnouch = false;
        if (this.openType !== 2) {
            if (totalNum <= jiZhun) {
                if (this.nowExchangeNum < totalNum) {
                    this.nowExchangeNum = totalNum;
                }
                else {
                    isNotEnouch = true;
                }
            }
            else {
                if ((this.nowExchangeNum + jiZhun) <= totalNum) {
                    this.nowExchangeNum += jiZhun;
                }
                else {
                    if (this.nowExchangeNum < totalNum) {
                        this.nowExchangeNum = totalNum;
                    }
                    else {
                        isNotEnouch = true;
                    }
                }
            }
        }
        if (isNotEnouch) {
            toast_1.default.noBindScript("没有更多钻石了哦~", this.self);
        }
        else {
            this.setShow();
        }
    };
    /**
     * 设置兑换数量的显示
     */
    Exchange.prototype.setShow = function () {
        (this.nowExchangeNum === void 0) && (this.nowExchangeNum = 0);
        this.btn_exchange.gray = this.nowExchangeNum === 0;
        this.fc_consume.value = "" + this.nowExchangeNum;
        this.label_get.text = "" + (this.nowExchangeNum * this.consumeByOne);
        this.label_myHave.text = BagDataControl_1.default.getInstance().getBagDataById("102").num;
    };
    /**
 * 减少兑换数量
 */
    Exchange.prototype.reduceExchangeNum = function () {
        (this.nowExchangeNum === void 0) && (this.nowExchangeNum = 0);
        var totalNum = BagDataControl_1.default.getInstance().getBagDataById("102").num;
        var jiZhun = Math.floor(totalNum / 10);
        if (this.nowExchangeNum <= 0) {
            toast_1.default.noBindScript("不能更少了哦~");
        }
        else {
            if (this.nowExchangeNum - jiZhun >= 0) {
                this.nowExchangeNum -= jiZhun;
                this.setShow();
            }
            else {
                this.nowExchangeNum = 0;
                this.setShow();
            }
        }
    };
    /**
     * 达到最大兑换
     */
    Exchange.prototype.maxExchangeNum = function () {
        var totalNum = BagDataControl_1.default.getInstance().getBagDataById("102").num;
        this.nowExchangeNum = totalNum;
        this.setShow();
    };
    /**
     * 兑换
     */
    Exchange.prototype.exchangeGold = function () {
        Music_1.default.getInstance().playSound(musicToUrl.coin_charge);
        // Toast.noBindScript("兑换功能暂不开启!", this.self, { y: 399 });
        var markUrl;
        var args = { uuId: Playing_var_1.default.getInstance().uuId, DIAMOND: Number(this.label_myHave.text) - this.nowExchangeNum };
        console.error("发送的钻石参数~~~:", Number(this.label_myHave.text) - this.nowExchangeNum);
        if (this.openType) {
            markUrl = HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.ExchangeGold;
        }
        else {
            markUrl = HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.ExchangeEnergy;
        }
        new HttpClass_1.default.HttpClass(Laya.Handler.create(this, this.exchangeResult), markUrl, JSON.stringify(args));
    };
    Exchange.prototype.exchangeResult = function (e) {
        console.error("兑换的回调:", e);
        if (e.ret) {
            new HttpError_1.default.HttpError(e.ret, this.owner);
        }
        else {
            //更新数据 
            this.setExchangeEffect(JSON.parse(e.bagCommon));
            BagDataControl_1.default.getInstance().updateBagDate_new(e);
            // Toast.noBindScript("兑换成功!", this.self, { y: 399 });
            //更新兑换界面
            this.nowExchangeNum = 0;
            this.setShow();
        }
    };
    Exchange.prototype.setExchangeEffect = function (bagCommon) {
        var url;
        var itemId;
        var endInPos;
        if (this.openType) {
            //兑换金币
            url = "commonPic/金币图标.png";
            itemId = "101";
            endInPos = new Laya.Point(200, 5);
        }
        else {
            //兑换体力
            url = "commonPic/体力图标.png";
            itemId = "103";
            endInPos = new Laya.Point(16, 3);
        }
        var lastValue = BagDataControl_1.default.getInstance().getBagDataById(itemId).num;
        var nowValue = bagCommon[itemId].num;
        var plusStr = (nowValue - lastValue);
        var startPos = new Laya.Point(Laya.stage.width / 2, Laya.stage.height / 2);
        var endPos = PlayingSceneControl_1.default.instance.moneySprite.localToGlobal(endInPos);
        var fly = new GoldFly_1.default(startPos, endPos, null, null, null, null, null, plusStr);
        fly.changeIconTexture(url);
    };
    Exchange.prototype.opened = function (e) {
        var markSelf = this["_components"][0];
        markSelf["setOpenType"](e);
    };
    Exchange.prototype.onDestroy = function () {
        var urls = ["commonPic/标题底.png", "exchange/二级底板.png", "exchange/TIPS底板.png", "exchange/信息布局.png", "exchange/信息布局_体力.png", "exchange/底板.png"];
        PlayingSceneControl_1.default.instance.clearResUrl(urls, true);
    };
    return Exchange;
}(Laya.Script));
exports.default = Exchange;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Connect/HttpError":24,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../Tools/GoldFly":34,"../manage/BagDataControl":41,"../manage/DialogEffect":43,"../manage/Music":53,"../manage/Playing_var":55,"../manage/toast":59,"../playing/PlayingSceneControl":65}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ItemDetailControl = /** @class */ (function (_super) {
    __extends(ItemDetailControl, _super);
    function ItemDetailControl() {
        return _super.call(this) || this;
    }
    ;
    ItemDetailControl.prototype.onEnable = function () {
        if (!this["detailName"]) {
            return;
        }
        this.visible = true;
        var iconObj = this.getChildByName("icon");
        iconObj.texture = Laya.loader.getRes(this["detailIcon"]);
        iconObj.scale(0.8, 0.8);
        iconObj.x = 135 + 5;
        this.getChildByName("describe").text = this["detailDec"];
        this.getChildByName("name").text = this["detailName"];
    };
    ItemDetailControl.prototype.onDisable = function () {
        this.visible = false;
        Laya.Pool.recover("ItemDetail", this);
    };
    return ItemDetailControl;
}(Laya.Image));
exports.default = ItemDetailControl;
},{}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BitmapFontMananage_1 = require("../manage/BitmapFontMananage");
var DataTables_1 = require("../Data/DataTables");
var Playing_var_1 = require("../manage/Playing_var");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var BagDataControl_1 = require("../manage/BagDataControl");
var FixedDataTables = DataTables_1.default.FixedDataTables;
var LYhandle = Laya.Handler;
var HttpClass = HttpClass_1.default.HttpClass;
var AdaptScene_1 = require("../manage/AdaptScene");
var WeiXinAD_1 = require("../manage/WeiXinAD");
var LoadSceneControl = /** @class */ (function (_super) {
    __extends(LoadSceneControl, _super);
    function LoadSceneControl() {
        return _super.call(this) || this;
    }
    LoadSceneControl.prototype.onAwake = function () {
        AdaptScene_1.default.getInstance().setSceneAdaptHeight();
    };
    LoadSceneControl.prototype.onEnable = function () {
        var _this = this;
        // Laya.Browser.window.loadingScene = this.owner;
        //初始化微信广告组件
        WeiXinAD_1.default.getInstance();
        this.adaptBate();
        this.canEnterMainScene = false;
        this.img_touchStartGame = this.owner["img_touchStartGame"];
        this.loadingLabel = this.owner["loadingLabel"];
        this.sk_loading = this.owner["sk_loading"];
        this.progressBar_up = this.owner["progressBar_up"];
        this.sk = this.owner["sk"];
        Laya.Browser.window.skBg = this.sk;
        var nameToUrl = {
            main_resources: "bitmapFont/main_resources.fnt",
            customs_pass: "bitmapFont/customs_pass.fnt",
            升级按钮: "bitmapFont/升级按钮.fnt",
            复活字体: "bitmapFont/复活字体.fnt",
            胜利关卡字体: "bitmapFont/胜利关卡字体.fnt",
        };
        var keys = Object.keys(nameToUrl);
        var keyLength = keys.length;
        var i;
        var index = 0;
        for (i in nameToUrl) {
            var tempObj = new BitmapFontMananage_1.default.BitmapManage(nameToUrl[i], i, Laya.Handler.create(this, function () {
                console.log("index", index);
                if (++index >= keyLength) {
                    Laya.timer.frameOnce(50, _this, function () {
                        _this.loadJsonZip();
                        console.log("zip加载完成");
                    });
                }
            }));
        }
        Laya.Browser.window.sk = this.owner.getChildAt(0);
        Laya.Browser.window.loadingLabel = this.owner["loadingLabel"];
        this.setLoadingScene();
    };
    LoadSceneControl.prototype.adaptBate = function () {
        var view_sk = this.owner["view_sk"];
        var view_bar = this.owner["view_bar"];
        var img_title = this.owner["img_title"];
        var stage_h = Laya.stage.height;
        view_sk.y = stage_h / 2;
        img_title.y = (1 / 7.25) * stage_h;
        view_bar.y = 0.75 * stage_h;
        Laya.Browser.window.view_sk = view_sk;
        Laya.Browser.window.view_bar = view_bar;
        Laya.Browser.window.img_title = img_title;
    };
    LoadSceneControl.prototype.loadJsonZip = function () {
        var _this = this;
        FixedDataTables.loadFixedTables(LYhandle.create(this, function (e) {
            Laya.loader.resetProgress();
            var loader = new Laya.SceneLoader();
            loader.on(/*laya.events.Event.PROGRESS*/ "progress", _this, _this.progressing);
            loader.once(/*laya.events.Event.COMPLETE*/ "complete", _this, _this.completePre);
            loader.load("test/FacePlaying.scene");
        }));
    };
    LoadSceneControl.prototype.completePre = function () {
        Laya.loader.resetProgress();
        var loader = new Laya.SceneLoader();
        loader.on(/*laya.events.Event.PROGRESS*/ "progress", this, this.progressingPre);
        loader.once(/*laya.events.Event.COMPLETE*/ "complete", this, this.complete);
        loader.load(["test/CheckIn_dialog.scene"]);
    };
    LoadSceneControl.prototype.complete = function (e) {
        // this.sendHttp();
        // return;
        var url = HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.uuid;
        var randonUserId;
        if (Laya.Browser.onMiniGame) {
            randonUserId = { code: Playing_var_1.default.getInstance().wecode };
        }
        else {
            randonUserId = { weId: "ww1a30add332121619" /* + tools.random(1, 100) + tools.random(10, 100)*/ };
        }
        // const data: string = "{weId:'1111213jwwwwaaw1'}";
        var data = JSON.stringify(randonUserId);
        new HttpClass(Laya.Handler.create(this, this.requestUUID), url, data);
        //this.setTouchStartGame();
    };
    LoadSceneControl.prototype.requestUUID = function (e) {
        Playing_var_1.default.getInstance().uuId = e.uuId;
        // console.error("~~~~~~",);
        var url = HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.GetPlayerData;
        var data = JSON.stringify({ uuId: Playing_var_1.default.getInstance().uuId });
        new HttpClass(Laya.Handler.create(this, this.requestUserData), url, data);
    };
    LoadSceneControl.prototype.requestUserData = function (e) {
        var data = JSON.parse(e.PlayerData);
        var playerAchieve = JSON.parse(e.PlayerAchieve);
        Playing_var_1.default.getInstance().updateGameVar(data, playerAchieve);
        BagDataControl_1.default.getInstance().initBagData(data);
        this.setTouchStartGame();
    };
    LoadSceneControl.prototype.progressingPre = function (p) {
        console.error("p----------", p);
        var progressNum = 100 * 0.94 + 100 * 0.06 * p;
        this.loadingLabel.value = Math.floor(progressNum) + "%";
        this.progressBar_up.mask.graphics.clear();
        this.progressBar_up.mask.graphics.drawRect(0, 0, progressNum * 604, 57, "#ff0000");
    };
    LoadSceneControl.prototype.progressing = function (p) {
        var progressNum = p * 100 * 0.94;
        this.loadingLabel.value = Math.floor(progressNum) + "%";
        this.progressBar_up.mask.graphics.clear();
        this.progressBar_up.mask.graphics.drawRect(0, 0, p * 604, 57, "#ff0000");
    };
    LoadSceneControl.prototype.onStageClick = function () {
        if (this.canEnterMainScene) {
            Laya.timer.clear(this, this.hideAndShow);
            // (this.owner as Laya.Scene).close();
            Laya.Scene.open("test/FacePlaying.scene", true);
        }
    };
    LoadSceneControl.prototype.setTouchStartGame = function () {
        this.progressBar_up.visible = false;
        this.owner["progressBar"].visible = false;
        this.loadingLabel.visible = false;
        this.canEnterMainScene = true;
        this.sk_loading.visible = false;
        this.img_touchStartGame.visible = true;
        Laya.Tween.to(this.img_touchStartGame, {}, 800);
        //Laya.timer.frameLoop(30, this, this.hideAndShow);
        this.hideAndShow();
    };
    LoadSceneControl.prototype.hideAndShow = function () {
        // this.img_touchStartGame.visible = !this.img_touchStartGame.visible;
        var alphaValue = this.img_touchStartGame.alpha ? 0 : 1;
        Laya.Tween.to(this.img_touchStartGame, { alpha: alphaValue }, 800, null, Laya.Handler.create(this, this.hideAndShow), null, true, true);
    };
    /**
 * 设置loading界面
 */
    LoadSceneControl.prototype.setLoadingScene = function () {
        Laya.Scene.open("test/ReqLoading.scene", false, null, Laya.Handler.create(this, function (loading) {
            AdaptScene_1.default.getInstance().setBg(loading["blackSprite"]);
            loading.close();
            loading.zOrder = 3500;
            Laya.Scene.setLoadingPage(loading);
        }));
    };
    LoadSceneControl.prototype.sendHttp = function () {
        var xhr = new Laya.HttpRequest();
        xhr.http.timeout = 10000; //设置超时时间；
        xhr.once(Laya.Event.COMPLETE, this, this.completeHandler);
        xhr.once(Laya.Event.ERROR, this, this.errorHandler);
        xhr.on(Laya.Event.PROGRESS, this, this.processHandler);
        xhr.send("https://192.168.1.181:5001/api/UserMgr/Login", "{weId:'zhaojihui'}", "post", "json", ["Content-Type", "application/json"]);
        console.log("aaaa");
    };
    LoadSceneControl.prototype.completeHandler = function (e) {
        console.error(e);
    };
    LoadSceneControl.prototype.errorHandler = function (e) {
        console.error("错误:", e);
    };
    LoadSceneControl.prototype.processHandler = function (e) {
        console.error("进程:", e);
    };
    LoadSceneControl.prototype.onDestroy = function () {
        console.error("加载场景被销毁~~~~");
    };
    return LoadSceneControl;
}(Laya.Script));
exports.default = LoadSceneControl;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Data/DataTables":25,"../manage/AdaptScene":40,"../manage/BagDataControl":41,"../manage/BitmapFontMananage":42,"../manage/Playing_var":55,"../manage/WeiXinAD":58}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var DialogEffect_1 = require("../manage/DialogEffect");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var PopDialogControl = /** @class */ (function (_super) {
    __extends(PopDialogControl, _super);
    function PopDialogControl() {
        return _super.call(this) || this;
    }
    PopDialogControl.prototype.onEnable = function () {
        var _this = this;
        this.self = this.owner;
        this.self.closeHandler = new Laya.Handler(this, this.closeNowDialog);
        this.showText = this.self["showText"];
        this.showText.leading = 9;
        this.dialogE = new DialogEffect_1.default(this.self);
        this.self["btn_closeDialog"].on(Laya.Event.CLICK, this, function () {
            _this.self.close();
            _this.dialogE = null;
        });
    };
    PopDialogControl.prototype.closeNowDialog = function (e) {
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
        if (e === "sure") {
            Laya.Scene.open("test/ExchangeDialog.scene", false, 1);
        }
        this.dialogE = null;
        this.owner.destroy();
        this.destroy();
    };
    PopDialogControl.prototype.setPopText = function (txt) {
        if (txt) {
            this.showText.text = txt;
        }
    };
    return PopDialogControl;
}(Laya.Script));
exports.default = PopDialogControl;
},{"../Data/MusicEnum":27,"../manage/DialogEffect":43,"../manage/Music":53}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var DialogEffect_1 = require("../manage/DialogEffect");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var toast_1 = require("../manage/toast");
var EndlessManage_1 = require("../manage/EndlessManage");
var WeiXinAD_1 = require("../manage/WeiXinAD");
var PopDialogRunTime = /** @class */ (function (_super) {
    __extends(PopDialogRunTime, _super);
    function PopDialogRunTime() {
        return _super.call(this) || this;
    }
    PopDialogRunTime.prototype.onEnable = function () {
        var _this = this;
        this.showText.leading = 9;
        this.dialogE = new DialogEffect_1.default(this);
        this.closeHandler = new Laya.Handler(this, this.closeNowDialog);
        this.btn_closeDialog.on(Laya.Event.CLICK, this, function () {
            _this.close();
            _this.dialogE = null;
        });
    };
    /**
     *
     * @param txt
     * @param type 1||null 默认兑换 2 无尽观看广告
     */
    PopDialogRunTime.prototype.onOpened = function (data) {
        data.txt && this.setPopText(data.txt);
        this.popType = data.type;
    };
    PopDialogRunTime.prototype.closeNowDialog = function (e) {
        Music_1.default.getInstance().playSound(musicToUrl.button_normal);
        if (e === "sure") {
            this.goActionByType();
        }
        else if (e === "cancel") {
            this.cancelActionByType();
        }
    };
    PopDialogRunTime.prototype.setPopText = function (txt) {
        if (txt) {
            this.showText.text = txt;
        }
    };
    PopDialogRunTime.prototype.cancelActionByType = function () {
        switch (this.popType) {
            case 2:
                this.dialogE = null;
                this.destroy();
                EndlessManage_1.default.getInstance().selectSkillBack();
                break;
            default:
                break;
        }
    };
    PopDialogRunTime.prototype.goActionByType = function () {
        var _this = this;
        switch (this.popType) {
            case 0: //体力
            case 1: //金币
                Laya.Scene.open("test/ExchangeDialog.scene", false, this.popType);
                this.dialogE = null;
                this.destroy();
                this.destroy();
                break;
            case 2:
                //观看广告
                Laya.Dialog.showLoadingPage();
                if (WeiXinAD_1.default.getInstance().adStatus) {
                    WeiXinAD_1.default.getInstance().addVideoAD(Laya.Handler.create(this, this.lookAdCallBack));
                }
                else {
                    Laya.timer.once(5000, this, function () {
                        _this.dialogE = null;
                        _this.destroy();
                        toast_1.default.noBindScript("广告观看完成~!");
                        EndlessManage_1.default.getInstance().createSelectSkill();
                    });
                }
                break;
            default:
                break;
        }
    };
    PopDialogRunTime.prototype.lookAdCallBack = function (e) {
        if (e) {
            this.dialogE = null;
            this.destroy();
            toast_1.default.noBindScript("广告观看完成~!");
            EndlessManage_1.default.getInstance().createSelectSkill();
        }
        else {
            toast_1.default.noBindScript("广告观看未完成！");
            Laya.Dialog.hideLoadingPage();
        }
    };
    return PopDialogRunTime;
}(layaMaxUI_1.ui.test.popDialogUI));
exports.default = PopDialogRunTime;
},{"../../ui/layaMaxUI":98,"../Data/MusicEnum":27,"../manage/DialogEffect":43,"../manage/EndlessManage":46,"../manage/Music":53,"../manage/WeiXinAD":58,"../manage/toast":59}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../../ui/layaMaxUI");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var RankingControl = /** @class */ (function (_super) {
    __extends(RankingControl, _super);
    function RankingControl() {
        return _super.call(this) || this;
    }
    RankingControl.prototype.onEnable = function () {
        this.setListener();
    };
    RankingControl.prototype.onOpened = function (para) {
        if (Laya.Browser.onMiniGame) {
            // let message = { type: 1, value: 1 };
            // message.type = 1;
            // message.value = null;
            // this.openDataView.postMsg(message);
            this.onSelect(1);
        }
    };
    RankingControl.prototype.setListener = function () {
        this.btn_level.on(Laya.Event.CLICK, this, this.onSelect, [1]);
        this.btn_endless.on(Laya.Event.CLICK, this, this.onSelect, [2]);
        this.btn_close.on(Laya.Event.CLICK, this, this.closeRank);
    };
    RankingControl.prototype.onSelect = function (index) {
        if (index === 1) {
            this.btn_level.skin = "ranking/选中页签.png";
            this.btn_endless.skin = "ranking/页签.png";
        }
        else {
            this.btn_level.skin = "ranking/页签.png";
            this.btn_endless.skin = "ranking/选中页签.png";
        }
        if (Laya.Browser.onMiniGame) {
            var message = { type: 1, value: 1 };
            message.type = index === 1 ? 1 : 3;
            message.value = null;
            this.openDataView.postMsg(message);
        }
    };
    RankingControl.prototype.closeRank = function () {
        this.close();
    };
    RankingControl.prototype.onDestroy = function () {
        var urls = ["commonPic/黑色遮罩.png", "ranking/标题底.png", "ranking/界面底板.png"];
        PlayingSceneControl_1.default.instance.clearResUrl(urls, true);
    };
    return RankingControl;
}(layaMaxUI_1.ui.test.RankingUI));
exports.default = RankingControl;
},{"../../ui/layaMaxUI":98,"../playing/PlayingSceneControl":65}],91:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var DataType = JsonEnum_1.default.DataType;
var BagDataControl_1 = require("../manage/BagDataControl");
var RewardDialogControl = /** @class */ (function (_super) {
    __extends(RewardDialogControl, _super);
    function RewardDialogControl() {
        return _super.call(this) || this;
    }
    RewardDialogControl.prototype.onEnable = function () {
        this.self = this.owner;
        this.configInstance = DataTables_1.default.FixedDataTables.getInstance();
        // this.self.onOpened = this.onOpened;
        this.initVars();
        this.initListener();
    };
    RewardDialogControl.prototype.initListener = function () {
        var _this = this;
        this.self["img_close"].on(Laya.Event.CLICK, this, function () {
            _this.self.close();
        });
    };
    RewardDialogControl.prototype.initVars = function () {
        this.label_name = this.self["label_name"];
        this.item0 = this.self["item0"];
        this.item1 = this.self["item1"];
        this.num1 = this.self["num1"];
    };
    RewardDialogControl.prototype.onOpened = function (e) {
        // (this as Laya.Dialog).getComponent(Laya.Script).
        var rewardObj;
        var pic;
        var img1Url;
        var isNew;
        var diamondNum;
        var rewardPower = JSON.parse(e.bagCommon);
        var bagInstance = BagDataControl_1.default.getInstance();
        if (e.bagSecondaryWeapon) {
            rewardObj = JSON.parse(e.bagSecondaryWeapon);
            pic = this.configInstance.getDataByKey(DataType.secondaryWeapon, Number(Object.keys(rewardObj)[0]), "pic");
            isNew = !bagInstance.hasId(Object.keys(rewardObj)[0]);
            img1Url = "shop/" + pic + "_shop.png";
        }
        else {
            pic = "钻石大图标";
            img1Url = "commonPic/" + pic + ".png";
            var nowDiamondNum = bagInstance.getBagDataById("102").num;
            diamondNum = rewardPower[102].num - nowDiamondNum;
        }
        var iconImage0 = this.item0.getChildAt(2);
        iconImage0.skin = img1Url;
        iconImage0.scaleX = 0.8;
        iconImage0.scaleY = 0.8;
        //是否是新获得
        this.item0.getChildAt(3).visible = isNew;
        this.item0.getChildAt(0).visible = isNew;
        // (this.item0.getChildAt(4) as Laya.Label).visible = false;
        if (rewardObj) {
            this.item0.getChildAt(4).visible = false;
        }
        else {
            this.item0.getChildAt(4).changeText("x" + diamondNum);
        }
        this.item1.getChildAt(4).visible = true;
        this.item1.getChildAt(3).visible = false;
        this.item1.getChildAt(0).visible = false;
        var iconImage1 = this.item1.getChildAt(2);
        iconImage1.skin = "shop/商城体力图标.png";
        iconImage1.scaleX = 1;
        iconImage1.scaleY = 1;
        if (rewardObj) {
            this.label_name.text = this.configInstance.getDataByKey(DataType.secondaryWeapon, Number(Object.keys(rewardObj)[0]), "name");
        }
        else {
            this.label_name.text = "钻石";
        }
        bagInstance.updateBagDate_new(e);
    };
    RewardDialogControl.prototype.onDisable = function () {
    };
    return RewardDialogControl;
}(Laya.Script));
exports.default = RewardDialogControl;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../manage/BagDataControl":41}],92:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var BagDataControl_1 = require("../manage/BagDataControl");
var DataType = JsonEnum_1.default.DataType;
var RewardTenControl = /** @class */ (function (_super) {
    __extends(RewardTenControl, _super);
    function RewardTenControl() {
        var _this = _super.call(this) || this;
        _this.initPosXY = { x: 137, y: 315 };
        _this.initwh = { w: 318 - 137, h: 474 - 315 };
        return _this;
    }
    RewardTenControl.prototype.onEnable = function () {
        this.self = this.owner;
        this.initVars();
        this.initListener();
        // this.self.onOpened = this.opened;
    };
    RewardTenControl.prototype.initVars = function () {
        this.itemParent = this.self["itemParent"];
        this.fc_newNum = this.self["fc_newNum"];
        // Laya.Browser.window.fc_newNum = this.fc_newNum;
        this.configInstance = DataTables_1.default.FixedDataTables.getInstance();
    };
    RewardTenControl.prototype.opened = function (e) {
        this.initRewardItem(e);
        BagDataControl_1.default.getInstance().updateBagDate_new(e);
    };
    RewardTenControl.prototype.initRewardItem = function (data) {
        var equipReward = JSON.parse(data.bagSecondaryWeapon);
        //解析rewardEquip
        var rewardArr = parseRewardEquip(equipReward);
        if (rewardArr.length !== 10) {
            // debugger;
        }
        // this.getNowObtainReward();
        var powerReward = JSON.parse(data.bagCommon);
        //之前未创建过
        var i = 0;
        var newIndex = 0;
        for (i; i < rewardArr.length; i++) {
            var pic = this.configInstance.getDataByKey(DataType.secondaryWeapon, rewardArr[i], "pic");
            var rewardItem = Laya.Pool.getItemByCreateFun("rewardItem", this.rewardItem.create, this.rewardItem);
            //rewardItem
            if (i === 9) {
                rewardItem.pos(219, 315 + this.initwh.h * (Math.floor(i / 3)));
            }
            else {
                rewardItem.pos(137 + this.initwh.w * (i % 3), 315 + this.initwh.h * (Math.floor(i / 3)));
            }
            // if (pic.indexOf("_") === -1) {
            rewardItem.getChildAt(2).skin = "shop/" + pic + "_shop.png";
            // } else {
            // (rewardItem.getChildAt(2) as Laya.Image).skin = "shop/激光炮_shop.png";
            // }
            var isNew = !BagDataControl_1.default.getInstance().hasId(rewardArr[i].toString());
            rewardItem.getChildAt(3).visible = isNew;
            rewardItem.getChildAt(0).visible = isNew;
            rewardItem.getChildAt(4).visible = false;
            this.itemParent.addChild(rewardItem);
            if (isNew) {
                newIndex++;
            }
        }
        var rewardDiamondItem = Laya.Pool.getItemByCreateFun("rewardItem", this.rewardItem.create, this.rewardItem);
        rewardDiamondItem.getChildAt(3).visible = false;
        this.itemParent.addChild(rewardDiamondItem);
        var index = i - 1;
        var posXy = { x: 0, y: 0 };
        if (index === 9) {
            posXy.x = 219;
            posXy.y = 315 + this.initwh.h * (Math.floor(index / 3));
        }
        else {
            posXy.x = 137 + this.initwh.w * (i % 3);
            posXy.y = 315 + this.initwh.h * (Math.floor(i / 3));
        }
        rewardDiamondItem.getChildAt(2).skin = "commonPic/钻石大图标.png";
        var nowDiamondNum = BagDataControl_1.default.getInstance().getBagDataById("102").num;
        var addNum = powerReward[102].num - nowDiamondNum;
        rewardDiamondItem.getChildAt(4).changeText("x" + addNum);
        rewardDiamondItem.pos(posXy.x, posXy.y);
        var rewardPowerItem = Laya.Pool.getItemByCreateFun("rewardItem", this.rewardItem.create, this.rewardItem);
        var index2 = i + 1;
        var posXy2 = { x: 0, y: 0 };
        if (index2 === 9) {
            posXy2.x = 219;
            posXy2.y = 315 + this.initwh.h * (Math.floor(index2 / 3));
        }
        else if (index2 < 9) {
            posXy2.x = 137 + this.initwh.w * (index2 % 3);
            posXy2.y = 315 + this.initwh.h * (Math.floor(index2 / 3));
        }
        else {
            posXy2.x = 410;
            posXy2.y = 792;
        }
        rewardPowerItem.pos(posXy2.x, posXy2.y);
        var numSprite = rewardPowerItem.getChildAt(4);
        numSprite.visible = true;
        numSprite.changeText("x10");
        rewardPowerItem.getChildAt(3).visible = false;
        rewardPowerItem.getChildAt(0).visible = false;
        var powerIcon = rewardPowerItem.getChildAt(2);
        powerIcon.skin = "shop/商城体力图标.png";
        Laya.Browser.window.powerIcon = powerIcon;
        powerIcon.scaleX = 1;
        powerIcon.scaleY = 1;
        this.fc_newNum.value = "" + newIndex;
        this.itemParent.addChild(rewardPowerItem);
        function parseRewardEquip(equipReward) {
            var markArr = [];
            var j;
            for (j in equipReward) {
                var k = 0;
                // console.error("BagDataControl.getInstance().getBagDataById(equipReward[j].Value.id)", BagDataControl.getInstance().getBagDataById(equipReward[j].Value.id));
                var bagNowIdObj = BagDataControl_1.default.getInstance().getBagDataById(j);
                var bagNowNum = bagNowIdObj ? bagNowIdObj.num : 0;
                var getNum = equipReward[j].num - bagNowNum;
                for (k; k < getNum /*equipReward[j].Value.num*/; k++) {
                    markArr.push(equipReward[j].id);
                }
            }
            return markArr;
        }
    };
    RewardTenControl.prototype.initListener = function () {
        var _this = this;
        this.self["sprite_close"].on(Laya.Event.CLICK, this, function () {
            _this.itemParent.removeChildren();
            _this.self.close();
        });
    };
    return RewardTenControl;
}(Laya.Script));
exports.default = RewardTenControl;
},{"../Data/DataTables":25,"../Data/JsonEnum":26,"../manage/BagDataControl":41}],93:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var DialogEffect_1 = require("../manage/DialogEffect");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Setting = /** @class */ (function (_super) {
    __extends(Setting, _super);
    /**
     * 设置~
     */
    function Setting() {
        return _super.call(this) || this;
    }
    Setting.prototype.onEnable = function () {
        var _this = this;
        Music_1.default.getInstance().playSound(musicToUrl.ui_popup);
        this.dialogUrl = this.owner["url"];
        this.owner["btn_close"].on(Laya.Event.CLICK, this, function () {
            _this.playCommonSound();
            // (this.owner as Laya.Dialog).close();
            _this.dilogEffect.removeAnimation(Laya.Handler.create(_this, function () {
                _this.owner.close();
                _this.dilogEffect = null;
            }));
        });
        this.setSound = this.owner["btn_sound"];
        this.setMusic = this.owner["btn_music"];
        this.setListerner();
        this.changeStart(0);
        this.dilogEffect = new DialogEffect_1.default(this.owner);
    };
    Setting.prototype.setListerner = function () {
        this.setMusic.on(Laya.Event.CLICK, this, this.changeStart, [1]);
        this.setSound.on(Laya.Event.CLICK, this, this.changeStart, [2]);
    };
    Setting.prototype.changeStart = function (type) {
        switch (type) {
            case 1:
                this.setMusic.skin = Music_1.default.getInstance().musicOn ? "set/关按钮.png" : "set/开按钮.png";
                Music_1.default.getInstance().musicOn = !Music_1.default.getInstance().musicOn;
                if (Music_1.default.getInstance().musicOn) {
                    Music_1.default.getInstance().startNowMusic();
                }
                else {
                    Music_1.default.getInstance().stopNowMusic();
                }
                this.playCommonSound(Music_1.default.getInstance().musicOn);
                break;
            case 2:
                this.setSound.skin = Music_1.default.getInstance().soundOn ? "set/关按钮.png" : "set/开按钮.png";
                Music_1.default.getInstance().soundOn = !Music_1.default.getInstance().soundOn;
                this.playCommonSound(Music_1.default.getInstance().soundOn);
                break;
            default:
                this.setMusic.skin = Music_1.default.getInstance().musicOn ? "set/开按钮.png" : "set/关按钮.png";
                this.setSound.skin = Music_1.default.getInstance().soundOn ? "set/开按钮.png" : "set/关按钮.png";
                break;
        }
    };
    Setting.prototype.playCommonSound = function (onOff) {
        Music_1.default.getInstance().playSound(onOff ? musicToUrl.set_on : musicToUrl.set_off);
    };
    Setting.prototype.onDisable = function () {
        PlayingSceneControl_1.default.instance.clearSceneChildRes(this.dialogUrl, false);
        // const loadList: string[] = Laya.loader.getRes(this.dialogUrl).loadList;
        // let i: number = 0;
        // for (i; i < loadList.length; i++) {
        //     Laya.loader.clearTextureRes(loadList[i]);
        // }
    };
    return Setting;
}(Laya.Script));
exports.default = Setting;
},{"../Data/MusicEnum":27,"../manage/DialogEffect":43,"../manage/Music":53,"../playing/PlayingSceneControl":65}],94:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var toast_1 = require("../manage/toast");
var BattleParse_1 = require("../playing/BattleParse");
var BagDataControl_1 = require("../manage/BagDataControl");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var HttpError_1 = require("../Connect/HttpError");
var Playing_var_1 = require("../manage/Playing_var");
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var DataTables = DataTables_1.default.FixedDataTables;
var HttpClass = HttpClass_1.default.HttpClass;
var AdaptScene_1 = require("../manage/AdaptScene");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var WeiXinAD_1 = require("../manage/WeiXinAD");
var toast_2 = require("../manage/toast");
var Settlement = /** @class */ (function (_super) {
    __extends(Settlement, _super);
    function Settlement() {
        var _this = _super.call(this) || this;
        // private readonly dragonNames = ["zhutichibang_01", "shanguang_02", "zhongxinguangquan_02", "beijingguang_02", "chibang_02"];
        _this.dragonNames = { 0: "zhutichibang_01", 1: "shanguang_02", 3: "beijingguang_02" };
        return _this;
    }
    Settlement.prototype.onAwake = function () {
        var bg_black = this.owner["bg_black"];
        AdaptScene_1.default.getInstance().setBg(bg_black);
        bg_black.on(Laya.Event.CLICK, this, function (event) {
            event.stopPropagation();
        });
    };
    Settlement.prototype.onEnable = function () {
        this.initVar();
        this.successAndFail();
        this.controlSuccessMusic();
        SkeletonTempletManage_1.default.getInstance().clearTextureRes();
    };
    Settlement.prototype.initVar = function () {
        this.game = Laya.Browser.window.game;
        // if (this.game.overLevel) {
        //     this.game.nowLevel++;
        // }
        this.self = this.owner;
        var self = this.self;
        this.progressInstance = self["progress_bar"];
        // Laya.Browser.window.progressInstance = this.progressInstance;
        this.oneGold = self["oneGold"];
        this.doubleGold = self["doubleGold"];
        self["btn_rewardOne"].on(Laya.Event.CLICK, this, this.rewardClick, [0]);
        self["btn_rewardTwo"].on(Laya.Event.CLICK, this, this.lookAd, [1]);
        this.sk_settlement = self["sk_settlement"];
        this.sk_settlement.on(Laya.Event.STOPPED, this, this.stopedSK);
        // Laya.Browser.window.sk_settlement = this.sk_settlement;
    };
    /**
     * 双倍奖励需要看广告
     */
    Settlement.prototype.lookAd = function () {
        if (WeiXinAD_1.default.getInstance().adStatus) {
            WeiXinAD_1.default.getInstance().addVideoAD(Laya.Handler.create(this, this.adFinish));
        }
        else {
            this.rewardClick(1);
        }
    };
    Settlement.prototype.adFinish = function (e) {
        if (e) {
            this.rewardClick(1);
        }
        else {
            toast_2.default.noBindScript("广告观看失败！");
        }
    };
    /**
     * 控制胜利界面的音乐
     */
    Settlement.prototype.controlSuccessMusic = function () {
        Music_1.default.getInstance().playSound(musicToUrl.win_bg);
        Music_1.default.getInstance().playSound(musicToUrl.win_noise);
    };
    Settlement.prototype.successAndFail = function () {
        var _this = this;
        var nowLabel = this.self["nowLevel"];
        nowLabel.text = JSON.stringify(this.game.nowLevel);
        //胜利
        var obtainGolds = BattleParse_1.default.getInstance().goldsInLevel.toString();
        this.oneGold.text = "" + parseInt(obtainGolds);
        Laya.timer.frameOnce(3, this, function () {
            _this.sk_settlement.play(_this.dragonNames[0], false);
        });
        //渐隐两个sprite
        var i = 0;
        for (i; i < 2; i++) {
            var markSprite = this.self["sprite_" + i];
            Laya.Tween.from(markSprite, { alpha: 0 }, 1400);
        }
        this.showLuckyValue();
    };
    Settlement.prototype.showLuckyValue = function () {
        var addLuckyConfig = DataTables.getInstance().getData(JsonEnum_1.default.DataType.misc);
        var addLuckyNum;
        if (this.game.overLevel) {
            addLuckyNum = addLuckyConfig[3].value;
        }
        else {
            addLuckyNum = addLuckyConfig[4].value;
        }
        var luckyValue = Number(addLuckyNum) + Playing_var_1.default.getInstance().luckyValue;
        if (luckyValue > 100) {
            luckyValue = 100;
        }
        var luckyBate = /*luckyValue*/ 100 / 100;
        var markObj = this.progressInstance.mask;
        markObj.graphics.clear(true);
        var calWidth = (luckyBate > 1 ? 1 : luckyBate) * 647;
        markObj.graphics.drawRect(0, 0, calWidth, 38, "#ffffff");
    };
    Settlement.prototype.rewardClick = function (e) {
        Music_1.default.getInstance().playSound(musicToUrl.bullet_normal);
        var goldNow = BagDataControl_1.default.getInstance().getBagDataById("101").num;
        var addLuckyConfig = DataTables.getInstance().getData(JsonEnum_1.default.DataType.misc);
        var addLuckyNum;
        if (this.game.overLevel) {
            addLuckyNum = addLuckyConfig[3].value;
        }
        else {
            addLuckyNum = addLuckyConfig[4].value;
        }
        var args = {};
        args.uuId = Playing_var_1.default.getInstance().uuId;
        if (e) {
            args.bagCommon = { 101: { id: 101, num: goldNow + 2 * BattleParse_1.default.getInstance().goldsInLevel } };
        }
        else {
            args.bagCommon = { 101: { id: 101, num: goldNow + BattleParse_1.default.getInstance().goldsInLevel } };
        }
        var energyCost = DataTables_1.default.FixedDataTables.getInstance().getDataByKey(JsonEnum_1.default.DataType.battle, this.game.nowLevel, "cost");
        var nowEnergy = BagDataControl_1.default.getInstance().getBagDataById("103").num;
        args.bagCommon[103] = { id: 103, num: (nowEnergy - energyCost) > 0 ? (nowEnergy - energyCost) : 0 };
        // const nowEnergy: number = BagDataControl.getInstance().getBagDataById("103").num;
        // const energyCost = Data.FixedDataTables.getInstance().getDataByKey(Data2.DataType.battle, this.game.nowLevel, "cost");
        // args.bagCommon[103] = { id: 103, num: nowEnergy - energyCost };
        this.game.overLevel && (this.game.nowLevel++);
        args.barrier = { curBarrier: this.game.nowLevel, luckyValue: Number(addLuckyNum) + Playing_var_1.default.getInstance().luckyValue };
        if (args.barrier.luckyValue > 100) {
            args.barrier.luckyValue = 100;
        }
        var killEnemyS_now = BattleParse_1.default.getInstance().killEnemyS;
        args["achieve"] = { killTopNum: Playing_var_1.default.getInstance().getKillMaxNum(killEnemyS_now) };
        BagDataControl_1.default.getInstance().updateBagCommon({ bagCommon: args.bagCommon });
        Playing_var_1.default.getInstance().luckyValue = args.barrier.luckyValue;
        var luckyBate = args.barrier.luckyValue / 100;
        var markObj = this.progressInstance.mask;
        markObj.graphics.clear(true);
        var calWidth = (luckyBate > 1 ? 1 : luckyBate) * 647;
        markObj.graphics.drawRect(0, 0, calWidth, 38, "#ffffff");
        // this.progressInstance.value = luckyBate > 1 ? 1 : luckyBate;
        console.error("PlayingVar.getInstance().luckyValue", Playing_var_1.default.getInstance().luckyValue);
        this.receiveType = e;
        var httpReqObj = new HttpClass(Laya.Handler.create(this, this.openTipsAndBack), HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.PassedBarrier, JSON.stringify(args));
    };
    Settlement.prototype.openTipsAndBack = function (data) {
        var _this = this;
        if (data.ret) {
            var errorObj = new HttpError_1.default.HttpError(data.ret, this.owner);
            return;
        }
        var tip;
        if (this.receiveType) {
            tip = "暂无广告双倍奖励已经领取!";
        }
        else {
            tip = "奖励已经领取";
        }
        var secondW = JSON.parse(data.bagSecondaryWeapon);
        BagDataControl_1.default.getInstance().updateBagDate_new(data);
        toast_1.default.noBindScript(tip, this.owner);
        if (PlayingSceneControl_1.default.instance.EnemySpite.numChildren) {
            PlayingSceneControl_1.default.instance.EnemySpite.removeChildren(0, PlayingSceneControl_1.default.instance.EnemySpite.numChildren - 1);
        }
        Laya.timer.once(500, this, function () {
            BattleParse_1.default.deleteInstance();
            // Laya.Resource.destroyUnusedResources();
            _this.self.close();
        });
    };
    Settlement.prototype.stopedSK = function () {
        //再创建三个循环动画
        var i;
        for (i in this.dragonNames) {
            if (i === "0") {
                continue;
            }
            var skObj = this.self["sk" + i];
            skObj.visible = true;
            skObj.play(this.dragonNames[i], true);
        }
    };
    Settlement.prototype.onDestroy = function () {
        // const needClear = ["dragaonbones_settlement/victory.sk","dragaonbones_settlement/victory.png", "settlement/金币底条.png", "settlement/进度条底_bar.png", "commonPic/黑色遮罩.png"];
        var url = this.self.url;
        PlayingSceneControl_1.default.instance.clearSceneChildRes(url, false);
        // SkeletonTempletManage.getInstance().releaseAllTemplet();
        Laya.Scene.open("test/FacePlaying.scene", true);
    };
    return Settlement;
}(Laya.Script));
exports.default = Settlement;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Connect/HttpError":24,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/AdaptScene":40,"../manage/BagDataControl":41,"../manage/Music":53,"../manage/Playing_var":55,"../manage/SkeletonTempletManage":57,"../manage/WeiXinAD":58,"../manage/toast":59,"../playing/BattleParse":60,"../playing/PlayingSceneControl":65}],95:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var toast_1 = require("../manage/toast");
var BattleParse_1 = require("../playing/BattleParse");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var BagDataControl_1 = require("../manage/BagDataControl");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var HttpError_1 = require("../Connect/HttpError");
var Playing_var_1 = require("../manage/Playing_var");
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var DataTables = DataTables_1.default.FixedDataTables;
var HttpClass = HttpClass_1.default.HttpClass;
var musicToUrl = MusicEnum_1.default.musicToUrl;
var AdaptScene_1 = require("../manage/AdaptScene");
var EndlessManage_1 = require("../manage/EndlessManage");
var SkeletonTempletManage_1 = require("../manage/SkeletonTempletManage");
var WeiXinAD_1 = require("../manage/WeiXinAD");
var toast_2 = require("../manage/toast");
var role_1 = require("../role/role");
var SettlementFailControl = /** @class */ (function (_super) {
    __extends(SettlementFailControl, _super);
    function SettlementFailControl() {
        return _super.call(this) || this;
    }
    SettlementFailControl.prototype.onAwake = function () {
        var bg_black = this.owner["bg_black"];
        AdaptScene_1.default.getInstance().setBg(bg_black);
        bg_black.on(Laya.Event.CLICK, this, function (event) {
            event.stopPropagation();
        });
    };
    SettlementFailControl.prototype.onEnable = function () {
        //停止物理世界
        // Laya.Physics.I.stop();
        this.game = Laya.Browser.window.game;
        var self = this.owner;
        this.self = self;
        var game = Laya.Browser.window.game;
        self["nowLevel"].text = game.nowLevel;
        var btn_revival = self["btn_revival"];
        var goldLable = this.self["oneGold"];
        var obtainGolds = BattleParse_1.default.getInstance().goldsInLevel.toString();
        goldLable.text = "" + parseInt(obtainGolds);
        btn_revival.alpha = 0;
        btn_revival.on(Laya.Event.CLICK, this, this.clickRevival);
        this.btn_revival = btn_revival;
        this.btn_settlement = this.self["btn_settlement"];
        this.btn_settlement.alpha = 0;
        this.directSettle = null;
        this.btn_settlement.on(Laya.Event.CLICK, this, this.clickDirectSettlement);
        this.setProgressBar();
        this.sk_settlement = self["sk_settlement"];
        Laya.Browser.window.sk_settlement = this.sk_settlement;
        this.sk_settlement.y = 579;
        // Laya.Browser.window.sk_settlement = this.sk_settlement;
        this.setSK();
        //this.setAlpha();
        //监听领取奖励
        this.self["btn_rewardOne"].on(Laya.Event.CLICK, this, this.getReward, [0]);
        this.self["btn_rewardTwo"].on(Laya.Event.CLICK, this, this.goLookAD, [1]);
        this.setEndlessShow();
        this.setFailBgMusic();
        Laya.Browser.window.settlement = this.self;
    };
    /**
     * 失败界面的音效和背景音乐设置
     */
    SettlementFailControl.prototype.setFailBgMusic = function () {
        Music_1.default.getInstance().playSound(musicToUrl.lose_bg);
        Music_1.default.getInstance().playSound(musicToUrl.lose_noise);
    };
    /**
     * 无尽模式界面的若干设置
     */
    SettlementFailControl.prototype.setEndlessShow = function () {
        var _this = this;
        var distanceLabelArr = ["label_distance", "label_0"];
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            this.self["nowLevel"].text = EndlessManage_1.default.getInstance().scoreNum;
            this.self["label_distance"].value = EndlessManage_1.default.getInstance().distanceNum + "km";
        }
        distanceLabelArr.forEach(function (item, index) {
            _this.self[item].visible = Playing_var_1.default.getInstance().gameModel === "endless";
        });
    };
    SettlementFailControl.prototype.onUpdate = function () {
        if (this.owner["nowLevel"]) {
            this.owner["nowLevel"].y = this.sk_settlement.y + 100.5;
        }
        if (this.ani1Playing) {
            if (!this.self["ani1"].isPlaying) {
                this.ani1Playing = null;
                this.progressShow();
            }
        }
    };
    SettlementFailControl.prototype.progressShow = function () {
        var _this = this;
        var progressHide = ["label_enmeyDec", "progress_sm"];
        progressHide.forEach(function (item) {
            _this.self[item].visible = Playing_var_1.default.getInstance().gameModel !== "endless";
        });
    };
    SettlementFailControl.prototype.setSK = function () {
        Laya.timer.frameOnce(3, this, this.playSK);
    };
    SettlementFailControl.prototype.getReward = function (e) {
        Music_1.default.getInstance().playSound(musicToUrl.bullet_normal);
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            this.getRewardInEndless();
            return;
        }
        var goldNow = BagDataControl_1.default.getInstance().getBagDataById("101").num;
        var addLuckyConfig = DataTables.getInstance().getData(JsonEnum_1.default.DataType.misc);
        var addLuckyNum;
        if (this.game.overLevel) {
            addLuckyNum = addLuckyConfig[3].value;
        }
        else {
            addLuckyNum = addLuckyConfig[4].value;
        }
        var args = {};
        args.uuId = Playing_var_1.default.getInstance().uuId;
        if (e) {
            args.bagCommon = { 101: { id: 101, num: goldNow + 2 * BattleParse_1.default.getInstance().goldsInLevel } };
        }
        else {
            args.bagCommon = { 101: { id: 101, num: goldNow + BattleParse_1.default.getInstance().goldsInLevel } };
        }
        // const nowEnergy: number = BagDataControl.getInstance().getBagDataById("103").num;
        // const energyCost = Data.FixedDataTables.getInstance().getDataByKey(DataType.battle, this.game.nowLevel, "cost");
        // args.bagCommon[103] = { id: 103, num: nowEnergy - energyCost };
        this.game.overLevel && (this.game.nowLevel++);
        args.barrier = { curBarrier: this.game.nowLevel, luckyValue: /*Number(addLuckyNum) +*/ Playing_var_1.default.getInstance().luckyValue };
        if (args.barrier.luckyValue > 100) {
            args.barrier.luckyValue = 100;
        }
        var killEnemyS_now = BattleParse_1.default.getInstance().killEnemyS;
        args["achieve"] = { killTopNum: Playing_var_1.default.getInstance().getKillMaxNum(killEnemyS_now) };
        BagDataControl_1.default.getInstance().updateBagCommon({ bagCommon: args.bagCommon });
        // PlayingVar.getInstance().luckyValue = args.barrier.luckyValue;
        // const luckyBate = args.barrier.luckyValue / 100;
        // this.progressInstance.value = luckyBate > 1 ? 1 : luckyBate;
        console.error("PlayingVar.getInstance().luckyValue", Playing_var_1.default.getInstance().luckyValue);
        this.receiveType = e;
        var httpReqObj = new HttpClass(Laya.Handler.create(this, this.openTipsAndBack), HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.PassedBarrier, JSON.stringify(args));
    };
    /**
     * 双倍奖励需要先去看广告
     */
    SettlementFailControl.prototype.goLookAD = function () {
        if (WeiXinAD_1.default.getInstance().adStatus) {
            WeiXinAD_1.default.getInstance().addVideoAD(Laya.Handler.create(this, this.lookAdFinish));
        }
        else {
            this.getReward(1);
        }
    };
    SettlementFailControl.prototype.lookAdFinish = function (e) {
        if (e) {
            this.getReward(1);
        }
        else {
            toast_2.default.noBindScript("广告观看失败！");
        }
    };
    SettlementFailControl.prototype.getRewardInEndless = function (e) {
        var args = {};
        args.uuId = Playing_var_1.default.getInstance().uuId;
        var goldNow = BagDataControl_1.default.getInstance().getBagDataById("101").num;
        if (e) {
            args.bagCommon = { 101: { id: 101, num: goldNow + 2 * BattleParse_1.default.getInstance().goldsInLevel } };
        }
        else {
            args.bagCommon = { 101: { id: 101, num: goldNow + BattleParse_1.default.getInstance().goldsInLevel } };
        }
        var itemIds = ["104", "105"];
        var i = 0;
        for (i; i < itemIds.length; i++) {
            var itemConfig = BagDataControl_1.default.getInstance().getBagDataById(itemIds[i]);
            if (itemConfig && itemConfig.num) {
                args.bagCommon[itemIds[i]] = { id: itemIds[i], num: itemConfig.num };
            }
            else {
                args.bagCommon[itemIds[i]] = { id: itemIds[i], num: 0 };
            }
        }
        var scoreNum_now = EndlessManage_1.default.getInstance().scoreNum;
        var killEnemyS_now = BattleParse_1.default.getInstance().killEnemyS;
        args["achieve"] = { endlessTopScore: Playing_var_1.default.getInstance().getScoresMaxNum(scoreNum_now), killTopNum: Playing_var_1.default.getInstance().getScoresMaxNum(killEnemyS_now) };
        var httpReqObj = new HttpClass(Laya.Handler.create(this, this.openTipsAndBack), HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.EndlessStop, JSON.stringify(args));
    };
    SettlementFailControl.prototype.openTipsAndBack = function (data) {
        var _this = this;
        if (data.ret) {
            var errorObj = new HttpError_1.default.HttpError(data.ret, this.owner);
            return;
        }
        var tip;
        if (this.receiveType) {
            tip = "暂无广告双倍奖励已经领取!";
        }
        else {
            tip = "奖励已经领取";
        }
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            if (data.ret === 0) {
                BagDataControl_1.default.getInstance().updateBagDate_new(data);
                toast_1.default.noBindScript(tip, this.owner);
                if (PlayingSceneControl_1.default.instance.EnemySpite.numChildren) {
                    PlayingSceneControl_1.default.instance.EnemySpite.removeChildren(0, PlayingSceneControl_1.default.instance.EnemySpite.numChildren - 1);
                }
                Laya.timer.once(500, this, function () {
                    BattleParse_1.default.deleteInstance();
                    // Laya.Resource.destroyUnusedResources();
                    _this.self.close();
                    EndlessManage_1.default.getInstance().endlessSettlement();
                    Laya.Scene.open("test/FacePlaying.scene", true);
                });
            }
            return;
        }
        data.bagSecondaryWeapon && data.bagSecondaryWeapon !== "{}" && BagDataControl_1.default.getInstance().updateBagDate_new(data);
        toast_1.default.noBindScript(tip, this.owner);
        if (PlayingSceneControl_1.default.instance.EnemySpite.numChildren) {
            PlayingSceneControl_1.default.instance.EnemySpite.removeChildren(0, PlayingSceneControl_1.default.instance.EnemySpite.numChildren - 1);
        }
        Laya.timer.once(500, this, function () {
            BattleParse_1.default.deleteInstance();
            // Laya.Resource.destroyUnusedResources();
            _this.self.close();
            // Laya.Scene.open("test/FacePlaying.scene", true);
        });
    };
    /**
     * 设置 部分对象的渐隐
     */
    SettlementFailControl.prototype.setAlpha = function () {
        Laya.Tween.from(this.self["bg_black"], { alpha: 0 }, 1400);
        Laya.Tween.from(this.self["progressParent"], { alpha: 0 }, 1400);
    };
    SettlementFailControl.prototype.playSK = function () {
        var countTime = 10900;
        if (PlayingSceneControl_1.default.instance.roleHp > 0) {
            this.initiativeSettle = true;
            countTime = 1000;
        }
        Laya.timer.once(countTime, this, this.playAni);
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            this.initiativeSettle && this.sk_settlement.playbackRate(1000);
            this.sk_settlement.play("wujin_shibaifuhuo", false);
        }
        else {
            this.sk_settlement.play("shibaifuhuo", false);
        }
        this.stopListenerObj = this.sk_settlement.on(Laya.Event.STOPPED, this, this.playStoped);
        this.initiativeSettle = false;
    };
    /**
     * 监听播放骨骼动画停止
     */
    SettlementFailControl.prototype.playStoped = function () {
        // this.cownDown();
        // this.btn_revival.offAll();
        // this.playAni();
    };
    SettlementFailControl.prototype.setProgressBar = function () {
        this.label_haveEnemy = this.owner["label_haveEnemy"];
        this.progress_b = this.owner["progress_b"];
        var totalNums = BattleParse_1.default.getInstance().getTotalNums();
        var killEnemyS = BattleParse_1.default.getInstance().killEnemyS;
        this.label_haveEnemy.text = killEnemyS + "/" + totalNums;
        this.progress_b.mask.graphics.clear();
        this.progress_b.mask.graphics.drawRect(0, 0, (killEnemyS / totalNums) * 647, 50, "#ff0000");
        this.self["label_enmeyDec"].text = "剩余怪物数量：" + (totalNums - killEnemyS);
    };
    SettlementFailControl.prototype.clickRevival = function (e) {
        var _this = this;
        // if (PlayingVar.getInstance().gameModel === "endless") {
        //     Toast.noBindScript("即将增加复活!", this.owner)
        //     return;
        // }
        //观看广告中
        //this.btn_revival.alpha = 1;
        // Toast.noBindScript("广告观看完成!", this.owner);
        if (WeiXinAD_1.default.getInstance().adStatus) {
            Laya.Dialog.showLoadingPage();
            Laya.timer.pause();
            WeiXinAD_1.default.getInstance().addVideoAD(Laya.Handler.create(this, this.revivalFinish));
        }
        else {
            Laya.timer.once(500, this, function () {
                // Laya.timer.clearAll(this);
                // Laya.Tween.clearAll(this);
                // (this.owner as Laya.Dialog).closeEffect = null;
                // (this.owner as Laya.Dialog).close();
                // Laya.Scene.open("test/Settlement_dialog.scene");
                _this.cownDown();
            });
        }
    };
    SettlementFailControl.prototype.revivalFinish = function (suc) {
        var _this = this;
        Laya.timer.resume();
        Laya.timer.once(500, this, function () {
            Laya.Dialog.hideLoadingPage();
            if (suc) {
                _this.isRevival = true;
                _this.self.close();
            }
            else {
                _this.sk_settlement.resume();
            }
        });
    };
    SettlementFailControl.prototype.clickDirectSettlement = function () {
        Laya.timer.clearAll(this);
        this.sk_settlement.stop();
        this.sk_settlement.playbackRate(1000);
        this.sk_settlement.play(0, false);
        Laya.timer.once(10, this, this.playAni);
    };
    SettlementFailControl.prototype.playAni = function () {
        var _this = this;
        Laya.Tween.to(this.sk_settlement, { x: this.sk_settlement.x, y: 379 }, 400);
        var progressHide = ["label_distance", "label_0"];
        progressHide.forEach(function (item) {
            Laya.Tween.to(_this.self[item], { x: _this.self[item].x, y: 25 }, 400);
        });
        this.btn_revival.offAll();
        this.btn_settlement.offAll();
        var ani1 = this.self["ani1"];
        ani1.play(0, false);
        this.ani1Playing = ani1.isPlaying;
        console.error("状态~！！！！！！！", ani1.isPlaying);
        if (Playing_var_1.default.getInstance().gameModel === "endless") {
            EndlessManage_1.default.getInstance().exitEndless();
        }
    };
    SettlementFailControl.prototype.cownDown = function () {
        // Laya.timer.clearAll(this);
        // Laya.Tween.clearAll(this);
        // this.stopListenerObj.offAll();
        // (this.owner as Laya.Dialog).closeEffect = null;
        // (this.owner as Laya.Dialog).close();
        // //打开结算界面
        // Laya.Scene.open("test/Settlement_dialog.scene");
        BattleParse_1.default.deleteInstance();
        // Laya.Resource.destroyUnusedResources();
        this.self.close();
    };
    SettlementFailControl.prototype.onDestroy = function () {
        // const needClear = ["dragaonbones_settlement/LoseAndLose.sk", "dragaonbones_settlement/LoseAndLose.png", "settlement/金币底条.png", "settlement/进度条底.png", "settlement/进度条底_bar.png", "commonPic/黑色遮罩.png"];
        // PlayingControl.instance.clearResUrl(needClear, false);
        PlayingSceneControl_1.default.instance.clearSceneChildRes(this.self.url, false);
        // SkeletonTempletManage.getInstance().releaseAllTemplet();
        if (this.isRevival) {
            PlayingSceneControl_1.default.instance.resumeGame();
            role_1.default.instance.setRoleRevival();
            this.isRevival = null;
        }
        else {
            SkeletonTempletManage_1.default.getInstance().clearTextureRes();
            Laya.Scene.open("test/FacePlaying.scene", true);
        }
    };
    return SettlementFailControl;
}(Laya.Script));
exports.default = SettlementFailControl;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Connect/HttpError":24,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/AdaptScene":40,"../manage/BagDataControl":41,"../manage/EndlessManage":46,"../manage/Music":53,"../manage/Playing_var":55,"../manage/SkeletonTempletManage":57,"../manage/WeiXinAD":58,"../manage/toast":59,"../playing/BattleParse":60,"../playing/PlayingSceneControl":65,"../role/role":79}],96:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DataTables_1 = require("../Data/DataTables");
var JsonEnum_1 = require("../Data/JsonEnum");
var Music_1 = require("../manage/Music");
var MusicEnum_1 = require("../Data/MusicEnum");
var musicToUrl = MusicEnum_1.default.musicToUrl;
var DataType = JsonEnum_1.default.DataType;
var FixedDataTables = DataTables_1.default.FixedDataTables;
var BagDataControl_1 = require("../manage/BagDataControl");
var DialogEffect_1 = require("../manage/DialogEffect");
var Playing_var_1 = require("../manage/Playing_var");
var HttpClass_1 = require("../Connect/HttpClass");
var HttpEnum_1 = require("../Connect/HttpEnum");
var HttpError_1 = require("../Connect/HttpError");
var PlayingSceneControl_1 = require("../playing/PlayingSceneControl");
var ShopControl = /** @class */ (function (_super) {
    __extends(ShopControl, _super);
    function ShopControl() {
        var _this = _super.call(this) || this;
        _this.turnNum = 10;
        _this.turnSlowNum = 9;
        _this.speed = 60;
        _this.minSpeed = 200;
        return _this;
    }
    ShopControl.prototype.onEnable = function () {
        var _this = this;
        Music_1.default.getInstance().playSound(musicToUrl.ui_popup);
        var self = this.owner;
        this.canTouch = true;
        this.myGold = BagDataControl_1.default.getInstance().getBagDataById("101").num;
        this.weaponList = self["weapon_list"];
        this.weaponList.vScrollBarSkin = "";
        this.weaponList.selectEnable = false;
        this.weaponList.renderHandler = new Laya.Handler(this, this.updateItemWeaponData);
        var config_secondaryWeapon = FixedDataTables.getInstance().getData(DataType.secondaryWeapon);
        var keys = Object.keys(config_secondaryWeapon);
        var data = [];
        for (var m = 0; m < keys.length; m++) {
            var lockCondition = config_secondaryWeapon[keys[m]].unlock;
            //关卡解锁不放到这里~~~
            if (JSON.parse(lockCondition.split("|")[0]) === 1) {
                continue;
            }
            data.push(config_secondaryWeapon[keys[m]]);
        }
        var diamondData = FixedDataTables.getInstance().getData(DataType.item)["102"];
        data.push(diamondData);
        this.weaponList.array = data;
        //购买监听
        this.config_shop = FixedDataTables.getInstance().getData(DataType.shop);
        this.consumeGold = this.config_shop[1].one.split("#")[0].split("|");
        this.consumeGold_ten = this.config_shop[1].ten.split("#")[0].split("|");
        self["btn_buyOne"].on(Laya.Event.CLICK, this, this.requestData /*this.buyOne*/, [1]);
        self["btn_buyTen"].on(Laya.Event.CLICK, this, this.requestData /*this.buyTen*/, [2]);
        self["btn_close"].on(Laya.Event.CLICK, this, function () {
            Music_1.default.getInstance().playSound(musicToUrl.button_normal);
            // self.close();
            _this.dialogE.removeAnimation(Laya.Handler.create(_this, _this.closeDialog));
        });
        //初始化购买需要的金币数
        self["fc_cosumeOne"].value = "" + this.consumeGold[1];
        self["fc_consumeTen"].value = "" + this.consumeGold_ten[1];
        this.dialogE = new DialogEffect_1.default(self);
    };
    /**
     *
     * @param
     * 请求中奖数据
     */
    ShopControl.prototype.requestData = function (reqType) {
        var _this = this;
        if (!this.canTouch) {
            return;
        }
        Laya.Scene.showLoadingPage();
        this.canTouch = false;
        var args = { uuId: Playing_var_1.default.getInstance().uuId };
        var reqUrl = reqType == 1 ? (HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.ShopOnce) : (HttpEnum_1.default.URLSERVER + HttpEnum_1.default.httpUrls.ShopTen);
        new HttpClass_1.default.HttpClass(Laya.Handler.create(this, function (e) {
            // console.error(e);
            Laya.Scene.hideLoadingPage();
            Music_1.default.getInstance().playSound(reqType === 1 ? musicToUrl.lottery_single : musicToUrl.lottery_ten);
            if (reqType === 1) {
                _this.buyOne(e);
            }
            else {
                _this.buyTen(e);
                console.error("10连抽~~~~~~~");
            }
        }), reqUrl, JSON.stringify(args));
    };
    ShopControl.prototype.buyOne = function (e) {
        if (e.ret) {
            if (e.ret == -7) {
                //打开购买体力
                // toast.noBindScript("体力不足,请前往购买!", this.owner);
                var dec = "消耗的物品数量不足,是否前往获得？";
                Laya.Scene.open("test/popDialog.scene", false, { "txt": dec, type: 0 });
            }
            else {
                new HttpError_1.default.HttpError(e.ret, this.owner);
            }
        }
        else {
            this.markE = e;
            this.markTime = 0;
            this.nowTurn = 0;
            this.stopIndex = e.bagSecondaryWeapon ? Number(Object.keys(JSON.parse(e.bagSecondaryWeapon))) - 206 + 1 : 6;
            console.error("抽卡需要停止的位置~", this.stopIndex);
            this.nowIndex = 0;
            this.speed = 60;
            this.runLight = true;
            // BagDataControl.getInstance().updateBagDate_new(e);
            // Laya.Scene.open("test/obtainGoods.scene", false, e, Laya.Handler.create(this, (o: Laya.Dialog) => {
            //     const dialogControl: RewardDialogControl = o.getComponent(Laya.Script);
            //     dialogControl.onOpened(e);
            //     this.canTouch = true;
            // }));
        }
    };
    ShopControl.prototype.openObtainGoodsScene = function () {
        var _this = this;
        var e = this.markE;
        Laya.Scene.open("test/obtainGoods.scene", false, e, Laya.Handler.create(this, function (o) {
            var dialogControl = o.getComponent(Laya.Script);
            dialogControl.onOpened(e);
            _this.canTouch = true;
        }));
    };
    ShopControl.prototype.buyTen = function (e) {
        var _this = this;
        Laya.Scene.open("test/obtainGoodsTen.scene", false, e, Laya.Handler.create(this, function (o) {
            var dialogControl = o.getComponent(Laya.Script);
            dialogControl.opened(e);
            _this.canTouch = true;
        }));
    };
    ShopControl.prototype.updateItemWeaponData = function (cell, index) {
        var data = cell.dataSource;
        var cellButton = cell.getChildAt(0);
        cellButton.skin = "shop/商品框.png";
        cell.getChildByName("weaponName").text = data.name;
        if (!data.pic) {
            cell.getChildByName("img_icon").skin = "commonPic/" + "钻石大图标" + ".png";
        }
        else {
            cell.getChildByName("img_icon").skin = "shop/" + data.pic + "_shop.png";
        }
    };
    //跑马灯
    ShopControl.prototype.onUpdate = function () {
        if (this.runLight) {
            if (this.markTime !== (void 0) && (Date.now() - this.markTime >= this.speed)) {
                this.markTime = Date.now();
                var cells = this.weaponList.cells;
                var i = 0;
                for (i; i < 6; i++) {
                    var selectImg = cells[i].getChildAt(1);
                    selectImg.visible = (i === this.nowIndex);
                }
                this.nowIndex++;
                if (this.nowTurn >= (this.turnSlowNum - 1)) {
                    this.speed += 10;
                    if (this.speed <= this.minSpeed) {
                        this.speed = this.minSpeed;
                    }
                }
                if (this.nowTurn === this.turnNum - 1 && this.nowIndex === this.stopIndex) {
                    //停止 弹结果
                    this.runLight = false;
                    Laya.timer.once(100, this, this.openObtainGoodsScene);
                }
                if (this.nowIndex >= 6) {
                    this.nowIndex = 0;
                    this.nowTurn === (void 0) && (this.nowTurn = 0);
                    this.nowTurn++;
                }
            }
        }
    };
    ShopControl.prototype.closeDialog = function () {
        Laya.timer.clearAll(this);
        this.owner.close();
        this.dialogE = null;
    };
    ShopControl.prototype.onDestroy = function () {
        var urls = ["commonPic/黑色遮罩.png", "shop/界面底板.png", "shop/信息条.png", "shop/商店标题.png", "shop/界面二级底板.png"];
        PlayingSceneControl_1.default.instance.clearResUrl(urls, true);
        console.log("销毁商城~!");
    };
    return ShopControl;
}(Laya.Script));
exports.default = ShopControl;
},{"../Connect/HttpClass":22,"../Connect/HttpEnum":23,"../Connect/HttpError":24,"../Data/DataTables":25,"../Data/JsonEnum":26,"../Data/MusicEnum":27,"../manage/BagDataControl":41,"../manage/DialogEffect":43,"../manage/Music":53,"../manage/Playing_var":55,"../playing/PlayingSceneControl":65}],97:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UpdateItemEffectControl = /** @class */ (function (_super) {
    __extends(UpdateItemEffectControl, _super);
    function UpdateItemEffectControl() {
        return _super.call(this) || this;
    }
    UpdateItemEffectControl.prototype.onEnable = function () {
        this.self = this.owner;
        this.self.on(Laya.Event.STOPPED, this, this.playFinished);
        this.canPlay && this.self.play(0, false);
    };
    UpdateItemEffectControl.prototype.onUpdate = function () {
        if (!this.canPlay && this.self.templet) {
            this.canPlay = true;
            this.self.play(0, false);
        }
    };
    UpdateItemEffectControl.prototype.playFinished = function () {
        this.self.removeSelf();
    };
    UpdateItemEffectControl.prototype.onDisable = function () {
        Laya.Pool.recover("UpdateWeapon", this.self);
    };
    return UpdateItemEffectControl;
}(Laya.Script));
exports.default = UpdateItemEffectControl;
},{}],98:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var View = Laya.View;
var Dialog = Laya.Dialog;
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var Achievement_dialogUI = /** @class */ (function (_super) {
            __extends(Achievement_dialogUI, _super);
            function Achievement_dialogUI() {
                return _super.call(this) || this;
            }
            Achievement_dialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/Achievement_dialog");
            };
            return Achievement_dialogUI;
        }(Dialog));
        test.Achievement_dialogUI = Achievement_dialogUI;
        REG("ui.test.Achievement_dialogUI", Achievement_dialogUI);
        var CheckIn_dialogUI = /** @class */ (function (_super) {
            __extends(CheckIn_dialogUI, _super);
            function CheckIn_dialogUI() {
                return _super.call(this) || this;
            }
            CheckIn_dialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/CheckIn_dialog");
            };
            return CheckIn_dialogUI;
        }(Dialog));
        test.CheckIn_dialogUI = CheckIn_dialogUI;
        REG("ui.test.CheckIn_dialogUI", CheckIn_dialogUI);
        var ExchangeDialogUI = /** @class */ (function (_super) {
            __extends(ExchangeDialogUI, _super);
            function ExchangeDialogUI() {
                return _super.call(this) || this;
            }
            ExchangeDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/ExchangeDialog");
            };
            return ExchangeDialogUI;
        }(Dialog));
        test.ExchangeDialogUI = ExchangeDialogUI;
        REG("ui.test.ExchangeDialogUI", ExchangeDialogUI);
        var faceFighting_loadingSceneUI = /** @class */ (function (_super) {
            __extends(faceFighting_loadingSceneUI, _super);
            function faceFighting_loadingSceneUI() {
                return _super.call(this) || this;
            }
            faceFighting_loadingSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/faceFighting_loadingScene");
            };
            return faceFighting_loadingSceneUI;
        }(Scene));
        test.faceFighting_loadingSceneUI = faceFighting_loadingSceneUI;
        REG("ui.test.faceFighting_loadingSceneUI", faceFighting_loadingSceneUI);
        var FacePlayingUI = /** @class */ (function (_super) {
            __extends(FacePlayingUI, _super);
            function FacePlayingUI() {
                return _super.call(this) || this;
            }
            FacePlayingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/FacePlaying");
            };
            return FacePlayingUI;
        }(Scene));
        test.FacePlayingUI = FacePlayingUI;
        REG("ui.test.FacePlayingUI", FacePlayingUI);
        var GameFail_dialogUI = /** @class */ (function (_super) {
            __extends(GameFail_dialogUI, _super);
            function GameFail_dialogUI() {
                return _super.call(this) || this;
            }
            GameFail_dialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/GameFail_dialog");
            };
            return GameFail_dialogUI;
        }(Dialog));
        test.GameFail_dialogUI = GameFail_dialogUI;
        REG("ui.test.GameFail_dialogUI", GameFail_dialogUI);
        var GameFail_dialogbakUI = /** @class */ (function (_super) {
            __extends(GameFail_dialogbakUI, _super);
            function GameFail_dialogbakUI() {
                return _super.call(this) || this;
            }
            GameFail_dialogbakUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/GameFail_dialogbak");
            };
            return GameFail_dialogbakUI;
        }(Dialog));
        test.GameFail_dialogbakUI = GameFail_dialogbakUI;
        REG("ui.test.GameFail_dialogbakUI", GameFail_dialogbakUI);
        var LotteryUI = /** @class */ (function (_super) {
            __extends(LotteryUI, _super);
            function LotteryUI() {
                return _super.call(this) || this;
            }
            LotteryUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/Lottery");
            };
            return LotteryUI;
        }(Dialog));
        test.LotteryUI = LotteryUI;
        REG("ui.test.LotteryUI", LotteryUI);
        var obtainGoodsUI = /** @class */ (function (_super) {
            __extends(obtainGoodsUI, _super);
            function obtainGoodsUI() {
                return _super.call(this) || this;
            }
            obtainGoodsUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/obtainGoods");
            };
            return obtainGoodsUI;
        }(Dialog));
        test.obtainGoodsUI = obtainGoodsUI;
        REG("ui.test.obtainGoodsUI", obtainGoodsUI);
        var obtainGoodsTenUI = /** @class */ (function (_super) {
            __extends(obtainGoodsTenUI, _super);
            function obtainGoodsTenUI() {
                return _super.call(this) || this;
            }
            obtainGoodsTenUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/obtainGoodsTen");
            };
            return obtainGoodsTenUI;
        }(Dialog));
        test.obtainGoodsTenUI = obtainGoodsTenUI;
        REG("ui.test.obtainGoodsTenUI", obtainGoodsTenUI);
        var popDialogUI = /** @class */ (function (_super) {
            __extends(popDialogUI, _super);
            function popDialogUI() {
                return _super.call(this) || this;
            }
            popDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/popDialog");
            };
            return popDialogUI;
        }(Dialog));
        test.popDialogUI = popDialogUI;
        REG("ui.test.popDialogUI", popDialogUI);
        var RankingUI = /** @class */ (function (_super) {
            __extends(RankingUI, _super);
            function RankingUI() {
                return _super.call(this) || this;
            }
            RankingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/Ranking");
            };
            return RankingUI;
        }(View));
        test.RankingUI = RankingUI;
        REG("ui.test.RankingUI", RankingUI);
        var ReqLoadingUI = /** @class */ (function (_super) {
            __extends(ReqLoadingUI, _super);
            function ReqLoadingUI() {
                return _super.call(this) || this;
            }
            ReqLoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/ReqLoading");
            };
            return ReqLoadingUI;
        }(Dialog));
        test.ReqLoadingUI = ReqLoadingUI;
        REG("ui.test.ReqLoadingUI", ReqLoadingUI);
        var SetUI = /** @class */ (function (_super) {
            __extends(SetUI, _super);
            function SetUI() {
                return _super.call(this) || this;
            }
            SetUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/Set");
            };
            return SetUI;
        }(Dialog));
        test.SetUI = SetUI;
        REG("ui.test.SetUI", SetUI);
        var Settlement_dialogUI = /** @class */ (function (_super) {
            __extends(Settlement_dialogUI, _super);
            function Settlement_dialogUI() {
                return _super.call(this) || this;
            }
            Settlement_dialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/Settlement_dialog");
            };
            return Settlement_dialogUI;
        }(Dialog));
        test.Settlement_dialogUI = Settlement_dialogUI;
        REG("ui.test.Settlement_dialogUI", Settlement_dialogUI);
        var ShopDialogUI = /** @class */ (function (_super) {
            __extends(ShopDialogUI, _super);
            function ShopDialogUI() {
                return _super.call(this) || this;
            }
            ShopDialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/ShopDialog");
            };
            return ShopDialogUI;
        }(Dialog));
        test.ShopDialogUI = ShopDialogUI;
        REG("ui.test.ShopDialogUI", ShopDialogUI);
        var skillsToChooseUI = /** @class */ (function (_super) {
            __extends(skillsToChooseUI, _super);
            function skillsToChooseUI() {
                return _super.call(this) || this;
            }
            skillsToChooseUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/skillsToChoose");
            };
            return skillsToChooseUI;
        }(Dialog));
        test.skillsToChooseUI = skillsToChooseUI;
        REG("ui.test.skillsToChooseUI", skillsToChooseUI);
        var suspendInterfaceUI = /** @class */ (function (_super) {
            __extends(suspendInterfaceUI, _super);
            function suspendInterfaceUI() {
                return _super.call(this) || this;
            }
            suspendInterfaceUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/suspendInterface");
            };
            return suspendInterfaceUI;
        }(Dialog));
        test.suspendInterfaceUI = suspendInterfaceUI;
        REG("ui.test.suspendInterfaceUI", suspendInterfaceUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
